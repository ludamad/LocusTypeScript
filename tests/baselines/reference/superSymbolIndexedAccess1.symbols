=== tests/cases/conformance/expressions/superPropertyAccess/superSymbolIndexedAccess1.ts ===
var symbol = Symbol.for('myThing');
>symbol : Symbol(symbol, Decl(superSymbolIndexedAccess1.ts, 0, 3))
>Symbol.for : Symbol(SymbolConstructor.for, Decl(lib.d.ts, 3861, 42))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 3839, 102), Decl(lib.d.ts, 3945, 11))
>for : Symbol(SymbolConstructor.for, Decl(lib.d.ts, 3861, 42))

class Foo {
>Foo : Symbol(Foo, Decl(superSymbolIndexedAccess1.ts, 0, 35))

    [symbol]() {
>symbol : Symbol(symbol, Decl(superSymbolIndexedAccess1.ts, 0, 3))

        return 0;
    }
}

class Bar extends Foo {
>Bar : Symbol(Bar, Decl(superSymbolIndexedAccess1.ts, 6, 1))
>Foo : Symbol(Foo, Decl(superSymbolIndexedAccess1.ts, 0, 35))

    [symbol]() {
>symbol : Symbol(symbol, Decl(superSymbolIndexedAccess1.ts, 0, 3))

        return super[symbol]();
>super : Symbol(Foo, Decl(superSymbolIndexedAccess1.ts, 0, 35))
>symbol : Symbol(symbol, Decl(superSymbolIndexedAccess1.ts, 0, 3))
    }
}
