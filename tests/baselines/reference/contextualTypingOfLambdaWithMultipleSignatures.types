=== tests/cases/compiler/contextualTypingOfLambdaWithMultipleSignatures.ts ===
interface Foo {
>Foo : Foo, Symbol(Foo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 0, 0))

    getFoo(n: number): void;
>getFoo : { (n: number): void; (s: string): void; }, Symbol(getFoo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 0, 15), Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 1, 28))
>n : number, Symbol(n, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 1, 11))

    getFoo(s: string): void;
>getFoo : { (n: number): void; (s: string): void; }, Symbol(getFoo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 0, 15), Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 1, 28))
>s : string, Symbol(s, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 2, 11))
}

var foo: Foo;
>foo : Foo, Symbol(foo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 5, 3))
>Foo : Foo, Symbol(Foo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 0, 0))

foo.getFoo = bar => { };
>foo.getFoo = bar => { } : (bar: any) => void
>foo.getFoo : { (n: number): void; (s: string): void; }, Symbol(Foo.getFoo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 0, 15), Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 1, 28))
>foo : Foo, Symbol(foo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 5, 3))
>getFoo : { (n: number): void; (s: string): void; }, Symbol(Foo.getFoo, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 0, 15), Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 1, 28))
>bar => { } : (bar: any) => void
>bar : any, Symbol(bar, Decl(contextualTypingOfLambdaWithMultipleSignatures.ts, 6, 12))

