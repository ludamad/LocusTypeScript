=== tests/cases/compiler/genericBaseClassLiteralProperty2.ts ===
class CollectionItem2 { }
>CollectionItem2 : CollectionItem2, Symbol(CollectionItem2,Decl(genericBaseClassLiteralProperty2.ts,0,0))

class BaseCollection2<TItem extends CollectionItem2> {
>BaseCollection2 : BaseCollection2<TItem>, Symbol(BaseCollection2,Decl(genericBaseClassLiteralProperty2.ts,0,25))
>TItem : TItem, Symbol(TItem,Decl(genericBaseClassLiteralProperty2.ts,2,22))
>CollectionItem2 : CollectionItem2, Symbol(CollectionItem2,Decl(genericBaseClassLiteralProperty2.ts,0,0))

    _itemsByKey: { [key: string]: TItem; };
>_itemsByKey : { [key: string]: TItem; }, Symbol(_itemsByKey,Decl(genericBaseClassLiteralProperty2.ts,2,54))
>key : string, Symbol(key,Decl(genericBaseClassLiteralProperty2.ts,3,20))
>TItem : TItem, Symbol(TItem,Decl(genericBaseClassLiteralProperty2.ts,2,22))

    constructor() {
        this._itemsByKey = {};
>this._itemsByKey = {} : { [x: string]: undefined; }
>this._itemsByKey : { [key: string]: TItem; }, Symbol(_itemsByKey,Decl(genericBaseClassLiteralProperty2.ts,2,54))
>this : BaseCollection2<TItem>, Symbol(BaseCollection2,Decl(genericBaseClassLiteralProperty2.ts,0,25))
>_itemsByKey : { [key: string]: TItem; }, Symbol(_itemsByKey,Decl(genericBaseClassLiteralProperty2.ts,2,54))
>{} : { [x: string]: undefined; }
    }
}

class DataView2 extends BaseCollection2<CollectionItem2> {
>DataView2 : DataView2, Symbol(DataView2,Decl(genericBaseClassLiteralProperty2.ts,7,1))
>BaseCollection2 : BaseCollection2<TItem>, Symbol(BaseCollection2,Decl(genericBaseClassLiteralProperty2.ts,0,25))
>CollectionItem2 : CollectionItem2, Symbol(CollectionItem2,Decl(genericBaseClassLiteralProperty2.ts,0,0))

    fillItems(item: CollectionItem2) {
>fillItems : (item: CollectionItem2) => void, Symbol(fillItems,Decl(genericBaseClassLiteralProperty2.ts,9,58))
>item : CollectionItem2, Symbol(item,Decl(genericBaseClassLiteralProperty2.ts,10,14))
>CollectionItem2 : CollectionItem2, Symbol(CollectionItem2,Decl(genericBaseClassLiteralProperty2.ts,0,0))

        this._itemsByKey['dummy'] = item;
>this._itemsByKey['dummy'] = item : CollectionItem2
>this._itemsByKey['dummy'] : CollectionItem2
>this._itemsByKey : { [key: string]: CollectionItem2; }, Symbol(BaseCollection2._itemsByKey,Decl(genericBaseClassLiteralProperty2.ts,2,54))
>this : DataView2, Symbol(DataView2,Decl(genericBaseClassLiteralProperty2.ts,7,1))
>_itemsByKey : { [key: string]: CollectionItem2; }, Symbol(BaseCollection2._itemsByKey,Decl(genericBaseClassLiteralProperty2.ts,2,54))
>'dummy' : string
>item : CollectionItem2, Symbol(item,Decl(genericBaseClassLiteralProperty2.ts,10,14))
    }
}

