=== tests/cases/compiler/genericCallWithFixedArguments.ts ===
class A { foo() { } }
>A : A, Symbol(A,Decl(genericCallWithFixedArguments.ts,0,0))
>foo : () => void, Symbol(foo,Decl(genericCallWithFixedArguments.ts,0,9))

class B { bar() { }} 
>B : B, Symbol(B,Decl(genericCallWithFixedArguments.ts,0,21))
>bar : () => void, Symbol(bar,Decl(genericCallWithFixedArguments.ts,1,9))

function g<T, U>(x) { }
>g : <T, U>(x: any) => void, Symbol(g,Decl(genericCallWithFixedArguments.ts,1,20))
>T : T, Symbol(T,Decl(genericCallWithFixedArguments.ts,3,11))
>U : U, Symbol(U,Decl(genericCallWithFixedArguments.ts,3,13))
>x : any, Symbol(x,Decl(genericCallWithFixedArguments.ts,3,17))

g<A, B>(7) // the parameter list is fixed, so this should not error
>g<A, B>(7) : void
>g : <T, U>(x: any) => void, Symbol(g,Decl(genericCallWithFixedArguments.ts,1,20))
>A : A, Symbol(A,Decl(genericCallWithFixedArguments.ts,0,0))
>B : B, Symbol(B,Decl(genericCallWithFixedArguments.ts,0,21))
>7 : number
 

