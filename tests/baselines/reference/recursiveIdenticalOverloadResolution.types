=== tests/cases/compiler/recursiveIdenticalOverloadResolution.ts ===

module M {
>M : typeof M, Symbol(M,Decl(recursiveIdenticalOverloadResolution.ts,0,0))

   interface I { (i: I): I; }
>I : I, Symbol(I,Decl(recursiveIdenticalOverloadResolution.ts,1,10))
>i : I, Symbol(i,Decl(recursiveIdenticalOverloadResolution.ts,3,18))
>I : I, Symbol(I,Decl(recursiveIdenticalOverloadResolution.ts,1,10))
>I : I, Symbol(I,Decl(recursiveIdenticalOverloadResolution.ts,1,10))

   function f(p: I) { return f };
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>p : I, Symbol(p,Decl(recursiveIdenticalOverloadResolution.ts,5,14))
>I : I, Symbol(I,Decl(recursiveIdenticalOverloadResolution.ts,1,10))
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))

   var i: I;
>i : I, Symbol(i,Decl(recursiveIdenticalOverloadResolution.ts,7,6))
>I : I, Symbol(I,Decl(recursiveIdenticalOverloadResolution.ts,1,10))

   f(i);
>f(i) : (p: I) => typeof f
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>i : I, Symbol(i,Decl(recursiveIdenticalOverloadResolution.ts,7,6))

   f(f(i));
>f(f(i)) : (p: I) => typeof f
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>f(i) : (p: I) => typeof f
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>i : I, Symbol(i,Decl(recursiveIdenticalOverloadResolution.ts,7,6))

   f((f(f(i))));
>f((f(f(i)))) : (p: I) => typeof f
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>(f(f(i))) : (p: I) => typeof f
>f(f(i)) : (p: I) => typeof f
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>f(i) : (p: I) => typeof f
>f : (p: I) => typeof f, Symbol(f,Decl(recursiveIdenticalOverloadResolution.ts,3,29))
>i : I, Symbol(i,Decl(recursiveIdenticalOverloadResolution.ts,7,6))

}

