=== tests/cases/compiler/cloduleAndTypeParameters.ts ===
class Foo<T extends Foo.Bar> {
>Foo : Foo<T>, Symbol(Foo, Decl(cloduleAndTypeParameters.ts, 0, 0), Decl(cloduleAndTypeParameters.ts, 3, 1))
>T : T, Symbol(T, Decl(cloduleAndTypeParameters.ts, 0, 10))
>Foo : any, Symbol(Foo, Decl(cloduleAndTypeParameters.ts, 0, 0), Decl(cloduleAndTypeParameters.ts, 3, 1))
>Bar : Foo.Bar, Symbol(Foo.Bar, Decl(cloduleAndTypeParameters.ts, 5, 12))

  constructor() {
  }
}

module Foo {
>Foo : typeof Foo, Symbol(Foo, Decl(cloduleAndTypeParameters.ts, 0, 0), Decl(cloduleAndTypeParameters.ts, 3, 1))

  export interface Bar {
>Bar : Bar, Symbol(Bar, Decl(cloduleAndTypeParameters.ts, 5, 12))

    bar(): void;
>bar : () => void, Symbol(bar, Decl(cloduleAndTypeParameters.ts, 6, 24))
  }

  export class Baz {
>Baz : Baz, Symbol(Baz, Decl(cloduleAndTypeParameters.ts, 8, 3))
  }
}
