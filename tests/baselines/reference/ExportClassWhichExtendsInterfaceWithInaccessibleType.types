=== tests/cases/conformance/internalModules/exportDeclarations/ExportClassWhichExtendsInterfaceWithInaccessibleType.ts ===
module A {
>A : typeof A, Symbol(A,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,0,0))

    interface Point {
>Point : Point, Symbol(Point,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,0,10))

        x: number;
>x : number, Symbol(x,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,2,21))

        y: number;
>y : number, Symbol(y,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,3,18))

        fromOrigin(p: Point): number;
>fromOrigin : (p: Point) => number, Symbol(fromOrigin,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,4,18))
>p : Point, Symbol(p,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,6,19))
>Point : Point, Symbol(Point,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,0,10))
    }

    export class Point2d implements Point {
>Point2d : Point2d, Symbol(Point2d,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,7,5))
>Point : Point, Symbol(Point,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,0,10))

        constructor(public x: number, public y: number) { }
>x : number, Symbol(x,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,10,20))
>y : number, Symbol(y,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,10,37))

        fromOrigin(p: Point) {
>fromOrigin : (p: Point) => number, Symbol(fromOrigin,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,10,59))
>p : Point, Symbol(p,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,12,19))
>Point : Point, Symbol(Point,Decl(ExportClassWhichExtendsInterfaceWithInaccessibleType.ts,0,10))

            return 1;
>1 : number
        }
    }
}


