=== tests/cases/compiler/declFileModuleAssignmentInObjectLiteralProperty.ts ===

module m1 {
>m1 : typeof m1, Symbol(m1,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,0,0))

    export class c {
>c : c, Symbol(c,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,1,11))
    }
}
var d = {
>d : { m1: { m: typeof m1; }; m2: { c: typeof m1.c; }; }, Symbol(d,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,5,3))
>{    m1: { m: m1 },    m2: { c: m1.c },} : { m1: { m: typeof m1; }; m2: { c: typeof m1.c; }; }

    m1: { m: m1 },
>m1 : { m: typeof m1; }, Symbol(m1,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,5,9))
>{ m: m1 } : { m: typeof m1; }
>m : typeof m1, Symbol(m,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,6,9))
>m1 : typeof m1, Symbol(m1,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,0,0))

    m2: { c: m1.c },
>m2 : { c: typeof m1.c; }, Symbol(m2,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,6,18))
>{ c: m1.c } : { c: typeof m1.c; }
>c : typeof m1.c, Symbol(c,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,7,9))
>m1.c : typeof m1.c, Symbol(m1.c,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,1,11))
>m1 : typeof m1, Symbol(m1,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,0,0))
>c : typeof m1.c, Symbol(m1.c,Decl(declFileModuleAssignmentInObjectLiteralProperty.ts,1,11))

};
