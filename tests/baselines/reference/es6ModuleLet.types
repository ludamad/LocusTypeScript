=== tests/cases/compiler/es6ModuleLet.ts ===
export let a = "hello";
>a : string, Symbol(a,Decl(es6ModuleLet.ts,0,10))
>"hello" : string

export let x: string = a, y = x;
>x : string, Symbol(x,Decl(es6ModuleLet.ts,1,10))
>a : string, Symbol(a,Decl(es6ModuleLet.ts,0,10))
>y : string, Symbol(y,Decl(es6ModuleLet.ts,1,25))
>x : string, Symbol(x,Decl(es6ModuleLet.ts,1,10))

let b = y;
>b : string, Symbol(b,Decl(es6ModuleLet.ts,2,3))
>y : string, Symbol(y,Decl(es6ModuleLet.ts,1,25))

let c: string = b, d = c;
>c : string, Symbol(c,Decl(es6ModuleLet.ts,3,3))
>b : string, Symbol(b,Decl(es6ModuleLet.ts,2,3))
>d : string, Symbol(d,Decl(es6ModuleLet.ts,3,18))
>c : string, Symbol(c,Decl(es6ModuleLet.ts,3,3))

export module m1 {
>m1 : typeof m1, Symbol(m1,Decl(es6ModuleLet.ts,3,25))

    export let k = a;
>k : string, Symbol(k,Decl(es6ModuleLet.ts,5,14))
>a : string, Symbol(a,Decl(es6ModuleLet.ts,0,10))

    export let l: string = b, m = k;
>l : string, Symbol(l,Decl(es6ModuleLet.ts,6,14))
>b : string, Symbol(b,Decl(es6ModuleLet.ts,2,3))
>m : string, Symbol(m,Decl(es6ModuleLet.ts,6,29))
>k : string, Symbol(k,Decl(es6ModuleLet.ts,5,14))

    let n = m1.k;
>n : string, Symbol(n,Decl(es6ModuleLet.ts,7,7))
>m1.k : string, Symbol(k,Decl(es6ModuleLet.ts,5,14))
>m1 : typeof m1, Symbol(m1,Decl(es6ModuleLet.ts,3,25))
>k : string, Symbol(k,Decl(es6ModuleLet.ts,5,14))

    let o: string = n, p = k;
>o : string, Symbol(o,Decl(es6ModuleLet.ts,8,7))
>n : string, Symbol(n,Decl(es6ModuleLet.ts,7,7))
>p : string, Symbol(p,Decl(es6ModuleLet.ts,8,22))
>k : string, Symbol(k,Decl(es6ModuleLet.ts,5,14))
}
module m2 {
>m2 : typeof m2, Symbol(m2,Decl(es6ModuleLet.ts,9,1))

    export let k = a;
>k : string, Symbol(k,Decl(es6ModuleLet.ts,11,14))
>a : string, Symbol(a,Decl(es6ModuleLet.ts,0,10))

    export let l: string = b, m = k;
>l : string, Symbol(l,Decl(es6ModuleLet.ts,12,14))
>b : string, Symbol(b,Decl(es6ModuleLet.ts,2,3))
>m : string, Symbol(m,Decl(es6ModuleLet.ts,12,29))
>k : string, Symbol(k,Decl(es6ModuleLet.ts,11,14))

    let n = m1.k;
>n : string, Symbol(n,Decl(es6ModuleLet.ts,13,7))
>m1.k : string, Symbol(m1.k,Decl(es6ModuleLet.ts,5,14))
>m1 : typeof m1, Symbol(m1,Decl(es6ModuleLet.ts,3,25))
>k : string, Symbol(m1.k,Decl(es6ModuleLet.ts,5,14))

    let o: string = n, p = k;
>o : string, Symbol(o,Decl(es6ModuleLet.ts,14,7))
>n : string, Symbol(n,Decl(es6ModuleLet.ts,13,7))
>p : string, Symbol(p,Decl(es6ModuleLet.ts,14,22))
>k : string, Symbol(k,Decl(es6ModuleLet.ts,11,14))
}
