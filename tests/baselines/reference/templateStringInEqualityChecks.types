=== tests/cases/conformance/es6/templates/templateStringInEqualityChecks.ts ===
var x = `abc${0}abc` === `abc` ||
>x : boolean, Symbol(x, Decl(templateStringInEqualityChecks.ts, 0, 3))
>`abc${0}abc` === `abc` ||        `abc` !== `abc${0}abc` &&        `abc${0}abc` == "abc0abc" &&        "abc0abc" !== `abc${0}abc` : boolean
>`abc${0}abc` === `abc` : boolean
>`abc${0}abc` : string
>0 : number
>`abc` : string

        `abc` !== `abc${0}abc` &&
>`abc` !== `abc${0}abc` &&        `abc${0}abc` == "abc0abc" &&        "abc0abc" !== `abc${0}abc` : boolean
>`abc` !== `abc${0}abc` &&        `abc${0}abc` == "abc0abc" : boolean
>`abc` !== `abc${0}abc` : boolean
>`abc` : string
>`abc${0}abc` : string
>0 : number

        `abc${0}abc` == "abc0abc" &&
>`abc${0}abc` == "abc0abc" : boolean
>`abc${0}abc` : string
>0 : number
>"abc0abc" : string

        "abc0abc" !== `abc${0}abc`;
>"abc0abc" !== `abc${0}abc` : boolean
>"abc0abc" : string
>`abc${0}abc` : string
>0 : number

