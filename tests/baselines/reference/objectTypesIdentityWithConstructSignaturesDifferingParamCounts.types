=== tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts ===
// object types are identical structurally

class B {
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

    constructor(x: string, y: string) { return null; }
>x : string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,3,16))
>y : string, Symbol(y,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,3,26))
>null : null
}

class C<T> {
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))
>T : T, Symbol(T,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,6,8))

    constructor(x: T, y: T) { return null; }
>x : T, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,7,16))
>T : T, Symbol(T,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,6,8))
>y : T, Symbol(y,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,7,21))
>T : T, Symbol(T,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,6,8))
>null : null
}

interface I {
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

    new(x: string): string;
>x : string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,11,8))
}

interface I2<T> {
>I2 : I2<T>, Symbol(I2,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,12,1))
>T : T, Symbol(T,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,14,13))

    new(x: T): T;
>x : T, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,15,8))
>T : T, Symbol(T,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,14,13))
>T : T, Symbol(T,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,14,13))
}

var a: { new(x: string, y: string): string }
>a : new (x: string, y: string) => string, Symbol(a,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,3))
>x : string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,13))
>y : string, Symbol(y,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,23))

var b = { new(x: string) { return ''; } }; // not a construct signature, function called new
>b : { new(x: string): string; }, Symbol(b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,3))
>{ new(x: string) { return ''; } } : { new(x: string): string; }
>new : (x: string) => string, Symbol(new,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,9))
>x : string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,14))
>'' : string

function foo1b(x: B);
>foo1b : { (x: B): any; (x: B): any; }, Symbol(foo1b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,42),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,21,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,22,21))
>x : B, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,21,15))
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

function foo1b(x: B); // error
>foo1b : { (x: B): any; (x: B): any; }, Symbol(foo1b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,42),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,21,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,22,21))
>x : B, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,22,15))
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

function foo1b(x: any) { }
>foo1b : { (x: B): any; (x: B): any; }, Symbol(foo1b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,42),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,21,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,22,21))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,23,15))

function foo1c(x: C<string>);
>foo1c : { (x: C<string>): any; (x: C<string>): any; }, Symbol(foo1c,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,23,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,25,29),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,26,29))
>x : C<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,25,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))

function foo1c(x: C<string>); // error
>foo1c : { (x: C<string>): any; (x: C<string>): any; }, Symbol(foo1c,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,23,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,25,29),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,26,29))
>x : C<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,26,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))

function foo1c(x: any) { }
>foo1c : { (x: C<string>): any; (x: C<string>): any; }, Symbol(foo1c,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,23,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,25,29),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,26,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,27,15))

function foo2(x: I);
>foo2 : { (x: I): any; (x: I): any; }, Symbol(foo2,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,27,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,29,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,30,20))
>x : I, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,29,14))
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

function foo2(x: I); // error
>foo2 : { (x: I): any; (x: I): any; }, Symbol(foo2,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,27,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,29,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,30,20))
>x : I, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,30,14))
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

function foo2(x: any) { }
>foo2 : { (x: I): any; (x: I): any; }, Symbol(foo2,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,27,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,29,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,30,20))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,31,14))

function foo3(x: typeof a);
>foo3 : { (x: new (x: string, y: string) => string): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo3,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,31,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,33,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,34,27))
>x : new (x: string, y: string) => string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,33,14))
>a : new (x: string, y: string) => string, Symbol(a,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,3))

function foo3(x: typeof a); // error
>foo3 : { (x: new (x: string, y: string) => string): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo3,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,31,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,33,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,34,27))
>x : new (x: string, y: string) => string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,34,14))
>a : new (x: string, y: string) => string, Symbol(a,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,3))

function foo3(x: any) { }
>foo3 : { (x: new (x: string, y: string) => string): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo3,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,31,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,33,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,34,27))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,35,14))

function foo4(x: typeof b);
>foo4 : { (x: { new(x: string): string; }): any; (x: { new(x: string): string; }): any; }, Symbol(foo4,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,35,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,37,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,38,27))
>x : { new(x: string): string; }, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,37,14))
>b : { new(x: string): string; }, Symbol(b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,3))

function foo4(x: typeof b); // error
>foo4 : { (x: { new(x: string): string; }): any; (x: { new(x: string): string; }): any; }, Symbol(foo4,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,35,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,37,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,38,27))
>x : { new(x: string): string; }, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,38,14))
>b : { new(x: string): string; }, Symbol(b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,3))

function foo4(x: any) { }
>foo4 : { (x: { new(x: string): string; }): any; (x: { new(x: string): string; }): any; }, Symbol(foo4,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,35,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,37,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,38,27))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,39,14))

function foo8(x: B);
>foo8 : { (x: B): any; (x: I): any; }, Symbol(foo8,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,39,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,41,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,42,20))
>x : B, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,41,14))
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

function foo8(x: I); // ok
>foo8 : { (x: B): any; (x: I): any; }, Symbol(foo8,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,39,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,41,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,42,20))
>x : I, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,42,14))
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

function foo8(x: any) { }
>foo8 : { (x: B): any; (x: I): any; }, Symbol(foo8,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,39,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,41,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,42,20))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,43,14))

function foo9(x: B);
>foo9 : { (x: B): any; (x: C<string>): any; }, Symbol(foo9,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,43,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,45,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,46,28))
>x : B, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,45,14))
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

function foo9(x: C<string>); // error, types are structurally equal
>foo9 : { (x: B): any; (x: C<string>): any; }, Symbol(foo9,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,43,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,45,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,46,28))
>x : C<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,46,14))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))

function foo9(x: any) { }
>foo9 : { (x: B): any; (x: C<string>): any; }, Symbol(foo9,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,43,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,45,20),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,46,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,47,14))

function foo10(x: B);
>foo10 : { (x: B): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo10,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,47,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,49,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,50,28))
>x : B, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,49,15))
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

function foo10(x: typeof a); // ok
>foo10 : { (x: B): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo10,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,47,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,49,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,50,28))
>x : new (x: string, y: string) => string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,50,15))
>a : new (x: string, y: string) => string, Symbol(a,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,3))

function foo10(x: any) { }
>foo10 : { (x: B): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo10,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,47,25),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,49,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,50,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,51,15))

function foo11(x: B);
>foo11 : { (x: B): any; (x: { new(x: string): string; }): any; }, Symbol(foo11,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,51,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,53,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,54,28))
>x : B, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,53,15))
>B : B, Symbol(B,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,0,0))

function foo11(x: typeof b); // ok
>foo11 : { (x: B): any; (x: { new(x: string): string; }): any; }, Symbol(foo11,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,51,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,53,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,54,28))
>x : { new(x: string): string; }, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,54,15))
>b : { new(x: string): string; }, Symbol(b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,3))

function foo11(x: any) { }
>foo11 : { (x: B): any; (x: { new(x: string): string; }): any; }, Symbol(foo11,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,51,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,53,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,54,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,55,15))

function foo12(x: I);
>foo12 : { (x: I): any; (x: C<string>): any; }, Symbol(foo12,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,55,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,57,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,58,29))
>x : I, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,57,15))
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

function foo12(x: C<string>); // ok
>foo12 : { (x: I): any; (x: C<string>): any; }, Symbol(foo12,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,55,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,57,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,58,29))
>x : C<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,58,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))

function foo12(x: any) { }
>foo12 : { (x: I): any; (x: C<string>): any; }, Symbol(foo12,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,55,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,57,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,58,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,59,15))

function foo12b(x: I2<string>);
>foo12b : { (x: I2<string>): any; (x: C<string>): any; }, Symbol(foo12b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,59,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,61,31),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,62,30))
>x : I2<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,61,16))
>I2 : I2<T>, Symbol(I2,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,12,1))

function foo12b(x: C<string>); // ok
>foo12b : { (x: I2<string>): any; (x: C<string>): any; }, Symbol(foo12b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,59,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,61,31),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,62,30))
>x : C<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,62,16))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))

function foo12b(x: any) { }
>foo12b : { (x: I2<string>): any; (x: C<string>): any; }, Symbol(foo12b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,59,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,61,31),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,62,30))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,63,16))

function foo13(x: I);
>foo13 : { (x: I): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo13,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,63,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,65,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,66,28))
>x : I, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,65,15))
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

function foo13(x: typeof a); // ok
>foo13 : { (x: I): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo13,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,63,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,65,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,66,28))
>x : new (x: string, y: string) => string, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,66,15))
>a : new (x: string, y: string) => string, Symbol(a,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,18,3))

function foo13(x: any) { }
>foo13 : { (x: I): any; (x: new (x: string, y: string) => string): any; }, Symbol(foo13,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,63,27),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,65,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,66,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,67,15))

function foo14(x: I);
>foo14 : { (x: I): any; (x: { new(x: string): string; }): any; }, Symbol(foo14,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,67,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,69,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,70,28))
>x : I, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,69,15))
>I : I, Symbol(I,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,8,1))

function foo14(x: typeof b); // ok
>foo14 : { (x: I): any; (x: { new(x: string): string; }): any; }, Symbol(foo14,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,67,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,69,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,70,28))
>x : { new(x: string): string; }, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,70,15))
>b : { new(x: string): string; }, Symbol(b,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,19,3))

function foo14(x: any) { }
>foo14 : { (x: I): any; (x: { new(x: string): string; }): any; }, Symbol(foo14,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,67,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,69,21),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,70,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,71,15))

function foo15(x: I2<string>);
>foo15 : { (x: I2<string>): any; (x: C<number>): any; }, Symbol(foo15,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,71,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,73,30),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,74,29))
>x : I2<string>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,73,15))
>I2 : I2<T>, Symbol(I2,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,12,1))

function foo15(x: C<number>); // ok
>foo15 : { (x: I2<string>): any; (x: C<number>): any; }, Symbol(foo15,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,71,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,73,30),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,74,29))
>x : C<number>, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,74,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,4,1))

function foo15(x: any) { }
>foo15 : { (x: I2<string>): any; (x: C<number>): any; }, Symbol(foo15,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,71,26),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,73,30),Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,74,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts,75,15))

