=== tests/cases/compiler/overloadWithCallbacksWithDifferingOptionalityOnArgs.ts ===
function x2(callback: (x?: number) => number);
>x2 : { (callback: (x?: number) => number): any; (callback: (x: string) => number): any; }, Symbol(x2,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,0),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,46),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,45))
>callback : (x?: number) => number, Symbol(callback,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,12))
>x : number, Symbol(x,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,23))

function x2(callback: (x: string) => number);
>x2 : { (callback: (x?: number) => number): any; (callback: (x: string) => number): any; }, Symbol(x2,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,0),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,46),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,45))
>callback : (x: string) => number, Symbol(callback,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,12))
>x : string, Symbol(x,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,23))

function x2(callback: (x: any) => number) { }
>x2 : { (callback: (x?: number) => number): any; (callback: (x: string) => number): any; }, Symbol(x2,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,0),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,46),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,45))
>callback : (x: any) => number, Symbol(callback,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,2,12))
>x : any, Symbol(x,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,2,23))

x2(() => 1);
>x2(() => 1) : any
>x2 : { (callback: (x?: number) => number): any; (callback: (x: string) => number): any; }, Symbol(x2,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,0),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,46),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,45))
>() => 1 : () => number
>1 : number

x2((x) => 1 );
>x2((x) => 1 ) : any
>x2 : { (callback: (x?: number) => number): any; (callback: (x: string) => number): any; }, Symbol(x2,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,0),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,0,46),Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,1,45))
>(x) => 1 : (x: number) => number
>x : number, Symbol(x,Decl(overloadWithCallbacksWithDifferingOptionalityOnArgs.ts,4,4))
>1 : number

