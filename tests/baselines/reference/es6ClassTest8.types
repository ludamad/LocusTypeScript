=== tests/cases/compiler/es6ClassTest8.ts ===
function f1(x:any) {return x;}
>f1 : (x: any) => any, Symbol(f1, Decl(es6ClassTest8.ts, 0, 0))
>x : any, Symbol(x, Decl(es6ClassTest8.ts, 0, 12))
>x : any, Symbol(x, Decl(es6ClassTest8.ts, 0, 12))

class C {
>C : C, Symbol(C, Decl(es6ClassTest8.ts, 0, 30))

    constructor() {
        var bar:any = (function() {
>bar : any, Symbol(bar, Decl(es6ClassTest8.ts, 4, 11))
>(function() {            return bar; // 'bar' should be resolvable        }) : () => any
>function() {            return bar; // 'bar' should be resolvable        } : () => any

            return bar; // 'bar' should be resolvable
>bar : any, Symbol(bar, Decl(es6ClassTest8.ts, 4, 11))

        });
        var b = f1(f1(bar));
>b : any, Symbol(b, Decl(es6ClassTest8.ts, 7, 11))
>f1(f1(bar)) : any
>f1 : (x: any) => any, Symbol(f1, Decl(es6ClassTest8.ts, 0, 0))
>f1(bar) : any
>f1 : (x: any) => any, Symbol(f1, Decl(es6ClassTest8.ts, 0, 0))
>bar : any, Symbol(bar, Decl(es6ClassTest8.ts, 4, 11))
    }
  
}

class Vector {
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))

    static norm(v:Vector):Vector {return null;}
>norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>v : Vector, Symbol(v, Decl(es6ClassTest8.ts, 13, 16))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>null : null

    static minus(v1:Vector, v2:Vector):Vector {return null;}
>minus : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.minus, Decl(es6ClassTest8.ts, 13, 47))
>v1 : Vector, Symbol(v1, Decl(es6ClassTest8.ts, 14, 17))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>v2 : Vector, Symbol(v2, Decl(es6ClassTest8.ts, 14, 27))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>null : null

    static times(v1:Vector, v2:Vector):Vector {return null;}
>times : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.times, Decl(es6ClassTest8.ts, 14, 60))
>v1 : Vector, Symbol(v1, Decl(es6ClassTest8.ts, 15, 17))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>v2 : Vector, Symbol(v2, Decl(es6ClassTest8.ts, 15, 27))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>null : null

    static cross(v1:Vector, v2:Vector):Vector {return null;}
>cross : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.cross, Decl(es6ClassTest8.ts, 15, 60))
>v1 : Vector, Symbol(v1, Decl(es6ClassTest8.ts, 16, 17))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>v2 : Vector, Symbol(v2, Decl(es6ClassTest8.ts, 16, 27))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>null : null

    constructor(public x: number,
>x : number, Symbol(x, Decl(es6ClassTest8.ts, 18, 16))

                public y: number,
>y : number, Symbol(y, Decl(es6ClassTest8.ts, 18, 33))

                public z: number) { 
>z : number, Symbol(z, Decl(es6ClassTest8.ts, 19, 33))
    }

    static dot(v1:Vector, v2:Vector):Vector {return null;}    
>dot : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.dot, Decl(es6ClassTest8.ts, 21, 5))
>v1 : Vector, Symbol(v1, Decl(es6ClassTest8.ts, 23, 15))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>v2 : Vector, Symbol(v2, Decl(es6ClassTest8.ts, 23, 25))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>null : null

}              

class Camera {
>Camera : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))

    public forward: Vector;
>forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))

    public right: Vector;
>right : Vector, Symbol(right, Decl(es6ClassTest8.ts, 28, 27))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))

    public up: Vector;
>up : Vector, Symbol(up, Decl(es6ClassTest8.ts, 29, 25))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))

    constructor(public pos: Vector, lookAt: Vector) { 
>pos : Vector, Symbol(pos, Decl(es6ClassTest8.ts, 31, 16))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>lookAt : Vector, Symbol(lookAt, Decl(es6ClassTest8.ts, 31, 35))
>Vector : Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))

        var down = new Vector(0.0, -1.0, 0.0);
>down : Vector, Symbol(down, Decl(es6ClassTest8.ts, 32, 11))
>new Vector(0.0, -1.0, 0.0) : Vector
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>0.0 : number
>-1.0 : number
>1.0 : number
>0.0 : number

        this.forward = Vector.norm(Vector.minus(lookAt,this.pos));
>this.forward = Vector.norm(Vector.minus(lookAt,this.pos)) : Vector
>this.forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>Vector.norm(Vector.minus(lookAt,this.pos)) : Vector
>Vector.norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>Vector.minus(lookAt,this.pos) : Vector
>Vector.minus : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.minus, Decl(es6ClassTest8.ts, 13, 47))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>minus : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.minus, Decl(es6ClassTest8.ts, 13, 47))
>lookAt : Vector, Symbol(lookAt, Decl(es6ClassTest8.ts, 31, 35))
>this.pos : Vector, Symbol(pos, Decl(es6ClassTest8.ts, 31, 16))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>pos : Vector, Symbol(pos, Decl(es6ClassTest8.ts, 31, 16))

        this.right = Vector.times(down, Vector.norm(Vector.cross(this.forward, down)));
>this.right = Vector.times(down, Vector.norm(Vector.cross(this.forward, down))) : Vector
>this.right : Vector, Symbol(right, Decl(es6ClassTest8.ts, 28, 27))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>right : Vector, Symbol(right, Decl(es6ClassTest8.ts, 28, 27))
>Vector.times(down, Vector.norm(Vector.cross(this.forward, down))) : Vector
>Vector.times : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.times, Decl(es6ClassTest8.ts, 14, 60))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>times : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.times, Decl(es6ClassTest8.ts, 14, 60))
>down : Vector, Symbol(down, Decl(es6ClassTest8.ts, 32, 11))
>Vector.norm(Vector.cross(this.forward, down)) : Vector
>Vector.norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>Vector.cross(this.forward, down) : Vector
>Vector.cross : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.cross, Decl(es6ClassTest8.ts, 15, 60))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>cross : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.cross, Decl(es6ClassTest8.ts, 15, 60))
>this.forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>down : Vector, Symbol(down, Decl(es6ClassTest8.ts, 32, 11))

        this.up = Vector.times(down, Vector.norm(Vector.cross(this.forward, this.right)));    
>this.up = Vector.times(down, Vector.norm(Vector.cross(this.forward, this.right))) : Vector
>this.up : Vector, Symbol(up, Decl(es6ClassTest8.ts, 29, 25))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>up : Vector, Symbol(up, Decl(es6ClassTest8.ts, 29, 25))
>Vector.times(down, Vector.norm(Vector.cross(this.forward, this.right))) : Vector
>Vector.times : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.times, Decl(es6ClassTest8.ts, 14, 60))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>times : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.times, Decl(es6ClassTest8.ts, 14, 60))
>down : Vector, Symbol(down, Decl(es6ClassTest8.ts, 32, 11))
>Vector.norm(Vector.cross(this.forward, this.right)) : Vector
>Vector.norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>norm : (v: Vector) => Vector, Symbol(Vector.norm, Decl(es6ClassTest8.ts, 12, 14))
>Vector.cross(this.forward, this.right) : Vector
>Vector.cross : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.cross, Decl(es6ClassTest8.ts, 15, 60))
>Vector : typeof Vector, Symbol(Vector, Decl(es6ClassTest8.ts, 10, 1))
>cross : (v1: Vector, v2: Vector) => Vector, Symbol(Vector.cross, Decl(es6ClassTest8.ts, 15, 60))
>this.forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>forward : Vector, Symbol(forward, Decl(es6ClassTest8.ts, 27, 14))
>this.right : Vector, Symbol(right, Decl(es6ClassTest8.ts, 28, 27))
>this : Camera, Symbol(Camera, Decl(es6ClassTest8.ts, 25, 1))
>right : Vector, Symbol(right, Decl(es6ClassTest8.ts, 28, 27))
    }
}


