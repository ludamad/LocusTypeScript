=== tests/cases/compiler/genericInference2.ts ===
    declare module ko { 
>ko : typeof ko, Symbol(ko,Decl(genericInference2.ts,0,0))

       export interface Observable<T> { 
>Observable : Observable<T>, Symbol(Observable,Decl(genericInference2.ts,0,23))
>T : T, Symbol(T,Decl(genericInference2.ts,1,35))

           (): T; 
>T : T, Symbol(T,Decl(genericInference2.ts,1,35))

           (value: T): any; 
>value : T, Symbol(value,Decl(genericInference2.ts,3,12))
>T : T, Symbol(T,Decl(genericInference2.ts,1,35))

           N: number; 
>N : number, Symbol(N,Decl(genericInference2.ts,3,27))

           g: boolean; 
>g : boolean, Symbol(g,Decl(genericInference2.ts,4,21))

           r: T; 
>r : T, Symbol(r,Decl(genericInference2.ts,5,22))
>T : T, Symbol(T,Decl(genericInference2.ts,1,35))
       } 
       export function observable<T>(value: T): Observable<T>; 
>observable : <T>(value: T) => Observable<T>, Symbol(observable,Decl(genericInference2.ts,7,8))
>T : T, Symbol(T,Decl(genericInference2.ts,8,34))
>value : T, Symbol(value,Decl(genericInference2.ts,8,37))
>T : T, Symbol(T,Decl(genericInference2.ts,8,34))
>Observable : Observable<T>, Symbol(Observable,Decl(genericInference2.ts,0,23))
>T : T, Symbol(T,Decl(genericInference2.ts,8,34))
    } 
    var o = { 
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>{        name: ko.observable("Bob"),        age: ko.observable(37)     } : { name: ko.Observable<string>; age: ko.Observable<number>; }

       name: ko.observable("Bob"), 
>name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>ko.observable("Bob") : ko.Observable<string>
>ko.observable : <T>(value: T) => ko.Observable<T>, Symbol(ko.observable,Decl(genericInference2.ts,7,8))
>ko : typeof ko, Symbol(ko,Decl(genericInference2.ts,0,0))
>observable : <T>(value: T) => ko.Observable<T>, Symbol(ko.observable,Decl(genericInference2.ts,7,8))
>"Bob" : string

       age: ko.observable(37) 
>age : ko.Observable<number>, Symbol(age,Decl(genericInference2.ts,11,34))
>ko.observable(37) : ko.Observable<number>
>ko.observable : <T>(value: T) => ko.Observable<T>, Symbol(ko.observable,Decl(genericInference2.ts,7,8))
>ko : typeof ko, Symbol(ko,Decl(genericInference2.ts,0,0))
>observable : <T>(value: T) => ko.Observable<T>, Symbol(ko.observable,Decl(genericInference2.ts,7,8))
>37 : number

    }; 
    var x_v = o.name().length;  // should be 'number'
>x_v : number, Symbol(x_v,Decl(genericInference2.ts,14,7))
>o.name().length : number, Symbol(String.length,Decl(lib.d.ts,414,19))
>o.name() : string
>o.name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>length : number, Symbol(String.length,Decl(lib.d.ts,414,19))

    var age_v = o.age();  // should be 'number'
>age_v : number, Symbol(age_v,Decl(genericInference2.ts,15,7))
>o.age() : number
>o.age : ko.Observable<number>, Symbol(age,Decl(genericInference2.ts,11,34))
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>age : ko.Observable<number>, Symbol(age,Decl(genericInference2.ts,11,34))

    var name_v = o.name("Robert");  // should be 'any'
>name_v : any, Symbol(name_v,Decl(genericInference2.ts,16,7))
>o.name("Robert") : any
>o.name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>"Robert" : string

    var zz_v = o.name.N;  // should be 'number'
>zz_v : number, Symbol(zz_v,Decl(genericInference2.ts,17,7))
>o.name.N : number, Symbol(ko.Observable.N,Decl(genericInference2.ts,3,27))
>o.name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>N : number, Symbol(ko.Observable.N,Decl(genericInference2.ts,3,27))

    var yy_v = o.name.g;  // should be 'boolean'
>yy_v : boolean, Symbol(yy_v,Decl(genericInference2.ts,18,7))
>o.name.g : boolean, Symbol(ko.Observable.g,Decl(genericInference2.ts,4,21))
>o.name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>g : boolean, Symbol(ko.Observable.g,Decl(genericInference2.ts,4,21))

    var rr_v = o.name.r;  // should be 'string'
>rr_v : string, Symbol(rr_v,Decl(genericInference2.ts,19,7))
>o.name.r : string, Symbol(ko.Observable.r,Decl(genericInference2.ts,5,22))
>o.name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>o : { name: ko.Observable<string>; age: ko.Observable<number>; }, Symbol(o,Decl(genericInference2.ts,10,7))
>name : ko.Observable<string>, Symbol(name,Decl(genericInference2.ts,10,13))
>r : string, Symbol(ko.Observable.r,Decl(genericInference2.ts,5,22))

