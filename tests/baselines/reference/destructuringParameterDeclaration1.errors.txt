tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(7,10): error TS2393: Duplicate function implementation.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(10,10): error TS2393: Duplicate function implementation.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(14,4): error TS2345: Argument of type '(string | number | string[][])[]' is not assignable to parameter of type '{ x: number; a: number; }'.
  Property 'x' is missing in type '(string | number | string[][])[]'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(14,29): error TS1005: ',' expected.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(15,4): error TS2345: Argument of type '(string | number | string[][])[]' is not assignable to parameter of type '{ x: number; a: number; }'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(28,8): error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(28,16): error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(35,14): error TS2345: Argument of type '{ x: string; y: boolean; }' is not assignable to parameter of type '{ x: number; y: any; }'.
  Types of property 'x' are incompatible.
    Type 'string' is not assignable to type 'number'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(44,14): error TS2300: Duplicate identifier 'z'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(44,18): error TS2300: Duplicate identifier 'z'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(50,4): error TS2345: Argument of type '{ z: number; }' is not assignable to parameter of type '{ z: { x: any; y: { j: any; }; }; }'.
  Types of property 'z' are incompatible.
    Type 'number' is not assignable to type '{ x: any; y: { j: any; }; }'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(52,4): error TS2345: Argument of type '{}' is not assignable to parameter of type '{ z: number; }'.
  Property 'z' is missing in type '{}'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(53,4): error TS2345: Argument of type '{ z: boolean; }' is not assignable to parameter of type '{ z: number; }'.
  Types of property 'z' are incompatible.
    Type 'boolean' is not assignable to type 'number'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(59,4): error TS2345: Argument of type '{ z: boolean; }' is not assignable to parameter of type '{ z?: number; }'.
  Types of property 'z' are incompatible.
    Type 'boolean' is not assignable to type 'number'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(62,4): error TS2345: Argument of type '{ b: boolean; }' is not assignable to parameter of type '{ b: string | number; }'.
  Types of property 'b' are incompatible.
    Type 'boolean' is not assignable to type 'string | number'.
      Type 'boolean' is not assignable to type 'number'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(66,4): error TS2345: Argument of type '[number, number, boolean, boolean]' is not assignable to parameter of type '[any, any, [[any]]]'.
  Types of property '2' are incompatible.
    Type 'boolean' is not assignable to type '[[any]]'.
      Property '0' is missing in type 'Boolean'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(68,4): error TS2345: Argument of type '[number, number, [[string]]]' is not assignable to parameter of type '[any, any, [[number]]]'.
  Types of property '2' are incompatible.
    Type '[[string]]' is not assignable to type '[[number]]'.
      Types of property '0' are incompatible.
        Type '[string]' is not assignable to type '[number]'.
          Types of property '0' are incompatible.
            Type 'string' is not assignable to type 'number'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(73,10): error TS2393: Duplicate function implementation.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(74,10): error TS2393: Duplicate function implementation.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(75,13): error TS2463: A binding pattern parameter cannot be optional in an implementation signature.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(76,13): error TS2463: A binding pattern parameter cannot be optional in an implementation signature.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(97,7): error TS2420: Class 'C4' incorrectly implements interface 'F2'.
  Types of property 'd4' are incompatible.
    Type '({x, y, c}: { x: any; y: any; c: any; }) => void' is not assignable to type '({x, y, z}?: { x: any; y: any; z: any; }) => any'.
      Types of parameters '__0' and '__0' are incompatible.
        Type '{ x: any; y: any; c: any; }' is not assignable to type '{ x: any; y: any; z: any; }'.
          Property 'z' is missing in type '{ x: any; y: any; c: any; }'.
tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts(98,8): error TS2463: A binding pattern parameter cannot be optional in an implementation signature.


==== tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration1.ts (23 errors) ====
    // A parameter declaration may specify either an identifier or a binding pattern.
    // The identifiers specified in parameter declarations and binding patterns
    // in a parameter list must be unique within that parameter list.
    
    // If the declaration includes a type annotation, the parameter is of that type
    function a0(x: number, y: string, z: boolean) { } 
    function a1([a, b, [[c]]]: [number, number, string[][]]) { }
             ~~
!!! error TS2393: Duplicate function implementation.
    function a2(o: { x: number, a: number }) { }
    function a3({j, k, l: {m, n}, q: [a, b, c]}: { j: number, k: string, l: { m: boolean, n: number }, q: (number|string)[] }) { };
    function a1({x, a}: { x: number, a: number }) { }
             ~~
!!! error TS2393: Duplicate function implementation.
    
    a1([1, 2, [["world"]]]);
    a1([1, 2, [["world"]], 3]);
    a1([1, "string", [["world"]]);  // Error
       ~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(string | number | string[][])[]' is not assignable to parameter of type '{ x: number; a: number; }'.
!!! error TS2345:   Property 'x' is missing in type '(string | number | string[][])[]'.
                                ~
!!! error TS1005: ',' expected.
    a1([1, 2, [["world"]], "string"]);  // Error
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '(string | number | string[][])[]' is not assignable to parameter of type '{ x: number; a: number; }'.
    
    
    // If the declaration includes an initializer expression (which is permitted only
    // when the parameter list occurs in conjunction with a function body),
    // the parameter type is the widened form (section 3.11) of the type of the initializer expression.
    
    function b1(z = 10, y = 60, u = () => true) { }
    function b2(z = [undefined, null]) { };
    function b3(z = null, o = { x: 0, y: undefined }) { }
    function b4({z: {x, y: {j}}} = { z: { x: "hi", y: { j: 1 } } }) { }
    
    interface F1 {
        b5(z = 10, [[a, b], d, {u}] = [[1, 2], "string", { u: false }]);  // Error, no function body
           ~~~~~~
!!! error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
        b6(z, y, [, a, b], {p, m: { q, r}});
    }
    
    b2([1, 2, 3]);  // z is widen to the type any[]
    b3("string", { x: 200, y: "string" });
    b3("string", { x: 200, y: true });
    b3("string", { x: "string", y: true });  // Error
                 ~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '{ x: string; y: boolean; }' is not assignable to parameter of type '{ x: number; y: any; }'.
!!! error TS2345:   Types of property 'x' are incompatible.
!!! error TS2345:     Type 'string' is not assignable to type 'number'.
    
    
    // If the declaration specifies a binding pattern, the parameter type is the implied type of that binding pattern (section 5.1.3)
    enum Foo { a }
    function c0({z: {x, y: {j}}}) { }
    function c1({z} = { z: 10 }) { }
    function c2({z = 10}) { }
    function c3({b}: { b: number|string} = { b: "hello" }) { }
    function c4([z], z: number) { }  // Duplicate identifier
                 ~
!!! error TS2300: Duplicate identifier 'z'.
                     ~
!!! error TS2300: Duplicate identifier 'z'.
    function c5([a, b, [[c]]]) { }
    function c6([a, b, [[c=1]]]) { }
    
    c0({z : { x: 1, y: { j: "world" } }});      // Implied type is { z: {x: any, y: {j: any}} }
    c0({z : { x: "string", y: { j: true } }});  // Implied type is { z: {x: any, y: {j: any}} }
    c0({z : 1});                                // Error, implied type is { z: {x: any, y: {j: any}} }
       ~~~~~~~
!!! error TS2345: Argument of type '{ z: number; }' is not assignable to parameter of type '{ z: { x: any; y: { j: any; }; }; }'.
!!! error TS2345:   Types of property 'z' are incompatible.
!!! error TS2345:     Type 'number' is not assignable to type '{ x: any; y: { j: any; }; }'.
    
    c1({});           // Error, implied type is {z:number}?
       ~~
!!! error TS2345: Argument of type '{}' is not assignable to parameter of type '{ z: number; }'.
!!! error TS2345:   Property 'z' is missing in type '{}'.
    c1({ z: true });  // Error, implied type is {z:number}?
       ~~~~~~~~~~~
!!! error TS2345: Argument of type '{ z: boolean; }' is not assignable to parameter of type '{ z: number; }'.
!!! error TS2345:   Types of property 'z' are incompatible.
!!! error TS2345:     Type 'boolean' is not assignable to type 'number'.
    c1();             // Implied type is {z:number}?
    c1({ z: 1 })      // Implied type is {z:number}? 
    
    c2({});         // Implied type is {z?: number}
    c2({z:1});      // Implied type is {z?: number}
    c2({z:false});  // Error, implied type is {z?: number}
       ~~~~~~~~~
!!! error TS2345: Argument of type '{ z: boolean; }' is not assignable to parameter of type '{ z?: number; }'.
!!! error TS2345:   Types of property 'z' are incompatible.
!!! error TS2345:     Type 'boolean' is not assignable to type 'number'.
    
    c3({ b: 1 });     // Implied type is { b: number|string }.
    c3({ b: true });  // Error, implied type is { b: number|string }. 
       ~~~~~~~~~~~
!!! error TS2345: Argument of type '{ b: boolean; }' is not assignable to parameter of type '{ b: string | number; }'.
!!! error TS2345:   Types of property 'b' are incompatible.
!!! error TS2345:     Type 'boolean' is not assignable to type 'string | number'.
!!! error TS2345:       Type 'boolean' is not assignable to type 'number'.
    
    c5([1, 2, [["string"]]]);               // Implied type is is [any, any, [[any]]]
    c5([1, 2, [["string"]], false, true]);  // Implied type is is [any, any, [[any]]]
    c5([1, 2, false, true]);                // Error, implied type is [any, any, [[any]]]
       ~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '[number, number, boolean, boolean]' is not assignable to parameter of type '[any, any, [[any]]]'.
!!! error TS2345:   Types of property '2' are incompatible.
!!! error TS2345:     Type 'boolean' is not assignable to type '[[any]]'.
!!! error TS2345:       Property '0' is missing in type 'Boolean'.
    
    c6([1, 2, [["string"]]]);  // Error, implied type is [any, any, [[number]]]  // Use initializer
       ~~~~~~~~~~~~~~~~~~~~
!!! error TS2345: Argument of type '[number, number, [[string]]]' is not assignable to parameter of type '[any, any, [[number]]]'.
!!! error TS2345:   Types of property '2' are incompatible.
!!! error TS2345:     Type '[[string]]' is not assignable to type '[[number]]'.
!!! error TS2345:       Types of property '0' are incompatible.
!!! error TS2345:         Type '[string]' is not assignable to type '[number]'.
!!! error TS2345:           Types of property '0' are incompatible.
!!! error TS2345:             Type 'string' is not assignable to type 'number'.
    
    // A parameter can be marked optional by following its name or binding pattern with a question mark (?)
    // or by including an initializer.
    
    function d0(x?) { }
             ~~
!!! error TS2393: Duplicate function implementation.
    function d0(x = 10) { }
             ~~
!!! error TS2393: Duplicate function implementation.
    function d1([a, b, c]?) { }
                ~~~~~~~~~~
!!! error TS2463: A binding pattern parameter cannot be optional in an implementation signature.
    function d2({x, y, z}?) { }
                ~~~~~~~~~~
!!! error TS2463: A binding pattern parameter cannot be optional in an implementation signature.
    
    interface F2 {
        d3([a, b, c]?);
        d4({x, y, z}?);
        e0([a, b, c]);
    }
    
    class C2 implements F2 {
        constructor() { }
        d3() { }
        d4() { }
        e0([a, b, c]) { }
    }
    
    class C3 implements F2 {
        d3([a, b, c]) { }
        d4({x, y, z}) { }
        e0([a, b, c]) { }
    }
    
    class C4 implements F2 {
          ~~
!!! error TS2420: Class 'C4' incorrectly implements interface 'F2'.
!!! error TS2420:   Types of property 'd4' are incompatible.
!!! error TS2420:     Type '({x, y, c}: { x: any; y: any; c: any; }) => void' is not assignable to type '({x, y, z}?: { x: any; y: any; z: any; }) => any'.
!!! error TS2420:       Types of parameters '__0' and '__0' are incompatible.
!!! error TS2420:         Type '{ x: any; y: any; c: any; }' is not assignable to type '{ x: any; y: any; z: any; }'.
!!! error TS2420:           Property 'z' is missing in type '{ x: any; y: any; c: any; }'.
        d3([a, b, c]?) { }
           ~~~~~~~~~~
!!! error TS2463: A binding pattern parameter cannot be optional in an implementation signature.
        d4({x, y, c}) { }
        e0([a, b, q]) { }
    }
    
    function d5({x, y} = { x: 1, y: 2 }) { }
    d5();  // Parameter is optional as its declaration included an initializer
    
    
    