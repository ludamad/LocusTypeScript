=== tests/cases/conformance/externalModules/foo_1.ts ===
import foo = require("./foo_0");
>foo : any, Symbol(foo,Decl(foo_1.ts,0,0))

var x: foo;
>x : foo, Symbol(x,Decl(foo_1.ts,1,3))
>foo : foo, Symbol(foo,Decl(foo_1.ts,0,0))

x("test");
>x("test") : void
>x : foo, Symbol(x,Decl(foo_1.ts,1,3))
>"test" : string

x(42);
>x(42) : number
>x : foo, Symbol(x,Decl(foo_1.ts,1,3))
>42 : number

var y: string = x.b;
>y : string, Symbol(y,Decl(foo_1.ts,4,3))
>x.b : string, Symbol(foo.b,Decl(foo_0.ts,1,19))
>x : foo, Symbol(x,Decl(foo_1.ts,1,3))
>b : string, Symbol(foo.b,Decl(foo_0.ts,1,19))

if(!!x.c){ }
>!!x.c : boolean
>!x.c : boolean
>x.c : boolean, Symbol(foo.c,Decl(foo_0.ts,5,21))
>x : foo, Symbol(x,Decl(foo_1.ts,1,3))
>c : boolean, Symbol(foo.c,Decl(foo_0.ts,5,21))

var z = {x: 1, y: 2};
>z : { x: number; y: number; }, Symbol(z,Decl(foo_1.ts,6,3))
>{x: 1, y: 2} : { x: number; y: number; }
>x : number, Symbol(x,Decl(foo_1.ts,6,9))
>1 : number
>y : number, Symbol(y,Decl(foo_1.ts,6,14))
>2 : number

z = x.d;
>z = x.d : { x: number; y: number; }
>z : { x: number; y: number; }, Symbol(z,Decl(foo_1.ts,6,3))
>x.d : { x: number; y: number; }, Symbol(foo.d,Decl(foo_0.ts,6,12))
>x : foo, Symbol(x,Decl(foo_1.ts,1,3))
>d : { x: number; y: number; }, Symbol(foo.d,Decl(foo_0.ts,6,12))

=== tests/cases/conformance/externalModules/foo_0.ts ===
interface Foo {
>Foo : Foo, Symbol(Foo,Decl(foo_0.ts,0,0),Decl(foo_0.ts,3,1))

	(a: string): void;
>a : string, Symbol(a,Decl(foo_0.ts,1,2))

	b: string;
>b : string, Symbol(b,Decl(foo_0.ts,1,19))
}
interface Foo {
>Foo : Foo, Symbol(Foo,Decl(foo_0.ts,0,0),Decl(foo_0.ts,3,1))

	(a: number): number;
>a : number, Symbol(a,Decl(foo_0.ts,5,2))

	c: boolean;
>c : boolean, Symbol(c,Decl(foo_0.ts,5,21))

	d: {x: number; y: number};
>d : { x: number; y: number; }, Symbol(d,Decl(foo_0.ts,6,12))
>x : number, Symbol(x,Decl(foo_0.ts,7,5))
>y : number, Symbol(y,Decl(foo_0.ts,7,15))
}
export = Foo;
>Foo : Foo, Symbol(Foo,Decl(foo_0.ts,0,0),Decl(foo_0.ts,3,1))

