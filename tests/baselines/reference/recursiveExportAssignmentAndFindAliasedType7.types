=== tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType7_moduleA.ts ===
import moduleC = require("recursiveExportAssignmentAndFindAliasedType7_moduleC");
>moduleC : any, Symbol(moduleC, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleA.ts, 0, 0))

import ClassB = require("recursiveExportAssignmentAndFindAliasedType7_moduleB");
>ClassB : typeof ClassB, Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleA.ts, 0, 81))

export var b: ClassB; // This should result in type ClassB
>b : ClassB, Symbol(b, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleA.ts, 2, 10))
>ClassB : ClassB, Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleA.ts, 0, 81))

=== tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType7_moduleC.ts ===
import self = require("recursiveExportAssignmentAndFindAliasedType7_moduleD");
>self : any, Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleC.ts, 0, 0))

var selfVar = self;
>selfVar : any, Symbol(selfVar, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleC.ts, 1, 3))
>self : any, Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleC.ts, 0, 0))

export = selfVar;
>selfVar : any, Symbol(selfVar, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleC.ts, 1, 3))

=== tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType7_moduleD.ts ===
import self = require("recursiveExportAssignmentAndFindAliasedType7_moduleE");
>self : any, Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleD.ts, 0, 0))

export = self;
>self : any, Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleD.ts, 0, 0))

=== tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType7_moduleE.ts ===
import self = require("recursiveExportAssignmentAndFindAliasedType7_moduleC");
>self : any, Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleE.ts, 0, 0))

export = self;
>self : any, Symbol(self, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleE.ts, 0, 0))

=== tests/cases/compiler/recursiveExportAssignmentAndFindAliasedType7_moduleB.ts ===
class ClassB { }
>ClassB : ClassB, Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleB.ts, 0, 0))

export = ClassB;
>ClassB : ClassB, Symbol(ClassB, Decl(recursiveExportAssignmentAndFindAliasedType7_moduleB.ts, 0, 0))

