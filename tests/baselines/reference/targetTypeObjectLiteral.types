=== tests/cases/compiler/targetTypeObjectLiteral.ts ===
var z: { x: number; y: (w:string)=>number;} = {
>z : { x: number; y: (w: string) => number; }, Symbol(z,Decl(targetTypeObjectLiteral.ts,0,3))
>x : number, Symbol(x,Decl(targetTypeObjectLiteral.ts,0,8))
>y : (w: string) => number, Symbol(y,Decl(targetTypeObjectLiteral.ts,0,19))
>w : string, Symbol(w,Decl(targetTypeObjectLiteral.ts,0,24))
>{    x: 12,    y: function(w) {        return 0;    }} : { x: number; y: (w: string) => number; }

    x: 12,
>x : number, Symbol(x,Decl(targetTypeObjectLiteral.ts,0,47))
>12 : number

    y: function(w) {
>y : (w: string) => number, Symbol(y,Decl(targetTypeObjectLiteral.ts,2,10))
>function(w) {        return 0;    } : (w: string) => number
>w : string, Symbol(w,Decl(targetTypeObjectLiteral.ts,4,16))

        return 0;
>0 : number

    }

}
