=== tests/cases/compiler/exportAssignmentEnum_B.ts ===
import EnumE = require("exportAssignmentEnum_A");
>EnumE : typeof EnumE, Symbol(EnumE,Decl(exportAssignmentEnum_B.ts,0,0))

var a = EnumE.A;
>a : EnumE, Symbol(a,Decl(exportAssignmentEnum_B.ts,2,3))
>EnumE.A : EnumE, Symbol(EnumE.A,Decl(exportAssignmentEnum_A.ts,0,8))
>EnumE : typeof EnumE, Symbol(EnumE,Decl(exportAssignmentEnum_B.ts,0,0))
>A : EnumE, Symbol(EnumE.A,Decl(exportAssignmentEnum_A.ts,0,8))

var b = EnumE.B;
>b : EnumE, Symbol(b,Decl(exportAssignmentEnum_B.ts,3,3))
>EnumE.B : EnumE, Symbol(EnumE.B,Decl(exportAssignmentEnum_A.ts,1,3))
>EnumE : typeof EnumE, Symbol(EnumE,Decl(exportAssignmentEnum_B.ts,0,0))
>B : EnumE, Symbol(EnumE.B,Decl(exportAssignmentEnum_A.ts,1,3))

var c = EnumE.C;
>c : EnumE, Symbol(c,Decl(exportAssignmentEnum_B.ts,4,3))
>EnumE.C : EnumE, Symbol(EnumE.C,Decl(exportAssignmentEnum_A.ts,2,3))
>EnumE : typeof EnumE, Symbol(EnumE,Decl(exportAssignmentEnum_B.ts,0,0))
>C : EnumE, Symbol(EnumE.C,Decl(exportAssignmentEnum_A.ts,2,3))

=== tests/cases/compiler/exportAssignmentEnum_A.ts ===
enum E {
>E : E, Symbol(E,Decl(exportAssignmentEnum_A.ts,0,0))

	A,
>A : E, Symbol(E.A,Decl(exportAssignmentEnum_A.ts,0,8))

	B,
>B : E, Symbol(E.B,Decl(exportAssignmentEnum_A.ts,1,3))

	C,
>C : E, Symbol(E.C,Decl(exportAssignmentEnum_A.ts,2,3))
}

export = E;
>E : E, Symbol(E,Decl(exportAssignmentEnum_A.ts,0,0))

