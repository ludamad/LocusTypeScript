=== tests/cases/compiler/collisionRestParameterUnderscoreIUsage.ts ===
declare var console: { log(msg?: string): void; };
>console : { log(msg?: string): void; }, Symbol(console,Decl(collisionRestParameterUnderscoreIUsage.ts,0,11))
>log : (msg?: string) => void, Symbol(log,Decl(collisionRestParameterUnderscoreIUsage.ts,0,22))
>msg : string, Symbol(msg,Decl(collisionRestParameterUnderscoreIUsage.ts,0,27))

var _i = "This is what I'd expect to see";
>_i : string, Symbol(_i,Decl(collisionRestParameterUnderscoreIUsage.ts,1,3))
>"This is what I'd expect to see" : string

class Foo {
>Foo : Foo, Symbol(Foo,Decl(collisionRestParameterUnderscoreIUsage.ts,1,42))

    constructor(...args: any[]) {
>args : any[], Symbol(args,Decl(collisionRestParameterUnderscoreIUsage.ts,3,16))

        console.log(_i); // This should result in error
>console.log(_i) : void
>console.log : (msg?: string) => void, Symbol(log,Decl(collisionRestParameterUnderscoreIUsage.ts,0,22))
>console : { log(msg?: string): void; }, Symbol(console,Decl(collisionRestParameterUnderscoreIUsage.ts,0,11))
>log : (msg?: string) => void, Symbol(log,Decl(collisionRestParameterUnderscoreIUsage.ts,0,22))
>_i : string, Symbol(_i,Decl(collisionRestParameterUnderscoreIUsage.ts,1,3))
    }
}
new Foo();
>new Foo() : Foo
>Foo : typeof Foo, Symbol(Foo,Decl(collisionRestParameterUnderscoreIUsage.ts,1,42))

