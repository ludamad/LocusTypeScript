=== tests/cases/compiler/genericConstraintOnExtendedBuiltinTypes.ts ===
declare module EndGate {
>EndGate : typeof EndGate, Symbol(EndGate, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 0), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 6, 47), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 17, 1))

    export interface ICloneable {
>ICloneable : ICloneable, Symbol(ICloneable, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 24))

        Clone(): any;
>Clone : () => any, Symbol(Clone, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 1, 33))
    }
}

interface Number extends EndGate.ICloneable { }
>Number : Number, Symbol(Number, Decl(lib.d.ts, 456, 40), Decl(lib.d.ts, 518, 11), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 4, 1))
>EndGate.ICloneable : any, Symbol(EndGate.ICloneable, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 24))
>EndGate : typeof EndGate, Symbol(EndGate, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 0), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 6, 47), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 17, 1))
>ICloneable : EndGate.ICloneable, Symbol(EndGate.ICloneable, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 24))

module EndGate.Tweening {
>EndGate : typeof EndGate, Symbol(EndGate, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 0), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 6, 47), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 17, 1))
>Tweening : typeof Tweening, Symbol(Tweening, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 8, 15), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 19, 15))

    export class Tween<T extends ICloneable>{
>Tween : Tween<T>, Symbol(Tween, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 8, 25))
>T : T, Symbol(T, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 9, 23))
>ICloneable : ICloneable, Symbol(ICloneable, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 24))

        private _from: T;
>_from : T, Symbol(_from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 9, 45))
>T : T, Symbol(T, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 9, 23))


        constructor(from: T) {
>from : T, Symbol(from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 13, 20))
>T : T, Symbol(T, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 9, 23))

            this._from = from.Clone();
>this._from = from.Clone() : any
>this._from : T, Symbol(_from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 9, 45))
>this : Tween<T>, Symbol(Tween, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 8, 25))
>_from : T, Symbol(_from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 9, 45))
>from.Clone() : any
>from.Clone : () => any, Symbol(ICloneable.Clone, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 1, 33))
>from : T, Symbol(from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 13, 20))
>Clone : () => any, Symbol(ICloneable.Clone, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 1, 33))
        }
    }
}

module EndGate.Tweening {
>EndGate : typeof EndGate, Symbol(EndGate, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 0, 0), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 6, 47), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 17, 1))
>Tweening : typeof Tweening, Symbol(Tweening, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 8, 15), Decl(genericConstraintOnExtendedBuiltinTypes.ts, 19, 15))

    export class NumberTween extends Tween<number>{
>NumberTween : NumberTween, Symbol(NumberTween, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 19, 25))
>Tween : Tween<T>, Symbol(Tween, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 8, 25))

        constructor(from: number) {
>from : number, Symbol(from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 21, 20))

            super(from);
>super(from) : void
>super : typeof Tween, Symbol(Tween, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 8, 25))
>from : number, Symbol(from, Decl(genericConstraintOnExtendedBuiltinTypes.ts, 21, 20))
        }
    }
}
