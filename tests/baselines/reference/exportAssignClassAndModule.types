=== tests/cases/compiler/exportAssignClassAndModule_1.ts ===
///<reference path='exportAssignClassAndModule_0.ts'/>
import Foo = require('exportAssignClassAndModule_0');
>Foo : typeof Foo, Symbol(Foo, Decl(exportAssignClassAndModule_1.ts, 0, 0))

var z: Foo.Bar;
>z : Foo.Bar, Symbol(z, Decl(exportAssignClassAndModule_1.ts, 3, 3))
>Foo : any, Symbol(Foo, Decl(exportAssignClassAndModule_1.ts, 0, 0))
>Bar : Foo.Bar, Symbol(Foo.Bar, Decl(exportAssignClassAndModule_0.ts, 3, 12))

var zz: Foo;
>zz : Foo, Symbol(zz, Decl(exportAssignClassAndModule_1.ts, 4, 3))
>Foo : Foo, Symbol(Foo, Decl(exportAssignClassAndModule_1.ts, 0, 0))

zz.x;
>zz.x : Foo.Bar, Symbol(Foo.x, Decl(exportAssignClassAndModule_0.ts, 0, 11))
>zz : Foo, Symbol(zz, Decl(exportAssignClassAndModule_1.ts, 4, 3))
>x : Foo.Bar, Symbol(Foo.x, Decl(exportAssignClassAndModule_0.ts, 0, 11))

=== tests/cases/compiler/exportAssignClassAndModule_0.ts ===
class Foo {
>Foo : Foo, Symbol(Foo, Decl(exportAssignClassAndModule_0.ts, 0, 0), Decl(exportAssignClassAndModule_0.ts, 2, 1))

    x: Foo.Bar;
>x : Foo.Bar, Symbol(x, Decl(exportAssignClassAndModule_0.ts, 0, 11))
>Foo : any, Symbol(Foo, Decl(exportAssignClassAndModule_0.ts, 0, 0), Decl(exportAssignClassAndModule_0.ts, 2, 1))
>Bar : Foo.Bar, Symbol(Foo.Bar, Decl(exportAssignClassAndModule_0.ts, 3, 12))
}
module Foo {
>Foo : typeof Foo, Symbol(Foo, Decl(exportAssignClassAndModule_0.ts, 0, 0), Decl(exportAssignClassAndModule_0.ts, 2, 1))

    export interface Bar {
>Bar : Bar, Symbol(Bar, Decl(exportAssignClassAndModule_0.ts, 3, 12))
    }
}
export = Foo;
>Foo : Foo, Symbol(Foo, Decl(exportAssignClassAndModule_0.ts, 0, 0), Decl(exportAssignClassAndModule_0.ts, 2, 1))

