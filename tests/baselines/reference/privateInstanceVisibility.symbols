=== tests/cases/compiler/privateInstanceVisibility.ts ===
module Test {
>Test : Symbol(Test, Decl(privateInstanceVisibility.ts, 0, 0))
 
    export class Example {
>Example : Symbol(Example, Decl(privateInstanceVisibility.ts, 0, 13))
 
        private someNumber: number;
>someNumber : Symbol(someNumber, Decl(privateInstanceVisibility.ts, 2, 26))
 
        

        public doSomething() {
>doSomething : Symbol(doSomething, Decl(privateInstanceVisibility.ts, 4, 35))
 
            var that = this;                      
>that : Symbol(that, Decl(privateInstanceVisibility.ts, 10, 15))
>this : Symbol(Example, Decl(privateInstanceVisibility.ts, 0, 13))

            function innerFunction() {
>innerFunction : Symbol(innerFunction, Decl(privateInstanceVisibility.ts, 10, 28))
                
                var num = that.someNumber;
>num : Symbol(num, Decl(privateInstanceVisibility.ts, 14, 19))
>that.someNumber : Symbol(someNumber, Decl(privateInstanceVisibility.ts, 2, 26))
>that : Symbol(that, Decl(privateInstanceVisibility.ts, 10, 15))
>someNumber : Symbol(someNumber, Decl(privateInstanceVisibility.ts, 2, 26))
 
            }
 
        }        

    }
 
}



class C {
>C : Symbol(C, Decl(privateInstanceVisibility.ts, 22, 1))

    private x: number;
>x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))

    getX() { return this.x; }
>getX : Symbol(getX, Decl(privateInstanceVisibility.ts, 28, 22))
>this.x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))
>this : Symbol(C, Decl(privateInstanceVisibility.ts, 22, 1))
>x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))

    clone(other: C) {
>clone : Symbol(clone, Decl(privateInstanceVisibility.ts, 30, 29))
>other : Symbol(other, Decl(privateInstanceVisibility.ts, 32, 10))
>C : Symbol(C, Decl(privateInstanceVisibility.ts, 22, 1))

        this.x = other.x;
>this.x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))
>this : Symbol(C, Decl(privateInstanceVisibility.ts, 22, 1))
>x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))
>other.x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))
>other : Symbol(other, Decl(privateInstanceVisibility.ts, 32, 10))
>x : Symbol(x, Decl(privateInstanceVisibility.ts, 26, 9))

    }
}

