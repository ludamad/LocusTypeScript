=== tests/cases/compiler/moduleCodeGenTest5.ts ===
export var x = 0;
>x : number, Symbol(x,Decl(moduleCodeGenTest5.ts,0,10))
>0 : number

var y = 0;
>y : number, Symbol(y,Decl(moduleCodeGenTest5.ts,1,3))
>0 : number

export function f1() {}
>f1 : () => void, Symbol(f1,Decl(moduleCodeGenTest5.ts,1,10))

function f2() {}
>f2 : () => void, Symbol(f2,Decl(moduleCodeGenTest5.ts,3,23))

export class C1 {
>C1 : C1, Symbol(C1,Decl(moduleCodeGenTest5.ts,4,16))

	public p1 = 0;
>p1 : number, Symbol(p1,Decl(moduleCodeGenTest5.ts,6,17))
>0 : number

	public p2() {}
>p2 : () => void, Symbol(p2,Decl(moduleCodeGenTest5.ts,7,15))
}
class C2{
>C2 : C2, Symbol(C2,Decl(moduleCodeGenTest5.ts,9,1))

	public p1 = 0;
>p1 : number, Symbol(p1,Decl(moduleCodeGenTest5.ts,10,9))
>0 : number

	public p2() {}	
>p2 : () => void, Symbol(p2,Decl(moduleCodeGenTest5.ts,11,15))
}

export enum E1 {A=0}
>E1 : E1, Symbol(E1,Decl(moduleCodeGenTest5.ts,13,1))
>A : E1, Symbol(E1.A,Decl(moduleCodeGenTest5.ts,15,16))
>0 : number

var u = E1.A;
>u : E1, Symbol(u,Decl(moduleCodeGenTest5.ts,16,3))
>E1.A : E1, Symbol(E1.A,Decl(moduleCodeGenTest5.ts,15,16))
>E1 : typeof E1, Symbol(E1,Decl(moduleCodeGenTest5.ts,13,1))
>A : E1, Symbol(E1.A,Decl(moduleCodeGenTest5.ts,15,16))

enum E2 {B=0}
>E2 : E2, Symbol(E2,Decl(moduleCodeGenTest5.ts,16,13))
>B : E2, Symbol(E2.B,Decl(moduleCodeGenTest5.ts,17,9))
>0 : number

var v = E2.B;
>v : E2, Symbol(v,Decl(moduleCodeGenTest5.ts,18,3))
>E2.B : E2, Symbol(E2.B,Decl(moduleCodeGenTest5.ts,17,9))
>E2 : typeof E2, Symbol(E2,Decl(moduleCodeGenTest5.ts,16,13))
>B : E2, Symbol(E2.B,Decl(moduleCodeGenTest5.ts,17,9))


