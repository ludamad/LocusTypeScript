=== tests/cases/compiler/declareFileExportAssignmentWithVarFromVariableStatement.ts ===
module m2 {
>m2 : { (): connectExport; test1: connectModule; test2(): connectModule; }, Symbol(m2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,0),Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,11))

    export interface connectModule {
>connectModule : connectModule, Symbol(connectModule,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,11))

        (res, req, next): void;
>res : any, Symbol(res,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,2,9))
>req : any, Symbol(req,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,2,13))
>next : any, Symbol(next,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,2,18))
    }
    export interface connectExport {
>connectExport : connectExport, Symbol(connectExport,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,3,5))

        use: (mod: connectModule) => connectExport;
>use : (mod: connectModule) => connectExport, Symbol(use,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,4,36))
>mod : connectModule, Symbol(mod,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,5,14))
>connectModule : connectModule, Symbol(connectModule,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,11))
>connectExport : connectExport, Symbol(connectExport,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,3,5))

        listen: (port: number) => void;
>listen : (port: number) => void, Symbol(listen,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,5,51))
>port : number, Symbol(port,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,6,17))
    }

}

var x = 10, m2: {
>x : number, Symbol(x,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,3))
>10 : number
>m2 : { (): m2.connectExport; test1: m2.connectModule; test2(): m2.connectModule; }, Symbol(m2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,0),Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,11))

    (): m2.connectExport;
>m2 : any, Symbol(m2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,0),Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,11))
>connectExport : m2.connectExport, Symbol(m2.connectExport,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,3,5))

    test1: m2.connectModule;
>test1 : m2.connectModule, Symbol(test1,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,12,25))
>m2 : any, Symbol(m2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,0),Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,11))
>connectModule : m2.connectModule, Symbol(m2.connectModule,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,11))

    test2(): m2.connectModule;
>test2 : () => m2.connectModule, Symbol(test2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,13,28))
>m2 : any, Symbol(m2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,0),Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,11))
>connectModule : m2.connectModule, Symbol(m2.connectModule,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,11))

};

export = m2;
>m2 : { (): m2.connectExport; test1: m2.connectModule; test2(): m2.connectModule; }, Symbol(m2,Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,0,0),Decl(declareFileExportAssignmentWithVarFromVariableStatement.ts,11,11))

