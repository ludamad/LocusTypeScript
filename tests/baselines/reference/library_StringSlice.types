=== tests/cases/compiler/library_StringSlice.ts ===
// String.prototype.slice can have zero, one, or two arguments
String.prototype.slice();
>String.prototype.slice() : string
>String.prototype.slice : (start?: number, end?: number) => string, Symbol(String.slice,Decl(lib.d.ts,369,35))
>String.prototype : String, Symbol(StringConstructor.prototype,Decl(lib.d.ts,435,26))
>String : StringConstructor, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))
>prototype : String, Symbol(StringConstructor.prototype,Decl(lib.d.ts,435,26))
>slice : (start?: number, end?: number) => string, Symbol(String.slice,Decl(lib.d.ts,369,35))

String.prototype.slice(0);
>String.prototype.slice(0) : string
>String.prototype.slice : (start?: number, end?: number) => string, Symbol(String.slice,Decl(lib.d.ts,369,35))
>String.prototype : String, Symbol(StringConstructor.prototype,Decl(lib.d.ts,435,26))
>String : StringConstructor, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))
>prototype : String, Symbol(StringConstructor.prototype,Decl(lib.d.ts,435,26))
>slice : (start?: number, end?: number) => string, Symbol(String.slice,Decl(lib.d.ts,369,35))
>0 : number

String.prototype.slice(0,1);
>String.prototype.slice(0,1) : string
>String.prototype.slice : (start?: number, end?: number) => string, Symbol(String.slice,Decl(lib.d.ts,369,35))
>String.prototype : String, Symbol(StringConstructor.prototype,Decl(lib.d.ts,435,26))
>String : StringConstructor, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))
>prototype : String, Symbol(StringConstructor.prototype,Decl(lib.d.ts,435,26))
>slice : (start?: number, end?: number) => string, Symbol(String.slice,Decl(lib.d.ts,369,35))
>0 : number
>1 : number

