=== tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures2.ts ===
// checking subtype relations for function types as it relates to contextual signature instantiation

class Base { foo: string; }
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>foo : string, Symbol(foo, Decl(subtypingWithConstructSignatures2.ts, 2, 12))

class Derived extends Base { bar: string; }
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>bar : string, Symbol(bar, Decl(subtypingWithConstructSignatures2.ts, 3, 28))

class Derived2 extends Derived { baz: string; }
>Derived2 : Derived2, Symbol(Derived2, Decl(subtypingWithConstructSignatures2.ts, 3, 43))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>baz : string, Symbol(baz, Decl(subtypingWithConstructSignatures2.ts, 4, 32))

class OtherDerived extends Base { bing: string; }
>OtherDerived : OtherDerived, Symbol(OtherDerived, Decl(subtypingWithConstructSignatures2.ts, 4, 47))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>bing : string, Symbol(bing, Decl(subtypingWithConstructSignatures2.ts, 5, 33))

declare function foo1(a: new (x: number) => number[]): typeof a;
>foo1 : { (a: new (x: number) => number[]): new (x: number) => number[]; (a: any): any; }, Symbol(foo1, Decl(subtypingWithConstructSignatures2.ts, 5, 49), Decl(subtypingWithConstructSignatures2.ts, 7, 64))
>a : new (x: number) => number[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 7, 22))
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 7, 30))
>a : new (x: number) => number[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 7, 22))

declare function foo1(a: any): any;
>foo1 : { (a: new (x: number) => number[]): new (x: number) => number[]; (a: any): any; }, Symbol(foo1, Decl(subtypingWithConstructSignatures2.ts, 5, 49), Decl(subtypingWithConstructSignatures2.ts, 7, 64))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 8, 22))

declare function foo2(a: new (x: number) => string[]): typeof a;
>foo2 : { (a: new (x: number) => string[]): new (x: number) => string[]; (a: any): any; }, Symbol(foo2, Decl(subtypingWithConstructSignatures2.ts, 8, 35), Decl(subtypingWithConstructSignatures2.ts, 10, 64))
>a : new (x: number) => string[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 10, 22))
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 10, 30))
>a : new (x: number) => string[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 10, 22))

declare function foo2(a: any): any;
>foo2 : { (a: new (x: number) => string[]): new (x: number) => string[]; (a: any): any; }, Symbol(foo2, Decl(subtypingWithConstructSignatures2.ts, 8, 35), Decl(subtypingWithConstructSignatures2.ts, 10, 64))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 11, 22))

declare function foo3(a: new (x: number) => void): typeof a;
>foo3 : { (a: new (x: number) => void): new (x: number) => void; (a: any): any; }, Symbol(foo3, Decl(subtypingWithConstructSignatures2.ts, 11, 35), Decl(subtypingWithConstructSignatures2.ts, 13, 60))
>a : new (x: number) => void, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 13, 22))
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 13, 30))
>a : new (x: number) => void, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 13, 22))

declare function foo3(a: any): any;
>foo3 : { (a: new (x: number) => void): new (x: number) => void; (a: any): any; }, Symbol(foo3, Decl(subtypingWithConstructSignatures2.ts, 11, 35), Decl(subtypingWithConstructSignatures2.ts, 13, 60))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 14, 22))

declare function foo4(a: new (x: string, y: number) => string): typeof a;
>foo4 : { (a: new (x: string, y: number) => string): new (x: string, y: number) => string; (a: any): any; }, Symbol(foo4, Decl(subtypingWithConstructSignatures2.ts, 14, 35), Decl(subtypingWithConstructSignatures2.ts, 16, 73))
>a : new (x: string, y: number) => string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 16, 22))
>x : string, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 16, 30))
>y : number, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 16, 40))
>a : new (x: string, y: number) => string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 16, 22))

declare function foo4(a: any): any;
>foo4 : { (a: new (x: string, y: number) => string): new (x: string, y: number) => string; (a: any): any; }, Symbol(foo4, Decl(subtypingWithConstructSignatures2.ts, 14, 35), Decl(subtypingWithConstructSignatures2.ts, 16, 73))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 17, 22))

declare function foo5(a: new (x: new (arg: string) => number) => string): typeof a;
>foo5 : { (a: new (x: new (arg: string) => number) => string): new (x: new (arg: string) => number) => string; (a: any): any; }, Symbol(foo5, Decl(subtypingWithConstructSignatures2.ts, 17, 35), Decl(subtypingWithConstructSignatures2.ts, 19, 83))
>a : new (x: new (arg: string) => number) => string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 19, 22))
>x : new (arg: string) => number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 19, 30))
>arg : string, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 19, 38))
>a : new (x: new (arg: string) => number) => string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 19, 22))

declare function foo5(a: any): any;
>foo5 : { (a: new (x: new (arg: string) => number) => string): new (x: new (arg: string) => number) => string; (a: any): any; }, Symbol(foo5, Decl(subtypingWithConstructSignatures2.ts, 17, 35), Decl(subtypingWithConstructSignatures2.ts, 19, 83))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 20, 22))

declare function foo6(a: new (x: new (arg: Base) => Derived) => Base): typeof a;
>foo6 : { (a: new (x: new (arg: Base) => Derived) => Base): new (x: new (arg: Base) => Derived) => Base; (a: any): any; }, Symbol(foo6, Decl(subtypingWithConstructSignatures2.ts, 20, 35), Decl(subtypingWithConstructSignatures2.ts, 22, 80))
>a : new (x: new (arg: Base) => Derived) => Base, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 22, 22))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 22, 30))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 22, 38))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>a : new (x: new (arg: Base) => Derived) => Base, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 22, 22))

declare function foo6(a: any): any;
>foo6 : { (a: new (x: new (arg: Base) => Derived) => Base): new (x: new (arg: Base) => Derived) => Base; (a: any): any; }, Symbol(foo6, Decl(subtypingWithConstructSignatures2.ts, 20, 35), Decl(subtypingWithConstructSignatures2.ts, 22, 80))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 23, 22))

declare function foo7(a: new (x: new (arg: Base) => Derived) => new (r: Base) => Derived): typeof a;
>foo7 : { (a: new (x: new (arg: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo7, Decl(subtypingWithConstructSignatures2.ts, 23, 35), Decl(subtypingWithConstructSignatures2.ts, 25, 100))
>a : new (x: new (arg: Base) => Derived) => new (r: Base) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 25, 22))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 25, 30))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 25, 38))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>r : Base, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 25, 69))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>a : new (x: new (arg: Base) => Derived) => new (r: Base) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 25, 22))

declare function foo7(a: any): any;
>foo7 : { (a: new (x: new (arg: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo7, Decl(subtypingWithConstructSignatures2.ts, 23, 35), Decl(subtypingWithConstructSignatures2.ts, 25, 100))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 26, 22))

declare function foo8(a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): typeof a;
>foo8 : { (a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo8, Decl(subtypingWithConstructSignatures2.ts, 26, 35), Decl(subtypingWithConstructSignatures2.ts, 28, 132))
>a : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 28, 22))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 28, 30))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 28, 38))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>y : new (arg2: Base) => Derived, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 28, 60))
>arg2 : Base, Symbol(arg2, Decl(subtypingWithConstructSignatures2.ts, 28, 69))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>r : Base, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 28, 101))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>a : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 28, 22))

declare function foo8(a: any): any;
>foo8 : { (a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo8, Decl(subtypingWithConstructSignatures2.ts, 26, 35), Decl(subtypingWithConstructSignatures2.ts, 28, 132))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 29, 22))

declare function foo9(a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): typeof a;
>foo9 : { (a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo9, Decl(subtypingWithConstructSignatures2.ts, 29, 35), Decl(subtypingWithConstructSignatures2.ts, 31, 132))
>a : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 31, 22))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 31, 30))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 31, 38))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>y : new (arg2: Base) => Derived, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 31, 60))
>arg2 : Base, Symbol(arg2, Decl(subtypingWithConstructSignatures2.ts, 31, 69))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>r : Base, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 31, 101))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>a : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 31, 22))

declare function foo9(a: any): any;
>foo9 : { (a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo9, Decl(subtypingWithConstructSignatures2.ts, 29, 35), Decl(subtypingWithConstructSignatures2.ts, 31, 132))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 32, 22))

declare function foo10(a: new (...x: Derived[]) => Derived): typeof a;
>foo10 : { (a: new (...x: Derived[]) => Derived): new (...x: Derived[]) => Derived; (a: any): any; }, Symbol(foo10, Decl(subtypingWithConstructSignatures2.ts, 32, 35), Decl(subtypingWithConstructSignatures2.ts, 34, 70))
>a : new (...x: Derived[]) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 34, 23))
>x : Derived[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 34, 31))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>a : new (...x: Derived[]) => Derived, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 34, 23))

declare function foo10(a: any): any;
>foo10 : { (a: new (...x: Derived[]) => Derived): new (...x: Derived[]) => Derived; (a: any): any; }, Symbol(foo10, Decl(subtypingWithConstructSignatures2.ts, 32, 35), Decl(subtypingWithConstructSignatures2.ts, 34, 70))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 35, 23))

declare function foo11(a: new (x: { foo: string }, y: { foo: string; bar: string }) => Base): typeof a;
>foo11 : { (a: new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base): new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base; (a: any): any; }, Symbol(foo11, Decl(subtypingWithConstructSignatures2.ts, 35, 36), Decl(subtypingWithConstructSignatures2.ts, 37, 103))
>a : new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 37, 23))
>x : { foo: string; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 37, 31))
>foo : string, Symbol(foo, Decl(subtypingWithConstructSignatures2.ts, 37, 35))
>y : { foo: string; bar: string; }, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 37, 50))
>foo : string, Symbol(foo, Decl(subtypingWithConstructSignatures2.ts, 37, 55))
>bar : string, Symbol(bar, Decl(subtypingWithConstructSignatures2.ts, 37, 68))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>a : new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 37, 23))

declare function foo11(a: any): any;
>foo11 : { (a: new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base): new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base; (a: any): any; }, Symbol(foo11, Decl(subtypingWithConstructSignatures2.ts, 35, 36), Decl(subtypingWithConstructSignatures2.ts, 37, 103))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 38, 23))

declare function foo12(a: new (x: Array<Base>, y: Array<Derived2>) => Array<Derived>): typeof a;
>foo12 : { (a: new (x: Base[], y: Derived2[]) => Derived[]): new (x: Base[], y: Derived2[]) => Derived[]; (a: any): any; }, Symbol(foo12, Decl(subtypingWithConstructSignatures2.ts, 38, 36), Decl(subtypingWithConstructSignatures2.ts, 40, 96))
>a : new (x: Base[], y: Derived2[]) => Derived[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 40, 23))
>x : Base[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 40, 31))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>y : Derived2[], Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 40, 46))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived2 : Derived2, Symbol(Derived2, Decl(subtypingWithConstructSignatures2.ts, 3, 43))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>a : new (x: Base[], y: Derived2[]) => Derived[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 40, 23))

declare function foo12(a: any): any;
>foo12 : { (a: new (x: Base[], y: Derived2[]) => Derived[]): new (x: Base[], y: Derived2[]) => Derived[]; (a: any): any; }, Symbol(foo12, Decl(subtypingWithConstructSignatures2.ts, 38, 36), Decl(subtypingWithConstructSignatures2.ts, 40, 96))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 41, 23))

declare function foo13(a: new (x: Array<Base>, y: Array<Derived>) => Array<Derived>): typeof a;
>foo13 : { (a: new (x: Base[], y: Derived[]) => Derived[]): new (x: Base[], y: Derived[]) => Derived[]; (a: any): any; }, Symbol(foo13, Decl(subtypingWithConstructSignatures2.ts, 41, 36), Decl(subtypingWithConstructSignatures2.ts, 43, 95))
>a : new (x: Base[], y: Derived[]) => Derived[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 43, 23))
>x : Base[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 43, 31))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>y : Derived[], Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 43, 46))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>a : new (x: Base[], y: Derived[]) => Derived[], Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 43, 23))

declare function foo13(a: any): any;
>foo13 : { (a: new (x: Base[], y: Derived[]) => Derived[]): new (x: Base[], y: Derived[]) => Derived[]; (a: any): any; }, Symbol(foo13, Decl(subtypingWithConstructSignatures2.ts, 41, 36), Decl(subtypingWithConstructSignatures2.ts, 43, 95))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 44, 23))

declare function foo14(a: new (x: { a: string; b: number }) => Object): typeof a;
>foo14 : { (a: new (x: { a: string; b: number; }) => Object): new (x: { a: string; b: number; }) => Object; (a: any): any; }, Symbol(foo14, Decl(subtypingWithConstructSignatures2.ts, 44, 36), Decl(subtypingWithConstructSignatures2.ts, 46, 81))
>a : new (x: { a: string; b: number; }) => Object, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 46, 23))
>x : { a: string; b: number; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 46, 31))
>a : string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 46, 35))
>b : number, Symbol(b, Decl(subtypingWithConstructSignatures2.ts, 46, 46))
>Object : Object, Symbol(Object, Decl(lib.d.ts, 92, 1), Decl(lib.d.ts, 223, 11))
>a : new (x: { a: string; b: number; }) => Object, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 46, 23))

declare function foo14(a: any): any;
>foo14 : { (a: new (x: { a: string; b: number; }) => Object): new (x: { a: string; b: number; }) => Object; (a: any): any; }, Symbol(foo14, Decl(subtypingWithConstructSignatures2.ts, 44, 36), Decl(subtypingWithConstructSignatures2.ts, 46, 81))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 47, 23))

declare function foo15(a: { 
>foo15 : { (a: { new (x: number): number[]; new (x: string): string[]; }): { new (x: number): number[]; new (x: string): string[]; }; (a: any): any; }, Symbol(foo15, Decl(subtypingWithConstructSignatures2.ts, 47, 36), Decl(subtypingWithConstructSignatures2.ts, 52, 13))
>a : { new (x: number): number[]; new (x: string): string[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 49, 23))

    new (x: number): number[];
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 50, 9))

    new (x: string): string[]; 
>x : string, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 51, 9))

}): typeof a;
>a : { new (x: number): number[]; new (x: string): string[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 49, 23))

declare function foo15(a: any): any;
>foo15 : { (a: { new (x: number): number[]; new (x: string): string[]; }): { new (x: number): number[]; new (x: string): string[]; }; (a: any): any; }, Symbol(foo15, Decl(subtypingWithConstructSignatures2.ts, 47, 36), Decl(subtypingWithConstructSignatures2.ts, 52, 13))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 53, 23))

declare function foo16(a: {
>foo16 : { (a: { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }): { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }; (a: any): any; }, Symbol(foo16, Decl(subtypingWithConstructSignatures2.ts, 53, 36), Decl(subtypingWithConstructSignatures2.ts, 58, 13))
>a : { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 55, 23))

    new <T extends Derived>(x: T): number[];
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 56, 9))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 56, 28))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 56, 9))

    new <U extends Base>(x: U): number[];
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 57, 9))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>x : U, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 57, 25))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 57, 9))

}): typeof a;
>a : { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 55, 23))

declare function foo16(a: any): any;
>foo16 : { (a: { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }): { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }; (a: any): any; }, Symbol(foo16, Decl(subtypingWithConstructSignatures2.ts, 53, 36), Decl(subtypingWithConstructSignatures2.ts, 58, 13))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 59, 23))

declare function foo17(a: {
>foo17 : { (a: { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }): { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }; (a: any): any; }, Symbol(foo17, Decl(subtypingWithConstructSignatures2.ts, 59, 36), Decl(subtypingWithConstructSignatures2.ts, 64, 13))
>a : { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 61, 23))

    new (x: (a: number) => number): number[];
>x : (a: number) => number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 62, 9))
>a : number, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 62, 13))

    new (x: (a: string) => string): string[];
>x : (a: string) => string, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 63, 9))
>a : string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 63, 13))

}): typeof a;
>a : { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 61, 23))

declare function foo17(a: any): any;
>foo17 : { (a: { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }): { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }; (a: any): any; }, Symbol(foo17, Decl(subtypingWithConstructSignatures2.ts, 59, 36), Decl(subtypingWithConstructSignatures2.ts, 64, 13))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 65, 23))

declare function foo18(a: {
>foo18 : { (a: { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }): { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }; (a: any): any; }, Symbol(foo18, Decl(subtypingWithConstructSignatures2.ts, 65, 36), Decl(subtypingWithConstructSignatures2.ts, 76, 13))
>a : { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 67, 23))

    new (x: {
>x : { new (a: number): number; new (a: string): string; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 68, 9))

        new (a: number): number;
>a : number, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 69, 13))

        new (a: string): string;
>a : string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 70, 13))

    }): any[];
    new (x: {
>x : { new (a: boolean): boolean; new (a: Date): Date; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 72, 9))

        new (a: boolean): boolean;
>a : boolean, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 73, 13))

        new (a: Date): Date;
>a : Date, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 74, 13))
>Date : Date, Symbol(Date, Decl(lib.d.ts, 633, 23), Decl(lib.d.ts, 815, 11))
>Date : Date, Symbol(Date, Decl(lib.d.ts, 633, 23), Decl(lib.d.ts, 815, 11))

    }): any[];
}): typeof a;
>a : { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 67, 23))

declare function foo18(a: any): any;
>foo18 : { (a: { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }): { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }; (a: any): any; }, Symbol(foo18, Decl(subtypingWithConstructSignatures2.ts, 65, 36), Decl(subtypingWithConstructSignatures2.ts, 76, 13))
>a : any, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 77, 23))

var r1arg1: new <T>(x: T) => T[];
>r1arg1 : new <T>(x: T) => T[], Symbol(r1arg1, Decl(subtypingWithConstructSignatures2.ts, 79, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 79, 17))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 79, 20))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 79, 17))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 79, 17))

var r1arg2: new (x: number) => number[];
>r1arg2 : new (x: number) => number[], Symbol(r1arg2, Decl(subtypingWithConstructSignatures2.ts, 80, 3))
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 80, 17))

var r1 = foo1(r1arg1); // any, return types are not subtype of first overload
>r1 : any, Symbol(r1, Decl(subtypingWithConstructSignatures2.ts, 81, 3))
>foo1(r1arg1) : any
>foo1 : { (a: new (x: number) => number[]): new (x: number) => number[]; (a: any): any; }, Symbol(foo1, Decl(subtypingWithConstructSignatures2.ts, 5, 49), Decl(subtypingWithConstructSignatures2.ts, 7, 64))
>r1arg1 : new <T>(x: T) => T[], Symbol(r1arg1, Decl(subtypingWithConstructSignatures2.ts, 79, 3))

var r1a = [r1arg2, r1arg1]; // generic signature, subtype in both directions
>r1a : (new <T>(x: T) => T[])[], Symbol(r1a, Decl(subtypingWithConstructSignatures2.ts, 82, 3))
>[r1arg2, r1arg1] : (new <T>(x: T) => T[])[]
>r1arg2 : new (x: number) => number[], Symbol(r1arg2, Decl(subtypingWithConstructSignatures2.ts, 80, 3))
>r1arg1 : new <T>(x: T) => T[], Symbol(r1arg1, Decl(subtypingWithConstructSignatures2.ts, 79, 3))

var r1b = [r1arg1, r1arg2]; // generic signature, subtype in both directions
>r1b : (new <T>(x: T) => T[])[], Symbol(r1b, Decl(subtypingWithConstructSignatures2.ts, 83, 3))
>[r1arg1, r1arg2] : (new <T>(x: T) => T[])[]
>r1arg1 : new <T>(x: T) => T[], Symbol(r1arg1, Decl(subtypingWithConstructSignatures2.ts, 79, 3))
>r1arg2 : new (x: number) => number[], Symbol(r1arg2, Decl(subtypingWithConstructSignatures2.ts, 80, 3))

var r2arg1: new <T>(x: T) => string[];
>r2arg1 : new <T>(x: T) => string[], Symbol(r2arg1, Decl(subtypingWithConstructSignatures2.ts, 85, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 85, 17))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 85, 20))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 85, 17))

var r2arg2: new (x: number) => string[];
>r2arg2 : new (x: number) => string[], Symbol(r2arg2, Decl(subtypingWithConstructSignatures2.ts, 86, 3))
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 86, 17))

var r2 = foo2(r2arg1);
>r2 : new (x: number) => string[], Symbol(r2, Decl(subtypingWithConstructSignatures2.ts, 87, 3))
>foo2(r2arg1) : new (x: number) => string[]
>foo2 : { (a: new (x: number) => string[]): new (x: number) => string[]; (a: any): any; }, Symbol(foo2, Decl(subtypingWithConstructSignatures2.ts, 8, 35), Decl(subtypingWithConstructSignatures2.ts, 10, 64))
>r2arg1 : new <T>(x: T) => string[], Symbol(r2arg1, Decl(subtypingWithConstructSignatures2.ts, 85, 3))

var r2a = [r2arg1, r2arg2];
>r2a : (new <T>(x: T) => string[])[], Symbol(r2a, Decl(subtypingWithConstructSignatures2.ts, 88, 3))
>[r2arg1, r2arg2] : (new <T>(x: T) => string[])[]
>r2arg1 : new <T>(x: T) => string[], Symbol(r2arg1, Decl(subtypingWithConstructSignatures2.ts, 85, 3))
>r2arg2 : new (x: number) => string[], Symbol(r2arg2, Decl(subtypingWithConstructSignatures2.ts, 86, 3))

var r2b = [r2arg2, r2arg1];
>r2b : (new <T>(x: T) => string[])[], Symbol(r2b, Decl(subtypingWithConstructSignatures2.ts, 89, 3))
>[r2arg2, r2arg1] : (new <T>(x: T) => string[])[]
>r2arg2 : new (x: number) => string[], Symbol(r2arg2, Decl(subtypingWithConstructSignatures2.ts, 86, 3))
>r2arg1 : new <T>(x: T) => string[], Symbol(r2arg1, Decl(subtypingWithConstructSignatures2.ts, 85, 3))

var r3arg1: new <T>(x: T) => T;
>r3arg1 : new <T>(x: T) => T, Symbol(r3arg1, Decl(subtypingWithConstructSignatures2.ts, 91, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 91, 17))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 91, 20))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 91, 17))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 91, 17))

var r3arg2: new (x: number) => void;
>r3arg2 : new (x: number) => void, Symbol(r3arg2, Decl(subtypingWithConstructSignatures2.ts, 92, 3))
>x : number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 92, 17))

var r3 = foo3(r3arg1);
>r3 : new (x: number) => void, Symbol(r3, Decl(subtypingWithConstructSignatures2.ts, 93, 3))
>foo3(r3arg1) : new (x: number) => void
>foo3 : { (a: new (x: number) => void): new (x: number) => void; (a: any): any; }, Symbol(foo3, Decl(subtypingWithConstructSignatures2.ts, 11, 35), Decl(subtypingWithConstructSignatures2.ts, 13, 60))
>r3arg1 : new <T>(x: T) => T, Symbol(r3arg1, Decl(subtypingWithConstructSignatures2.ts, 91, 3))

var r3a = [r3arg1, r3arg2];
>r3a : (new <T>(x: T) => T)[], Symbol(r3a, Decl(subtypingWithConstructSignatures2.ts, 94, 3))
>[r3arg1, r3arg2] : (new <T>(x: T) => T)[]
>r3arg1 : new <T>(x: T) => T, Symbol(r3arg1, Decl(subtypingWithConstructSignatures2.ts, 91, 3))
>r3arg2 : new (x: number) => void, Symbol(r3arg2, Decl(subtypingWithConstructSignatures2.ts, 92, 3))

var r3b = [r3arg2, r3arg1];
>r3b : (new <T>(x: T) => T)[], Symbol(r3b, Decl(subtypingWithConstructSignatures2.ts, 95, 3))
>[r3arg2, r3arg1] : (new <T>(x: T) => T)[]
>r3arg2 : new (x: number) => void, Symbol(r3arg2, Decl(subtypingWithConstructSignatures2.ts, 92, 3))
>r3arg1 : new <T>(x: T) => T, Symbol(r3arg1, Decl(subtypingWithConstructSignatures2.ts, 91, 3))

var r4arg1: new <T, U>(x: T, y: U) => T;
>r4arg1 : new <T, U>(x: T, y: U) => T, Symbol(r4arg1, Decl(subtypingWithConstructSignatures2.ts, 97, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 97, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 97, 19))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 97, 23))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 97, 17))
>y : U, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 97, 28))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 97, 19))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 97, 17))

var r4arg2: new (x: string, y: number) => string;
>r4arg2 : new (x: string, y: number) => string, Symbol(r4arg2, Decl(subtypingWithConstructSignatures2.ts, 98, 3))
>x : string, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 98, 17))
>y : number, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 98, 27))

var r4 = foo4(r4arg1); // any
>r4 : any, Symbol(r4, Decl(subtypingWithConstructSignatures2.ts, 99, 3))
>foo4(r4arg1) : any
>foo4 : { (a: new (x: string, y: number) => string): new (x: string, y: number) => string; (a: any): any; }, Symbol(foo4, Decl(subtypingWithConstructSignatures2.ts, 14, 35), Decl(subtypingWithConstructSignatures2.ts, 16, 73))
>r4arg1 : new <T, U>(x: T, y: U) => T, Symbol(r4arg1, Decl(subtypingWithConstructSignatures2.ts, 97, 3))

var r4a = [r4arg1, r4arg2];
>r4a : (new <T, U>(x: T, y: U) => T)[], Symbol(r4a, Decl(subtypingWithConstructSignatures2.ts, 100, 3))
>[r4arg1, r4arg2] : (new <T, U>(x: T, y: U) => T)[]
>r4arg1 : new <T, U>(x: T, y: U) => T, Symbol(r4arg1, Decl(subtypingWithConstructSignatures2.ts, 97, 3))
>r4arg2 : new (x: string, y: number) => string, Symbol(r4arg2, Decl(subtypingWithConstructSignatures2.ts, 98, 3))

var r4b = [r4arg2, r4arg1];
>r4b : (new <T, U>(x: T, y: U) => T)[], Symbol(r4b, Decl(subtypingWithConstructSignatures2.ts, 101, 3))
>[r4arg2, r4arg1] : (new <T, U>(x: T, y: U) => T)[]
>r4arg2 : new (x: string, y: number) => string, Symbol(r4arg2, Decl(subtypingWithConstructSignatures2.ts, 98, 3))
>r4arg1 : new <T, U>(x: T, y: U) => T, Symbol(r4arg1, Decl(subtypingWithConstructSignatures2.ts, 97, 3))

var r5arg1: new <T, U>(x: new (arg: T) => U) => T;
>r5arg1 : new <T, U>(x: new (arg: T) => U) => T, Symbol(r5arg1, Decl(subtypingWithConstructSignatures2.ts, 103, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 103, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 103, 19))
>x : new (arg: T) => U, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 103, 23))
>arg : T, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 103, 31))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 103, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 103, 19))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 103, 17))

var r5arg2: new (x: new (arg: string) => number) => string;
>r5arg2 : new (x: new (arg: string) => number) => string, Symbol(r5arg2, Decl(subtypingWithConstructSignatures2.ts, 104, 3))
>x : new (arg: string) => number, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 104, 17))
>arg : string, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 104, 25))

var r5 = foo5(r5arg1); // any
>r5 : any, Symbol(r5, Decl(subtypingWithConstructSignatures2.ts, 105, 3))
>foo5(r5arg1) : any
>foo5 : { (a: new (x: new (arg: string) => number) => string): new (x: new (arg: string) => number) => string; (a: any): any; }, Symbol(foo5, Decl(subtypingWithConstructSignatures2.ts, 17, 35), Decl(subtypingWithConstructSignatures2.ts, 19, 83))
>r5arg1 : new <T, U>(x: new (arg: T) => U) => T, Symbol(r5arg1, Decl(subtypingWithConstructSignatures2.ts, 103, 3))

var r5a = [r5arg1, r5arg2];
>r5a : (new <T, U>(x: new (arg: T) => U) => T)[], Symbol(r5a, Decl(subtypingWithConstructSignatures2.ts, 106, 3))
>[r5arg1, r5arg2] : (new <T, U>(x: new (arg: T) => U) => T)[]
>r5arg1 : new <T, U>(x: new (arg: T) => U) => T, Symbol(r5arg1, Decl(subtypingWithConstructSignatures2.ts, 103, 3))
>r5arg2 : new (x: new (arg: string) => number) => string, Symbol(r5arg2, Decl(subtypingWithConstructSignatures2.ts, 104, 3))

var r5b = [r5arg2, r5arg1];
>r5b : (new <T, U>(x: new (arg: T) => U) => T)[], Symbol(r5b, Decl(subtypingWithConstructSignatures2.ts, 107, 3))
>[r5arg2, r5arg1] : (new <T, U>(x: new (arg: T) => U) => T)[]
>r5arg2 : new (x: new (arg: string) => number) => string, Symbol(r5arg2, Decl(subtypingWithConstructSignatures2.ts, 104, 3))
>r5arg1 : new <T, U>(x: new (arg: T) => U) => T, Symbol(r5arg1, Decl(subtypingWithConstructSignatures2.ts, 103, 3))

var r6arg1: new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T;
>r6arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T, Symbol(r6arg1, Decl(subtypingWithConstructSignatures2.ts, 109, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 109, 17))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 109, 32))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : new (arg: T) => U, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 109, 52))
>arg : T, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 109, 60))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 109, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 109, 32))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 109, 17))

var r6arg2: new (x: new (arg: Base) => Derived) => Base;
>r6arg2 : new (x: new (arg: Base) => Derived) => Base, Symbol(r6arg2, Decl(subtypingWithConstructSignatures2.ts, 110, 3))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 110, 17))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 110, 25))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))

var r6 = foo6(r6arg1); // any
>r6 : any, Symbol(r6, Decl(subtypingWithConstructSignatures2.ts, 111, 3))
>foo6(r6arg1) : any
>foo6 : { (a: new (x: new (arg: Base) => Derived) => Base): new (x: new (arg: Base) => Derived) => Base; (a: any): any; }, Symbol(foo6, Decl(subtypingWithConstructSignatures2.ts, 20, 35), Decl(subtypingWithConstructSignatures2.ts, 22, 80))
>r6arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T, Symbol(r6arg1, Decl(subtypingWithConstructSignatures2.ts, 109, 3))

var r6a = [r6arg1, r6arg2];
>r6a : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T)[], Symbol(r6a, Decl(subtypingWithConstructSignatures2.ts, 112, 3))
>[r6arg1, r6arg2] : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T)[]
>r6arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T, Symbol(r6arg1, Decl(subtypingWithConstructSignatures2.ts, 109, 3))
>r6arg2 : new (x: new (arg: Base) => Derived) => Base, Symbol(r6arg2, Decl(subtypingWithConstructSignatures2.ts, 110, 3))

var r6b = [r6arg2, r6arg1];
>r6b : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T)[], Symbol(r6b, Decl(subtypingWithConstructSignatures2.ts, 113, 3))
>[r6arg2, r6arg1] : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T)[]
>r6arg2 : new (x: new (arg: Base) => Derived) => Base, Symbol(r6arg2, Decl(subtypingWithConstructSignatures2.ts, 110, 3))
>r6arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => T, Symbol(r6arg1, Decl(subtypingWithConstructSignatures2.ts, 109, 3))

var r7arg1: new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U;
>r7arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U, Symbol(r7arg1, Decl(subtypingWithConstructSignatures2.ts, 115, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 115, 17))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 115, 32))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : new (arg: T) => U, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 115, 52))
>arg : T, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 115, 60))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 115, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 115, 32))
>r : T, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 115, 82))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 115, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 115, 32))

var r7arg2: new (x: new (arg: Base) => Derived) => new (r: Base) => Derived;
>r7arg2 : new (x: new (arg: Base) => Derived) => new (r: Base) => Derived, Symbol(r7arg2, Decl(subtypingWithConstructSignatures2.ts, 116, 3))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 116, 17))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 116, 25))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>r : Base, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 116, 56))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r7 = foo7(r7arg1); // any
>r7 : any, Symbol(r7, Decl(subtypingWithConstructSignatures2.ts, 117, 3))
>foo7(r7arg1) : any
>foo7 : { (a: new (x: new (arg: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo7, Decl(subtypingWithConstructSignatures2.ts, 23, 35), Decl(subtypingWithConstructSignatures2.ts, 25, 100))
>r7arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U, Symbol(r7arg1, Decl(subtypingWithConstructSignatures2.ts, 115, 3))

var r7a = [r7arg1, r7arg2];
>r7a : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U)[], Symbol(r7a, Decl(subtypingWithConstructSignatures2.ts, 118, 3))
>[r7arg1, r7arg2] : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U)[]
>r7arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U, Symbol(r7arg1, Decl(subtypingWithConstructSignatures2.ts, 115, 3))
>r7arg2 : new (x: new (arg: Base) => Derived) => new (r: Base) => Derived, Symbol(r7arg2, Decl(subtypingWithConstructSignatures2.ts, 116, 3))

var r7b = [r7arg2, r7arg1];
>r7b : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U)[], Symbol(r7b, Decl(subtypingWithConstructSignatures2.ts, 119, 3))
>[r7arg2, r7arg1] : (new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U)[]
>r7arg2 : new (x: new (arg: Base) => Derived) => new (r: Base) => Derived, Symbol(r7arg2, Decl(subtypingWithConstructSignatures2.ts, 116, 3))
>r7arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U) => new (r: T) => U, Symbol(r7arg1, Decl(subtypingWithConstructSignatures2.ts, 115, 3))

var r8arg1: new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U;
>r8arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U, Symbol(r8arg1, Decl(subtypingWithConstructSignatures2.ts, 121, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 121, 17))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 121, 32))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : new (arg: T) => U, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 121, 52))
>arg : T, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 121, 60))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 121, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 121, 32))
>y : new (arg2: T) => U, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 121, 73))
>arg2 : T, Symbol(arg2, Decl(subtypingWithConstructSignatures2.ts, 121, 82))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 121, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 121, 32))
>r : T, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 121, 105))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 121, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 121, 32))

var r8arg2: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived;
>r8arg2 : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(r8arg2, Decl(subtypingWithConstructSignatures2.ts, 122, 3))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 122, 17))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 122, 25))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>y : new (arg2: Base) => Derived, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 122, 47))
>arg2 : Base, Symbol(arg2, Decl(subtypingWithConstructSignatures2.ts, 122, 56))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>r : Base, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 122, 88))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r8 = foo8(r8arg1); // any
>r8 : any, Symbol(r8, Decl(subtypingWithConstructSignatures2.ts, 123, 3))
>foo8(r8arg1) : any
>foo8 : { (a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo8, Decl(subtypingWithConstructSignatures2.ts, 26, 35), Decl(subtypingWithConstructSignatures2.ts, 28, 132))
>r8arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U, Symbol(r8arg1, Decl(subtypingWithConstructSignatures2.ts, 121, 3))

var r8a = [r8arg1, r8arg2];
>r8a : (new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U)[], Symbol(r8a, Decl(subtypingWithConstructSignatures2.ts, 124, 3))
>[r8arg1, r8arg2] : (new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U)[]
>r8arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U, Symbol(r8arg1, Decl(subtypingWithConstructSignatures2.ts, 121, 3))
>r8arg2 : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(r8arg2, Decl(subtypingWithConstructSignatures2.ts, 122, 3))

var r8b = [r8arg2, r8arg1];
>r8b : (new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U)[], Symbol(r8b, Decl(subtypingWithConstructSignatures2.ts, 125, 3))
>[r8arg2, r8arg1] : (new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U)[]
>r8arg2 : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(r8arg2, Decl(subtypingWithConstructSignatures2.ts, 122, 3))
>r8arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: new (arg2: T) => U) => new (r: T) => U, Symbol(r8arg1, Decl(subtypingWithConstructSignatures2.ts, 121, 3))

var r9arg1: new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number }) => U) => new (r: T) => U;
>r9arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U, Symbol(r9arg1, Decl(subtypingWithConstructSignatures2.ts, 127, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 127, 17))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 127, 32))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : new (arg: T) => U, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 127, 52))
>arg : T, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 127, 60))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 127, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 127, 32))
>y : (arg2: { foo: string; bing: number; }) => U, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 127, 73))
>arg2 : { foo: string; bing: number; }, Symbol(arg2, Decl(subtypingWithConstructSignatures2.ts, 127, 78))
>foo : string, Symbol(foo, Decl(subtypingWithConstructSignatures2.ts, 127, 85))
>bing : number, Symbol(bing, Decl(subtypingWithConstructSignatures2.ts, 127, 98))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 127, 32))
>r : T, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 127, 129))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 127, 17))
>U : U, Symbol(U, Decl(subtypingWithConstructSignatures2.ts, 127, 32))

var r9arg2: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived;
>r9arg2 : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(r9arg2, Decl(subtypingWithConstructSignatures2.ts, 128, 3))
>x : new (arg: Base) => Derived, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 128, 17))
>arg : Base, Symbol(arg, Decl(subtypingWithConstructSignatures2.ts, 128, 25))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>y : new (arg2: Base) => Derived, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 128, 47))
>arg2 : Base, Symbol(arg2, Decl(subtypingWithConstructSignatures2.ts, 128, 56))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>r : Base, Symbol(r, Decl(subtypingWithConstructSignatures2.ts, 128, 88))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r9 = foo9(r9arg1); // any
>r9 : any, Symbol(r9, Decl(subtypingWithConstructSignatures2.ts, 129, 3))
>foo9(r9arg1) : any
>foo9 : { (a: new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived): new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived; (a: any): any; }, Symbol(foo9, Decl(subtypingWithConstructSignatures2.ts, 29, 35), Decl(subtypingWithConstructSignatures2.ts, 31, 132))
>r9arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U, Symbol(r9arg1, Decl(subtypingWithConstructSignatures2.ts, 127, 3))

var r9a = [r9arg1, r9arg2];
>r9a : ((new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U) | (new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived))[], Symbol(r9a, Decl(subtypingWithConstructSignatures2.ts, 130, 3))
>[r9arg1, r9arg2] : ((new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U) | (new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived))[]
>r9arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U, Symbol(r9arg1, Decl(subtypingWithConstructSignatures2.ts, 127, 3))
>r9arg2 : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(r9arg2, Decl(subtypingWithConstructSignatures2.ts, 128, 3))

var r9b = [r9arg2, r9arg1];
>r9b : ((new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U) | (new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived))[], Symbol(r9b, Decl(subtypingWithConstructSignatures2.ts, 131, 3))
>[r9arg2, r9arg1] : ((new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U) | (new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived))[]
>r9arg2 : new (x: new (arg: Base) => Derived, y: new (arg2: Base) => Derived) => new (r: Base) => Derived, Symbol(r9arg2, Decl(subtypingWithConstructSignatures2.ts, 128, 3))
>r9arg1 : new <T extends Base, U extends Derived>(x: new (arg: T) => U, y: (arg2: { foo: string; bing: number; }) => U) => new (r: T) => U, Symbol(r9arg1, Decl(subtypingWithConstructSignatures2.ts, 127, 3))

var r10arg1: new <T extends Derived>(...x: T[]) => T;
>r10arg1 : new <T extends Derived>(...x: T[]) => T, Symbol(r10arg1, Decl(subtypingWithConstructSignatures2.ts, 133, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 133, 18))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : T[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 133, 37))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 133, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 133, 18))

var r10arg2: new (...x: Derived[]) => Derived;
>r10arg2 : new (...x: Derived[]) => Derived, Symbol(r10arg2, Decl(subtypingWithConstructSignatures2.ts, 134, 3))
>x : Derived[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 134, 18))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r10 = foo10(r10arg1); // any
>r10 : any, Symbol(r10, Decl(subtypingWithConstructSignatures2.ts, 135, 3))
>foo10(r10arg1) : any
>foo10 : { (a: new (...x: Derived[]) => Derived): new (...x: Derived[]) => Derived; (a: any): any; }, Symbol(foo10, Decl(subtypingWithConstructSignatures2.ts, 32, 35), Decl(subtypingWithConstructSignatures2.ts, 34, 70))
>r10arg1 : new <T extends Derived>(...x: T[]) => T, Symbol(r10arg1, Decl(subtypingWithConstructSignatures2.ts, 133, 3))

var r10a = [r10arg1, r10arg2];
>r10a : (new <T extends Derived>(...x: T[]) => T)[], Symbol(r10a, Decl(subtypingWithConstructSignatures2.ts, 136, 3))
>[r10arg1, r10arg2] : (new <T extends Derived>(...x: T[]) => T)[]
>r10arg1 : new <T extends Derived>(...x: T[]) => T, Symbol(r10arg1, Decl(subtypingWithConstructSignatures2.ts, 133, 3))
>r10arg2 : new (...x: Derived[]) => Derived, Symbol(r10arg2, Decl(subtypingWithConstructSignatures2.ts, 134, 3))

var r10b = [r10arg2, r10arg1];
>r10b : (new <T extends Derived>(...x: T[]) => T)[], Symbol(r10b, Decl(subtypingWithConstructSignatures2.ts, 137, 3))
>[r10arg2, r10arg1] : (new <T extends Derived>(...x: T[]) => T)[]
>r10arg2 : new (...x: Derived[]) => Derived, Symbol(r10arg2, Decl(subtypingWithConstructSignatures2.ts, 134, 3))
>r10arg1 : new <T extends Derived>(...x: T[]) => T, Symbol(r10arg1, Decl(subtypingWithConstructSignatures2.ts, 133, 3))

var r11arg1: new <T extends Base>(x: T, y: T) => T;
>r11arg1 : new <T extends Base>(x: T, y: T) => T, Symbol(r11arg1, Decl(subtypingWithConstructSignatures2.ts, 139, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 139, 18))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 139, 34))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 139, 18))
>y : T, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 139, 39))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 139, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 139, 18))

var r11arg2: new (x: { foo: string }, y: { foo: string; bar: string }) => Base;
>r11arg2 : new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base, Symbol(r11arg2, Decl(subtypingWithConstructSignatures2.ts, 140, 3))
>x : { foo: string; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 140, 18))
>foo : string, Symbol(foo, Decl(subtypingWithConstructSignatures2.ts, 140, 22))
>y : { foo: string; bar: string; }, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 140, 37))
>foo : string, Symbol(foo, Decl(subtypingWithConstructSignatures2.ts, 140, 42))
>bar : string, Symbol(bar, Decl(subtypingWithConstructSignatures2.ts, 140, 55))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))

var r11 = foo11(r11arg1); // any
>r11 : any, Symbol(r11, Decl(subtypingWithConstructSignatures2.ts, 141, 3))
>foo11(r11arg1) : any
>foo11 : { (a: new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base): new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base; (a: any): any; }, Symbol(foo11, Decl(subtypingWithConstructSignatures2.ts, 35, 36), Decl(subtypingWithConstructSignatures2.ts, 37, 103))
>r11arg1 : new <T extends Base>(x: T, y: T) => T, Symbol(r11arg1, Decl(subtypingWithConstructSignatures2.ts, 139, 3))

var r11a = [r11arg1, r11arg2];
>r11a : (new <T extends Base>(x: T, y: T) => T)[], Symbol(r11a, Decl(subtypingWithConstructSignatures2.ts, 142, 3))
>[r11arg1, r11arg2] : (new <T extends Base>(x: T, y: T) => T)[]
>r11arg1 : new <T extends Base>(x: T, y: T) => T, Symbol(r11arg1, Decl(subtypingWithConstructSignatures2.ts, 139, 3))
>r11arg2 : new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base, Symbol(r11arg2, Decl(subtypingWithConstructSignatures2.ts, 140, 3))

var r11b = [r11arg2, r11arg1];
>r11b : (new <T extends Base>(x: T, y: T) => T)[], Symbol(r11b, Decl(subtypingWithConstructSignatures2.ts, 143, 3))
>[r11arg2, r11arg1] : (new <T extends Base>(x: T, y: T) => T)[]
>r11arg2 : new (x: { foo: string; }, y: { foo: string; bar: string; }) => Base, Symbol(r11arg2, Decl(subtypingWithConstructSignatures2.ts, 140, 3))
>r11arg1 : new <T extends Base>(x: T, y: T) => T, Symbol(r11arg1, Decl(subtypingWithConstructSignatures2.ts, 139, 3))

var r12arg1: new <T extends Array<Base>>(x: Array<Base>, y: T) => Array<Derived>;
>r12arg1 : new <T extends Base[]>(x: Base[], y: T) => Derived[], Symbol(r12arg1, Decl(subtypingWithConstructSignatures2.ts, 145, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 145, 18))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>x : Base[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 145, 41))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>y : T, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 145, 56))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 145, 18))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r12arg2: new (x: Array<Base>, y: Array<Derived2>) => Array<Derived>;
>r12arg2 : new (x: Base[], y: Derived2[]) => Derived[], Symbol(r12arg2, Decl(subtypingWithConstructSignatures2.ts, 146, 3))
>x : Base[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 146, 18))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>y : Derived2[], Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 146, 33))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived2 : Derived2, Symbol(Derived2, Decl(subtypingWithConstructSignatures2.ts, 3, 43))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r12 = foo12(r12arg1); // any
>r12 : new (x: Base[], y: Derived2[]) => Derived[], Symbol(r12, Decl(subtypingWithConstructSignatures2.ts, 147, 3))
>foo12(r12arg1) : new (x: Base[], y: Derived2[]) => Derived[]
>foo12 : { (a: new (x: Base[], y: Derived2[]) => Derived[]): new (x: Base[], y: Derived2[]) => Derived[]; (a: any): any; }, Symbol(foo12, Decl(subtypingWithConstructSignatures2.ts, 38, 36), Decl(subtypingWithConstructSignatures2.ts, 40, 96))
>r12arg1 : new <T extends Base[]>(x: Base[], y: T) => Derived[], Symbol(r12arg1, Decl(subtypingWithConstructSignatures2.ts, 145, 3))

var r12a = [r12arg1, r12arg2];
>r12a : (new <T extends Base[]>(x: Base[], y: T) => Derived[])[], Symbol(r12a, Decl(subtypingWithConstructSignatures2.ts, 148, 3))
>[r12arg1, r12arg2] : (new <T extends Base[]>(x: Base[], y: T) => Derived[])[]
>r12arg1 : new <T extends Base[]>(x: Base[], y: T) => Derived[], Symbol(r12arg1, Decl(subtypingWithConstructSignatures2.ts, 145, 3))
>r12arg2 : new (x: Base[], y: Derived2[]) => Derived[], Symbol(r12arg2, Decl(subtypingWithConstructSignatures2.ts, 146, 3))

var r12b = [r12arg2, r12arg1];
>r12b : (new <T extends Base[]>(x: Base[], y: T) => Derived[])[], Symbol(r12b, Decl(subtypingWithConstructSignatures2.ts, 149, 3))
>[r12arg2, r12arg1] : (new <T extends Base[]>(x: Base[], y: T) => Derived[])[]
>r12arg2 : new (x: Base[], y: Derived2[]) => Derived[], Symbol(r12arg2, Decl(subtypingWithConstructSignatures2.ts, 146, 3))
>r12arg1 : new <T extends Base[]>(x: Base[], y: T) => Derived[], Symbol(r12arg1, Decl(subtypingWithConstructSignatures2.ts, 145, 3))

var r13arg1: new <T extends Array<Derived>>(x: Array<Base>, y: T) => T;
>r13arg1 : new <T extends Derived[]>(x: Base[], y: T) => T, Symbol(r13arg1, Decl(subtypingWithConstructSignatures2.ts, 151, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 151, 18))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>x : Base[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 151, 44))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>y : T, Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 151, 59))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 151, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 151, 18))

var r13arg2: new (x: Array<Base>, y: Array<Derived>) => Array<Derived>;
>r13arg2 : new (x: Base[], y: Derived[]) => Derived[], Symbol(r13arg2, Decl(subtypingWithConstructSignatures2.ts, 152, 3))
>x : Base[], Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 152, 18))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>y : Derived[], Symbol(y, Decl(subtypingWithConstructSignatures2.ts, 152, 33))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))
>Array : T[], Symbol(Array, Decl(lib.d.ts, 1000, 23), Decl(lib.d.ts, 1171, 11))
>Derived : Derived, Symbol(Derived, Decl(subtypingWithConstructSignatures2.ts, 2, 27))

var r13 = foo13(r13arg1); // any
>r13 : any, Symbol(r13, Decl(subtypingWithConstructSignatures2.ts, 153, 3))
>foo13(r13arg1) : any
>foo13 : { (a: new (x: Base[], y: Derived[]) => Derived[]): new (x: Base[], y: Derived[]) => Derived[]; (a: any): any; }, Symbol(foo13, Decl(subtypingWithConstructSignatures2.ts, 41, 36), Decl(subtypingWithConstructSignatures2.ts, 43, 95))
>r13arg1 : new <T extends Derived[]>(x: Base[], y: T) => T, Symbol(r13arg1, Decl(subtypingWithConstructSignatures2.ts, 151, 3))

var r13a = [r13arg1, r13arg2];
>r13a : (new <T extends Derived[]>(x: Base[], y: T) => T)[], Symbol(r13a, Decl(subtypingWithConstructSignatures2.ts, 154, 3))
>[r13arg1, r13arg2] : (new <T extends Derived[]>(x: Base[], y: T) => T)[]
>r13arg1 : new <T extends Derived[]>(x: Base[], y: T) => T, Symbol(r13arg1, Decl(subtypingWithConstructSignatures2.ts, 151, 3))
>r13arg2 : new (x: Base[], y: Derived[]) => Derived[], Symbol(r13arg2, Decl(subtypingWithConstructSignatures2.ts, 152, 3))

var r13b = [r13arg2, r13arg1];
>r13b : (new <T extends Derived[]>(x: Base[], y: T) => T)[], Symbol(r13b, Decl(subtypingWithConstructSignatures2.ts, 155, 3))
>[r13arg2, r13arg1] : (new <T extends Derived[]>(x: Base[], y: T) => T)[]
>r13arg2 : new (x: Base[], y: Derived[]) => Derived[], Symbol(r13arg2, Decl(subtypingWithConstructSignatures2.ts, 152, 3))
>r13arg1 : new <T extends Derived[]>(x: Base[], y: T) => T, Symbol(r13arg1, Decl(subtypingWithConstructSignatures2.ts, 151, 3))

var r14arg1: new <T>(x: { a: T; b: T }) => T;
>r14arg1 : new <T>(x: { a: T; b: T; }) => T, Symbol(r14arg1, Decl(subtypingWithConstructSignatures2.ts, 157, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 157, 18))
>x : { a: T; b: T; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 157, 21))
>a : T, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 157, 25))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 157, 18))
>b : T, Symbol(b, Decl(subtypingWithConstructSignatures2.ts, 157, 31))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 157, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 157, 18))

var r14arg2: new (x: { a: string; b: number }) => Object;
>r14arg2 : new (x: { a: string; b: number; }) => Object, Symbol(r14arg2, Decl(subtypingWithConstructSignatures2.ts, 158, 3))
>x : { a: string; b: number; }, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 158, 18))
>a : string, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 158, 22))
>b : number, Symbol(b, Decl(subtypingWithConstructSignatures2.ts, 158, 33))
>Object : Object, Symbol(Object, Decl(lib.d.ts, 92, 1), Decl(lib.d.ts, 223, 11))

var r14 = foo14(r14arg1); // any
>r14 : any, Symbol(r14, Decl(subtypingWithConstructSignatures2.ts, 159, 3))
>foo14(r14arg1) : any
>foo14 : { (a: new (x: { a: string; b: number; }) => Object): new (x: { a: string; b: number; }) => Object; (a: any): any; }, Symbol(foo14, Decl(subtypingWithConstructSignatures2.ts, 44, 36), Decl(subtypingWithConstructSignatures2.ts, 46, 81))
>r14arg1 : new <T>(x: { a: T; b: T; }) => T, Symbol(r14arg1, Decl(subtypingWithConstructSignatures2.ts, 157, 3))

var r14a = [r14arg1, r14arg2];
>r14a : (new <T>(x: { a: T; b: T; }) => T)[], Symbol(r14a, Decl(subtypingWithConstructSignatures2.ts, 160, 3))
>[r14arg1, r14arg2] : (new <T>(x: { a: T; b: T; }) => T)[]
>r14arg1 : new <T>(x: { a: T; b: T; }) => T, Symbol(r14arg1, Decl(subtypingWithConstructSignatures2.ts, 157, 3))
>r14arg2 : new (x: { a: string; b: number; }) => Object, Symbol(r14arg2, Decl(subtypingWithConstructSignatures2.ts, 158, 3))

var r14b = [r14arg2, r14arg1];
>r14b : (new <T>(x: { a: T; b: T; }) => T)[], Symbol(r14b, Decl(subtypingWithConstructSignatures2.ts, 161, 3))
>[r14arg2, r14arg1] : (new <T>(x: { a: T; b: T; }) => T)[]
>r14arg2 : new (x: { a: string; b: number; }) => Object, Symbol(r14arg2, Decl(subtypingWithConstructSignatures2.ts, 158, 3))
>r14arg1 : new <T>(x: { a: T; b: T; }) => T, Symbol(r14arg1, Decl(subtypingWithConstructSignatures2.ts, 157, 3))

var r15arg1: new <T>(x: T) => T[];
>r15arg1 : new <T>(x: T) => T[], Symbol(r15arg1, Decl(subtypingWithConstructSignatures2.ts, 163, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 163, 18))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 163, 21))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 163, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 163, 18))

var r15 = foo15(r15arg1); // any
>r15 : any, Symbol(r15, Decl(subtypingWithConstructSignatures2.ts, 164, 3))
>foo15(r15arg1) : any
>foo15 : { (a: { new (x: number): number[]; new (x: string): string[]; }): { new (x: number): number[]; new (x: string): string[]; }; (a: any): any; }, Symbol(foo15, Decl(subtypingWithConstructSignatures2.ts, 47, 36), Decl(subtypingWithConstructSignatures2.ts, 52, 13))
>r15arg1 : new <T>(x: T) => T[], Symbol(r15arg1, Decl(subtypingWithConstructSignatures2.ts, 163, 3))

var r16arg1: new <T extends Base>(x: T) => number[];
>r16arg1 : new <T extends Base>(x: T) => number[], Symbol(r16arg1, Decl(subtypingWithConstructSignatures2.ts, 165, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 165, 18))
>Base : Base, Symbol(Base, Decl(subtypingWithConstructSignatures2.ts, 0, 0))
>x : T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 165, 34))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 165, 18))

var r16 = foo16(r16arg1);
>r16 : { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }, Symbol(r16, Decl(subtypingWithConstructSignatures2.ts, 166, 3))
>foo16(r16arg1) : { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }
>foo16 : { (a: { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }): { new <T extends Derived>(x: T): number[]; new <U extends Base>(x: U): number[]; }; (a: any): any; }, Symbol(foo16, Decl(subtypingWithConstructSignatures2.ts, 53, 36), Decl(subtypingWithConstructSignatures2.ts, 58, 13))
>r16arg1 : new <T extends Base>(x: T) => number[], Symbol(r16arg1, Decl(subtypingWithConstructSignatures2.ts, 165, 3))

var r17arg1: new <T>(x: (a: T) => T) => T[];
>r17arg1 : new <T>(x: (a: T) => T) => T[], Symbol(r17arg1, Decl(subtypingWithConstructSignatures2.ts, 167, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 167, 18))
>x : (a: T) => T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 167, 21))
>a : T, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 167, 25))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 167, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 167, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 167, 18))

var r17 = foo17(r17arg1); // any
>r17 : any, Symbol(r17, Decl(subtypingWithConstructSignatures2.ts, 168, 3))
>foo17(r17arg1) : any
>foo17 : { (a: { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }): { new (x: (a: number) => number): number[]; new (x: (a: string) => string): string[]; }; (a: any): any; }, Symbol(foo17, Decl(subtypingWithConstructSignatures2.ts, 59, 36), Decl(subtypingWithConstructSignatures2.ts, 64, 13))
>r17arg1 : new <T>(x: (a: T) => T) => T[], Symbol(r17arg1, Decl(subtypingWithConstructSignatures2.ts, 167, 3))

var r18arg1: new <T>(x: (a: T) => T) => T[];
>r18arg1 : new <T>(x: (a: T) => T) => T[], Symbol(r18arg1, Decl(subtypingWithConstructSignatures2.ts, 169, 3))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 169, 18))
>x : (a: T) => T, Symbol(x, Decl(subtypingWithConstructSignatures2.ts, 169, 21))
>a : T, Symbol(a, Decl(subtypingWithConstructSignatures2.ts, 169, 25))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 169, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 169, 18))
>T : T, Symbol(T, Decl(subtypingWithConstructSignatures2.ts, 169, 18))

var r18 = foo18(r18arg1); 
>r18 : any, Symbol(r18, Decl(subtypingWithConstructSignatures2.ts, 170, 3))
>foo18(r18arg1) : any
>foo18 : { (a: { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }): { new (x: { new (a: number): number; new (a: string): string; }): any[]; new (x: { new (a: boolean): boolean; new (a: Date): Date; }): any[]; }; (a: any): any; }, Symbol(foo18, Decl(subtypingWithConstructSignatures2.ts, 65, 36), Decl(subtypingWithConstructSignatures2.ts, 76, 13))
>r18arg1 : new <T>(x: (a: T) => T) => T[], Symbol(r18arg1, Decl(subtypingWithConstructSignatures2.ts, 169, 3))

