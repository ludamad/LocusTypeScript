=== tests/cases/compiler/memberVariableDeclarations1.ts ===
// from spec

class Employee {
>Employee : Symbol(Employee, Decl(memberVariableDeclarations1.ts, 0, 0))

    public name: string;
>name : Symbol(name, Decl(memberVariableDeclarations1.ts, 2, 16))

    public address: string;
>address : Symbol(address, Decl(memberVariableDeclarations1.ts, 3, 24))

    public retired = false;
>retired : Symbol(retired, Decl(memberVariableDeclarations1.ts, 4, 27))

    public manager: Employee = null;
>manager : Symbol(manager, Decl(memberVariableDeclarations1.ts, 5, 27))
>Employee : Symbol(Employee, Decl(memberVariableDeclarations1.ts, 0, 0))

    public reports: Employee[] = [];
>reports : Symbol(reports, Decl(memberVariableDeclarations1.ts, 6, 36))
>Employee : Symbol(Employee, Decl(memberVariableDeclarations1.ts, 0, 0))
}

class Employee2 {
>Employee2 : Symbol(Employee2, Decl(memberVariableDeclarations1.ts, 8, 1))

    public name: string;
>name : Symbol(name, Decl(memberVariableDeclarations1.ts, 10, 17))

    public address: string;
>address : Symbol(address, Decl(memberVariableDeclarations1.ts, 11, 24))

    public retired: boolean;
>retired : Symbol(retired, Decl(memberVariableDeclarations1.ts, 12, 27))

    public manager: Employee;
>manager : Symbol(manager, Decl(memberVariableDeclarations1.ts, 13, 28))
>Employee : Symbol(Employee, Decl(memberVariableDeclarations1.ts, 0, 0))

    public reports: Employee[];
>reports : Symbol(reports, Decl(memberVariableDeclarations1.ts, 14, 29))
>Employee : Symbol(Employee, Decl(memberVariableDeclarations1.ts, 0, 0))

    constructor() {
        this.retired = false;
>this.retired : Symbol(retired, Decl(memberVariableDeclarations1.ts, 12, 27))
>this : Symbol(Employee2, Decl(memberVariableDeclarations1.ts, 8, 1))
>retired : Symbol(retired, Decl(memberVariableDeclarations1.ts, 12, 27))

        this.manager = null;
>this.manager : Symbol(manager, Decl(memberVariableDeclarations1.ts, 13, 28))
>this : Symbol(Employee2, Decl(memberVariableDeclarations1.ts, 8, 1))
>manager : Symbol(manager, Decl(memberVariableDeclarations1.ts, 13, 28))

        this.reports = [];
>this.reports : Symbol(reports, Decl(memberVariableDeclarations1.ts, 14, 29))
>this : Symbol(Employee2, Decl(memberVariableDeclarations1.ts, 8, 1))
>reports : Symbol(reports, Decl(memberVariableDeclarations1.ts, 14, 29))
    }
}

var e1: Employee;
>e1 : Symbol(e1, Decl(memberVariableDeclarations1.ts, 23, 3))
>Employee : Symbol(Employee, Decl(memberVariableDeclarations1.ts, 0, 0))

var e2: Employee2;
>e2 : Symbol(e2, Decl(memberVariableDeclarations1.ts, 24, 3))
>Employee2 : Symbol(Employee2, Decl(memberVariableDeclarations1.ts, 8, 1))

e1 = e2;
>e1 : Symbol(e1, Decl(memberVariableDeclarations1.ts, 23, 3))
>e2 : Symbol(e2, Decl(memberVariableDeclarations1.ts, 24, 3))

e2 = e1;
>e2 : Symbol(e2, Decl(memberVariableDeclarations1.ts, 24, 3))
>e1 : Symbol(e1, Decl(memberVariableDeclarations1.ts, 23, 3))

