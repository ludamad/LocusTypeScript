=== tests/cases/compiler/privateInstanceVisibility.ts ===
module Test {
>Test : typeof Test, Symbol(Test,Decl(privateInstanceVisibility.ts,0,0))
 
    export class Example {
>Example : Example, Symbol(Example,Decl(privateInstanceVisibility.ts,0,13))
 
        private someNumber: number;
>someNumber : number, Symbol(someNumber,Decl(privateInstanceVisibility.ts,2,26))
 
        

        public doSomething() {
>doSomething : () => void, Symbol(doSomething,Decl(privateInstanceVisibility.ts,4,35))
 
            var that = this;                      
>that : Example, Symbol(that,Decl(privateInstanceVisibility.ts,10,15))
>this : Example, Symbol(Example,Decl(privateInstanceVisibility.ts,0,13))

            function innerFunction() {
>innerFunction : () => void, Symbol(innerFunction,Decl(privateInstanceVisibility.ts,10,28))
                
                var num = that.someNumber;
>num : number, Symbol(num,Decl(privateInstanceVisibility.ts,14,19))
>that.someNumber : number, Symbol(someNumber,Decl(privateInstanceVisibility.ts,2,26))
>that : Example, Symbol(that,Decl(privateInstanceVisibility.ts,10,15))
>someNumber : number, Symbol(someNumber,Decl(privateInstanceVisibility.ts,2,26))
 
            }
 
        }        

    }
 
}



class C {
>C : C, Symbol(C,Decl(privateInstanceVisibility.ts,22,1))

    private x: number;
>x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))

    getX() { return this.x; }
>getX : () => number, Symbol(getX,Decl(privateInstanceVisibility.ts,28,22))
>this.x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))
>this : C, Symbol(C,Decl(privateInstanceVisibility.ts,22,1))
>x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))

    clone(other: C) {
>clone : (other: C) => void, Symbol(clone,Decl(privateInstanceVisibility.ts,30,29))
>other : C, Symbol(other,Decl(privateInstanceVisibility.ts,32,10))
>C : C, Symbol(C,Decl(privateInstanceVisibility.ts,22,1))

        this.x = other.x;
>this.x = other.x : number
>this.x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))
>this : C, Symbol(C,Decl(privateInstanceVisibility.ts,22,1))
>x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))
>other.x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))
>other : C, Symbol(other,Decl(privateInstanceVisibility.ts,32,10))
>x : number, Symbol(x,Decl(privateInstanceVisibility.ts,26,9))

    }
}

