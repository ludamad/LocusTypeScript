=== tests/cases/compiler/declFileTypeAnnotationUnionType.ts ===

class c {
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))

    private p: string;
>p : Symbol(p, Decl(declFileTypeAnnotationUnionType.ts, 1, 9))
}
module m {
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))

    export class c {
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 4, 10))

        private q: string;
>q : Symbol(q, Decl(declFileTypeAnnotationUnionType.ts, 5, 20))
    }
    export class g<T> {
>g : Symbol(g, Decl(declFileTypeAnnotationUnionType.ts, 7, 5))
>T : Symbol(T, Decl(declFileTypeAnnotationUnionType.ts, 8, 19))

        private r: string;
>r : Symbol(r, Decl(declFileTypeAnnotationUnionType.ts, 8, 23))
    }
}
class g<T> {
>g : Symbol(g, Decl(declFileTypeAnnotationUnionType.ts, 11, 1))
>T : Symbol(T, Decl(declFileTypeAnnotationUnionType.ts, 12, 8))

    private s: string;
>s : Symbol(s, Decl(declFileTypeAnnotationUnionType.ts, 12, 12))
}

// Just the name
var k: c | m.c = new c() || new m.c();
>k : Symbol(k, Decl(declFileTypeAnnotationUnionType.ts, 17, 3))
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))
>c : Symbol(m.c, Decl(declFileTypeAnnotationUnionType.ts, 4, 10))
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))
>m.c : Symbol(m.c, Decl(declFileTypeAnnotationUnionType.ts, 4, 10))
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))
>c : Symbol(m.c, Decl(declFileTypeAnnotationUnionType.ts, 4, 10))

var l = new c() || new m.c();
>l : Symbol(l, Decl(declFileTypeAnnotationUnionType.ts, 18, 3))
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))
>m.c : Symbol(m.c, Decl(declFileTypeAnnotationUnionType.ts, 4, 10))
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))
>c : Symbol(m.c, Decl(declFileTypeAnnotationUnionType.ts, 4, 10))

var x: g<string> | m.g<number> |  (() => c) = new g<string>() ||  new m.g<number>() || (() => new c());
>x : Symbol(x, Decl(declFileTypeAnnotationUnionType.ts, 20, 3))
>g : Symbol(g, Decl(declFileTypeAnnotationUnionType.ts, 11, 1))
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))
>g : Symbol(m.g, Decl(declFileTypeAnnotationUnionType.ts, 7, 5))
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))
>g : Symbol(g, Decl(declFileTypeAnnotationUnionType.ts, 11, 1))
>m.g : Symbol(m.g, Decl(declFileTypeAnnotationUnionType.ts, 7, 5))
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))
>g : Symbol(m.g, Decl(declFileTypeAnnotationUnionType.ts, 7, 5))
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))

var y = new g<string>() || new m.g<number>() || (() => new c());
>y : Symbol(y, Decl(declFileTypeAnnotationUnionType.ts, 21, 3))
>g : Symbol(g, Decl(declFileTypeAnnotationUnionType.ts, 11, 1))
>m.g : Symbol(m.g, Decl(declFileTypeAnnotationUnionType.ts, 7, 5))
>m : Symbol(m, Decl(declFileTypeAnnotationUnionType.ts, 3, 1))
>g : Symbol(m.g, Decl(declFileTypeAnnotationUnionType.ts, 7, 5))
>c : Symbol(c, Decl(declFileTypeAnnotationUnionType.ts, 0, 0))

