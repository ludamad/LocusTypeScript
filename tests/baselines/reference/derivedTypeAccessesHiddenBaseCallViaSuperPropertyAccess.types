=== tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts ===
class Base {
>Base : Base, Symbol(Base,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,0))

    foo(x: { a: number }): { a: number } {
>foo : (x: { a: number; }) => { a: number; }, Symbol(foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,12))
>x : { a: number; }, Symbol(x,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,1,8))
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,1,12))
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,1,28))

        return null;
>null : null
    }
}

class Derived extends Base {
>Derived : Derived, Symbol(Derived,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,4,1))
>Base : Base, Symbol(Base,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,0))

    foo(x: { a: number; b: number }): { a: number; b: number } {
>foo : (x: { a: number; b: number; }) => { a: number; b: number; }, Symbol(foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,6,28))
>x : { a: number; b: number; }, Symbol(x,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,7,8))
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,7,12))
>b : number, Symbol(b,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,7,23))
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,7,39))
>b : number, Symbol(b,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,7,50))

        return null;
>null : null
    }

    bar() {
>bar : () => void, Symbol(bar,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,9,5))

        var r = super.foo({ a: 1 }); // { a: number }
>r : { a: number; }, Symbol(r,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,12,11))
>super.foo({ a: 1 }) : { a: number; }
>super.foo : (x: { a: number; }) => { a: number; }, Symbol(Base.foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,12))
>super : Base, Symbol(Base,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,0))
>foo : (x: { a: number; }) => { a: number; }, Symbol(Base.foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,12))
>{ a: 1 } : { a: number; }
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,12,27))
>1 : number

        var r2 = super.foo({ a: 1, b: 2 }); // { a: number }
>r2 : { a: number; }, Symbol(r2,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,13,11))
>super.foo({ a: 1, b: 2 }) : { a: number; }
>super.foo : (x: { a: number; }) => { a: number; }, Symbol(Base.foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,12))
>super : Base, Symbol(Base,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,0))
>foo : (x: { a: number; }) => { a: number; }, Symbol(Base.foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,0,12))
>{ a: 1, b: 2 } : { a: number; b: number; }
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,13,28))
>1 : number
>b : number, Symbol(b,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,13,34))
>2 : number

        var r3 = this.foo({ a: 1, b: 2 }); // { a: number; b: number; }
>r3 : { a: number; b: number; }, Symbol(r3,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,14,11))
>this.foo({ a: 1, b: 2 }) : { a: number; b: number; }
>this.foo : (x: { a: number; b: number; }) => { a: number; b: number; }, Symbol(foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,6,28))
>this : Derived, Symbol(Derived,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,4,1))
>foo : (x: { a: number; b: number; }) => { a: number; b: number; }, Symbol(foo,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,6,28))
>{ a: 1, b: 2 } : { a: number; b: number; }
>a : number, Symbol(a,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,14,27))
>1 : number
>b : number, Symbol(b,Decl(derivedTypeAccessesHiddenBaseCallViaSuperPropertyAccess.ts,14,33))
>2 : number
    }
}
