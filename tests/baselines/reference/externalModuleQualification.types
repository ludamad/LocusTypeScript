=== tests/cases/compiler/externalModuleQualification.ts ===
export var ID = "test";
>ID : string, Symbol(ID,Decl(externalModuleQualification.ts,0,10))
>"test" : string

export class DiffEditor<A, B, C> {
>DiffEditor : DiffEditor<A, B, C>, Symbol(DiffEditor,Decl(externalModuleQualification.ts,0,23))
>A : A, Symbol(A,Decl(externalModuleQualification.ts,1,24))
>B : B, Symbol(B,Decl(externalModuleQualification.ts,1,26))
>C : C, Symbol(C,Decl(externalModuleQualification.ts,1,29))

    private previousDiffAction: NavigateAction;
>previousDiffAction : NavigateAction, Symbol(previousDiffAction,Decl(externalModuleQualification.ts,1,34))
>NavigateAction : NavigateAction, Symbol(NavigateAction,Decl(externalModuleQualification.ts,5,1))

    constructor(id: string = ID) {
>id : string, Symbol(id,Decl(externalModuleQualification.ts,3,16))
>ID : string, Symbol(ID,Decl(externalModuleQualification.ts,0,10))
    }
}
class NavigateAction {
>NavigateAction : NavigateAction, Symbol(NavigateAction,Decl(externalModuleQualification.ts,5,1))

    f(editor: DiffEditor<any, any, any>) {
>f : (editor: DiffEditor<any, any, any>) => void, Symbol(f,Decl(externalModuleQualification.ts,6,22))
>editor : DiffEditor<any, any, any>, Symbol(editor,Decl(externalModuleQualification.ts,7,6))
>DiffEditor : DiffEditor<A, B, C>, Symbol(DiffEditor,Decl(externalModuleQualification.ts,0,23))
    }
}

