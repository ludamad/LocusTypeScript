=== tests/cases/compiler/declFileTypeAnnotationBuiltInType.ts ===

// string
function foo(): string {
>foo : () => string, Symbol(foo,Decl(declFileTypeAnnotationBuiltInType.ts,0,0))

    return "";
>"" : string
}
function foo2() {
>foo2 : () => string, Symbol(foo2,Decl(declFileTypeAnnotationBuiltInType.ts,4,1))

    return "";
>"" : string
}

// number
function foo3(): number {
>foo3 : () => number, Symbol(foo3,Decl(declFileTypeAnnotationBuiltInType.ts,7,1))

    return 10;
>10 : number
}
function foo4() {
>foo4 : () => number, Symbol(foo4,Decl(declFileTypeAnnotationBuiltInType.ts,12,1))

    return 10;
>10 : number
}

// boolean
function foo5(): boolean {
>foo5 : () => boolean, Symbol(foo5,Decl(declFileTypeAnnotationBuiltInType.ts,15,1))

    return true;
>true : boolean
}
function foo6() {
>foo6 : () => boolean, Symbol(foo6,Decl(declFileTypeAnnotationBuiltInType.ts,20,1))

    return false;
>false : boolean
}

// void
function foo7(): void {
>foo7 : () => void, Symbol(foo7,Decl(declFileTypeAnnotationBuiltInType.ts,23,1))

    return;
}
function foo8() {
>foo8 : () => void, Symbol(foo8,Decl(declFileTypeAnnotationBuiltInType.ts,28,1))

    return;
}

// any
function foo9(): any {
>foo9 : () => any, Symbol(foo9,Decl(declFileTypeAnnotationBuiltInType.ts,31,1))

    return undefined;
>undefined : undefined, Symbol(undefined)
}
function foo10() {
>foo10 : () => any, Symbol(foo10,Decl(declFileTypeAnnotationBuiltInType.ts,36,1))

    return undefined;
>undefined : undefined, Symbol(undefined)
}
