=== tests/cases/compiler/superCallFromClassThatDerivesFromGenericType1.ts ===
declare class B<T> {
>B : B<T>, Symbol(B,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,0))
>T : T, Symbol(T,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,16))

    m<U>(): B<U>;
>m : <U>() => B<U>, Symbol(m,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,20))
>U : U, Symbol(U,Decl(superCallFromClassThatDerivesFromGenericType1.ts,1,6))
>B : B<T>, Symbol(B,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,0))
>U : U, Symbol(U,Decl(superCallFromClassThatDerivesFromGenericType1.ts,1,6))

    static g(): B<any>;
>g : () => B<any>, Symbol(B.g,Decl(superCallFromClassThatDerivesFromGenericType1.ts,1,17))
>B : B<T>, Symbol(B,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,0))
}

class D extends B<any> {
>D : D, Symbol(D,Decl(superCallFromClassThatDerivesFromGenericType1.ts,3,1))
>B : B<T>, Symbol(B,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,0))

    constructor() {
        super();
>super() : void
>super : typeof B, Symbol(B,Decl(superCallFromClassThatDerivesFromGenericType1.ts,0,0))
    }
}

