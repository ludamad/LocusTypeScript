=== tests/cases/compiler/generics4NoError.ts ===
class C<T> { private x: T; }
>C : C<T>, Symbol(C,Decl(generics4NoError.ts,0,0))
>T : T, Symbol(T,Decl(generics4NoError.ts,0,8))
>x : T, Symbol(x,Decl(generics4NoError.ts,0,12))
>T : T, Symbol(T,Decl(generics4NoError.ts,0,8))

interface X { f(): string; }
>X : X, Symbol(X,Decl(generics4NoError.ts,0,28))
>f : () => string, Symbol(f,Decl(generics4NoError.ts,1,13))

interface Y { f(): boolean; }
>Y : Y, Symbol(Y,Decl(generics4NoError.ts,1,28))
>f : () => boolean, Symbol(f,Decl(generics4NoError.ts,2,13))

var a: C<X>;
>a : C<X>, Symbol(a,Decl(generics4NoError.ts,3,3))
>C : C<T>, Symbol(C,Decl(generics4NoError.ts,0,0))
>X : X, Symbol(X,Decl(generics4NoError.ts,0,28))

var b: C<Y>;
>b : C<Y>, Symbol(b,Decl(generics4NoError.ts,4,3))
>C : C<T>, Symbol(C,Decl(generics4NoError.ts,0,0))
>Y : Y, Symbol(Y,Decl(generics4NoError.ts,1,28))

