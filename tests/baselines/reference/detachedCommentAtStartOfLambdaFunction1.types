=== tests/cases/compiler/detachedCommentAtStartOfLambdaFunction1.ts ===
class TestFile {
>TestFile : TestFile, Symbol(TestFile,Decl(detachedCommentAtStartOfLambdaFunction1.ts,0,0))

    name: string;
>name : string, Symbol(name,Decl(detachedCommentAtStartOfLambdaFunction1.ts,0,16))

    foo(message: string): () => string {
>foo : (message: string) => () => string, Symbol(foo,Decl(detachedCommentAtStartOfLambdaFunction1.ts,1,17))
>message : string, Symbol(message,Decl(detachedCommentAtStartOfLambdaFunction1.ts,2,8))

        return (...x: string[]) =>
>(...x: string[]) =>            /// <summary>Test summary</summary>            /// <param name="message" type="String" />            /// <returns type="Function" />            message + this.name : (...x: string[]) => string
>x : string[], Symbol(x,Decl(detachedCommentAtStartOfLambdaFunction1.ts,3,16))

            /// <summary>Test summary</summary>
            /// <param name="message" type="String" />
            /// <returns type="Function" />
            message + this.name;
>message + this.name : string
>message : string, Symbol(message,Decl(detachedCommentAtStartOfLambdaFunction1.ts,2,8))
>this.name : string, Symbol(name,Decl(detachedCommentAtStartOfLambdaFunction1.ts,0,16))
>this : TestFile, Symbol(TestFile,Decl(detachedCommentAtStartOfLambdaFunction1.ts,0,0))
>name : string, Symbol(name,Decl(detachedCommentAtStartOfLambdaFunction1.ts,0,16))
    }
}
