=== tests/cases/compiler/funduleUsedAcrossFileBoundary_file1.ts ===
declare function Q<T>(value: T): string;
>Q : typeof Q
>T : T
>value : T
>T : T

declare module Q {
>Q : typeof Q

    interface Promise<T> {
>Promise : Promise<T>
>T : T

        foo: string;
>foo : string
    }
    export function defer<T>(): string;
>defer : typeof defer
>T : T
}

=== tests/cases/compiler/funduleUsedAcrossFileBoundary_file2.ts ===
function promiseWithCancellation<T>(promise: Q.Promise<T>) {
>promiseWithCancellation : typeof promiseWithCancellation
>T : T
>promise : Q.Promise<T>
>Q : unknown
>Promise : Q.Promise<T>
>T : T

    var deferred = Q.defer<T>(); // used to be an error
>deferred : string
>Q.defer<T>() : string
>Q.defer : typeof Q.defer
>Q : typeof Q
>defer : typeof Q.defer
>T : T
}
