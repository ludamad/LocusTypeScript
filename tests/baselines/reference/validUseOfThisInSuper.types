=== tests/cases/compiler/validUseOfThisInSuper.ts ===
class Base {
>Base : Base, Symbol(Base, Decl(validUseOfThisInSuper.ts, 0, 0))

    constructor(public b: Base) {
>b : Base, Symbol(b, Decl(validUseOfThisInSuper.ts, 1, 16))
>Base : Base, Symbol(Base, Decl(validUseOfThisInSuper.ts, 0, 0))
    }
}
class Super extends Base {
>Super : Super, Symbol(Super, Decl(validUseOfThisInSuper.ts, 3, 1))
>Base : Base, Symbol(Base, Decl(validUseOfThisInSuper.ts, 0, 0))

    constructor() {
        super((() => this)()); // ok since this is not the case: The constructor declares parameter properties or the containing class declares instance member variables with initializers.
>super((() => this)()) : void
>super : typeof Base, Symbol(Base, Decl(validUseOfThisInSuper.ts, 0, 0))
>(() => this)() : Super
>(() => this) : () => Super
>() => this : () => Super
>this : Super, Symbol(Super, Decl(validUseOfThisInSuper.ts, 3, 1))
    }
}
