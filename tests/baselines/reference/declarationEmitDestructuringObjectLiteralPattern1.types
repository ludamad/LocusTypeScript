=== tests/cases/compiler/declarationEmitDestructuringObjectLiteralPattern1.ts ===

var { } = { x: 5, y: "hello" };
>{ x: 5, y: "hello" } : { x: number; y: string; }
>x : number, Symbol(x,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,1,11))
>5 : number
>y : string, Symbol(y,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,1,17))
>"hello" : string

var { x4 } = { x4: 5, y4: "hello" };
>x4 : number, Symbol(x4,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,2,5))
>{ x4: 5, y4: "hello" } : { x4: number; y4: string; }
>x4 : number, Symbol(x4,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,2,14))
>5 : number
>y4 : string, Symbol(y4,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,2,21))
>"hello" : string

var { y5 } = { x5: 5, y5: "hello" };
>y5 : string, Symbol(y5,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,3,5))
>{ x5: 5, y5: "hello" } : { x5: number; y5: string; }
>x5 : number, Symbol(x5,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,3,14))
>5 : number
>y5 : string, Symbol(y5,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,3,21))
>"hello" : string

var { x6, y6 } = { x6: 5, y6: "hello" };
>x6 : number, Symbol(x6,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,4,5))
>y6 : string, Symbol(y6,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,4,9))
>{ x6: 5, y6: "hello" } : { x6: number; y6: string; }
>x6 : number, Symbol(x6,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,4,18))
>5 : number
>y6 : string, Symbol(y6,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,4,25))
>"hello" : string

var { x7: a1 } = { x7: 5, y7: "hello" };
>x7 : any
>a1 : number, Symbol(a1,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,5,5))
>{ x7: 5, y7: "hello" } : { x7: number; y7: string; }
>x7 : number, Symbol(x7,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,5,18))
>5 : number
>y7 : string, Symbol(y7,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,5,25))
>"hello" : string

var { y8: b1 } = { x8: 5, y8: "hello" };
>y8 : any
>b1 : string, Symbol(b1,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,6,5))
>{ x8: 5, y8: "hello" } : { x8: number; y8: string; }
>x8 : number, Symbol(x8,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,6,18))
>5 : number
>y8 : string, Symbol(y8,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,6,25))
>"hello" : string

var { x9: a2, y9: b2 } = { x9: 5, y9: "hello" };
>x9 : any
>a2 : number, Symbol(a2,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,7,5))
>y9 : any
>b2 : string, Symbol(b2,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,7,13))
>{ x9: 5, y9: "hello" } : { x9: number; y9: string; }
>x9 : number, Symbol(x9,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,7,26))
>5 : number
>y9 : string, Symbol(y9,Decl(declarationEmitDestructuringObjectLiteralPattern1.ts,7,33))
>"hello" : string

