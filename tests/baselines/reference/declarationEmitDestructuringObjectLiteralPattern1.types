=== tests/cases/compiler/declarationEmitDestructuringObjectLiteralPattern1.ts ===

var { } = { x: 5, y: "hello" };
>{ x: 5, y: "hello" } : { x: number; y: string; }
>x : number
>5 : number
>y : string
>"hello" : string

var { x4 } = { x4: 5, y4: "hello" };
>x4 : number
>{ x4: 5, y4: "hello" } : { x4: number; y4: string; }
>x4 : number
>5 : number
>y4 : string
>"hello" : string

var { y5 } = { x5: 5, y5: "hello" };
>y5 : string
>{ x5: 5, y5: "hello" } : { x5: number; y5: string; }
>x5 : number
>5 : number
>y5 : string
>"hello" : string

var { x6, y6 } = { x6: 5, y6: "hello" };
>x6 : number
>y6 : string
>{ x6: 5, y6: "hello" } : { x6: number; y6: string; }
>x6 : number
>5 : number
>y6 : string
>"hello" : string

var { x7: a1 } = { x7: 5, y7: "hello" };
>x7 : unknown
>a1 : number
>{ x7: 5, y7: "hello" } : { x7: number; y7: string; }
>x7 : number
>5 : number
>y7 : string
>"hello" : string

var { y8: b1 } = { x8: 5, y8: "hello" };
>y8 : unknown
>b1 : string
>{ x8: 5, y8: "hello" } : { x8: number; y8: string; }
>x8 : number
>5 : number
>y8 : string
>"hello" : string

var { x9: a2, y9: b2 } = { x9: 5, y9: "hello" };
>x9 : unknown
>a2 : number
>y9 : unknown
>b2 : string
>{ x9: 5, y9: "hello" } : { x9: number; y9: string; }
>x9 : number
>5 : number
>y9 : string
>"hello" : string

