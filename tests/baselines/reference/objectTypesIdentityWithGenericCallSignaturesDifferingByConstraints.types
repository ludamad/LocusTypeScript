=== tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts ===
// Two call or construct signatures are considered identical when they have the same number of type parameters and, considering those 
// parameters pairwise identical, have identical type parameter constraints, identical number of parameters with identical kind(required, 
// optional or rest) and types, and identical return types.

class A {
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

    foo<T extends Date>(x: T): string { return null; }
>foo : <T extends Date>(x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,4,9))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,5,8))
>Date : Date, Symbol(Date,Decl(lib.d.ts,633,23),Decl(lib.d.ts,815,11))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,5,24))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,5,8))
>null : null
}

class B<T extends Array<number>> {
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,8,8))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

    foo(x: T): string { return null; }
>foo : (x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,8,34))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,9,8))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,8,8))
>null : null
}

class C<T extends String> {
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,12,8))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

    foo(x: T): string { return null; }
>foo : (x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,12,27))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,13,8))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,12,8))
>null : null
}

interface I<T extends Number> {
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,16,12))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

    foo(x: T): string;
>foo : (x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,16,31))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,17,8))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,16,12))
}

interface I2 {
>I2 : I2, Symbol(I2,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,18,1))

    foo<T extends Boolean>(x: T): string;
>foo : <T extends Boolean>(x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,20,14))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,21,8))
>Boolean : Boolean, Symbol(Boolean,Decl(lib.d.ts,443,38),Decl(lib.d.ts,456,11))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,21,27))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,21,8))
}

var a: { foo<T extends Array<string>>(x: T): string }
>a : { foo<T extends string[]>(x: T): string; }, Symbol(a,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,3))
>foo : <T extends string[]>(x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,8))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,13))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,38))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,13))

var b = { foo<T extends RegExp>(x: T) { return ''; } };
>b : { foo<T extends RegExp>(x: T): string; }, Symbol(b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,3))
>{ foo<T extends RegExp>(x: T) { return ''; } } : { foo<T extends RegExp>(x: T): string; }
>foo : <T extends RegExp>(x: T) => string, Symbol(foo,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,9))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,14))
>RegExp : RegExp, Symbol(RegExp,Decl(lib.d.ts,825,1),Decl(lib.d.ts,876,11))
>x : T, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,32))
>T : T, Symbol(T,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,14))
>'' : string

function foo1(x: A);
>foo1 : { (x: A): any; (x: A): any; }, Symbol(foo1,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,55),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,27,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,28,20))
>x : A, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,27,14))
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

function foo1(x: A); // error
>foo1 : { (x: A): any; (x: A): any; }, Symbol(foo1,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,55),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,27,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,28,20))
>x : A, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,28,14))
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

function foo1(x: any) { }
>foo1 : { (x: A): any; (x: A): any; }, Symbol(foo1,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,55),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,27,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,28,20))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,29,14))

function foo1b(x: B<Array<number>>);
>foo1b : { (x: B<number[]>): any; (x: B<number[]>): any; }, Symbol(foo1b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,29,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,31,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,32,36))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,31,15))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo1b(x: B<Array<number>>); // error
>foo1b : { (x: B<number[]>): any; (x: B<number[]>): any; }, Symbol(foo1b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,29,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,31,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,32,36))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,32,15))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo1b(x: any) { }
>foo1b : { (x: B<number[]>): any; (x: B<number[]>): any; }, Symbol(foo1b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,29,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,31,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,32,36))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,33,15))

function foo1c(x: C<String>);
>foo1c : { (x: C<String>): any; (x: C<String>): any; }, Symbol(foo1c,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,33,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,35,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,36,29))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,35,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo1c(x: C<String>); // error
>foo1c : { (x: C<String>): any; (x: C<String>): any; }, Symbol(foo1c,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,33,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,35,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,36,29))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,36,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo1c(x: any) { }
>foo1c : { (x: C<String>): any; (x: C<String>): any; }, Symbol(foo1c,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,33,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,35,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,36,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,37,15))

function foo2(x: I<Number>);
>foo2 : { (x: I<Number>): any; (x: I<Number>): any; }, Symbol(foo2,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,37,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,39,28),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,40,28))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,39,14))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo2(x: I<Number>); // error
>foo2 : { (x: I<Number>): any; (x: I<Number>): any; }, Symbol(foo2,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,37,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,39,28),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,40,28))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,40,14))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo2(x: any) { }
>foo2 : { (x: I<Number>): any; (x: I<Number>): any; }, Symbol(foo2,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,37,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,39,28),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,40,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,41,14))

function foo3(x: typeof a);
>foo3 : { (x: { foo<T extends string[]>(x: T): string; }): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo3,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,41,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,43,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,44,27))
>x : { foo<T extends string[]>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,43,14))
>a : { foo<T extends string[]>(x: T): string; }, Symbol(a,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,3))

function foo3(x: typeof a); // error
>foo3 : { (x: { foo<T extends string[]>(x: T): string; }): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo3,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,41,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,43,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,44,27))
>x : { foo<T extends string[]>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,44,14))
>a : { foo<T extends string[]>(x: T): string; }, Symbol(a,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,3))

function foo3(x: any) { }
>foo3 : { (x: { foo<T extends string[]>(x: T): string; }): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo3,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,41,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,43,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,44,27))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,45,14))

function foo4(x: typeof b);
>foo4 : { (x: { foo<T extends RegExp>(x: T): string; }): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo4,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,45,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,47,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,48,27))
>x : { foo<T extends RegExp>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,47,14))
>b : { foo<T extends RegExp>(x: T): string; }, Symbol(b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,3))

function foo4(x: typeof b); // error
>foo4 : { (x: { foo<T extends RegExp>(x: T): string; }): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo4,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,45,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,47,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,48,27))
>x : { foo<T extends RegExp>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,48,14))
>b : { foo<T extends RegExp>(x: T): string; }, Symbol(b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,3))

function foo4(x: any) { }
>foo4 : { (x: { foo<T extends RegExp>(x: T): string; }): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo4,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,45,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,47,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,48,27))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,49,14))

function foo5(x: A);
>foo5 : { (x: A): any; (x: B<number[]>): any; }, Symbol(foo5,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,49,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,51,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,52,35))
>x : A, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,51,14))
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

function foo5(x: B<Array<number>>); // ok
>foo5 : { (x: A): any; (x: B<number[]>): any; }, Symbol(foo5,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,49,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,51,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,52,35))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,52,14))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo5(x: any) { }
>foo5 : { (x: A): any; (x: B<number[]>): any; }, Symbol(foo5,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,49,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,51,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,52,35))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,53,14))

function foo5b(x: A);
>foo5b : { (x: A): any; (x: C<String>): any; }, Symbol(foo5b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,53,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,55,21),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,56,29))
>x : A, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,55,15))
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

function foo5b(x: C<String>); // ok
>foo5b : { (x: A): any; (x: C<String>): any; }, Symbol(foo5b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,53,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,55,21),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,56,29))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,56,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo5b(x: any) { }
>foo5b : { (x: A): any; (x: C<String>): any; }, Symbol(foo5b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,53,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,55,21),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,56,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,57,15))

function foo6(x: A);
>foo6 : { (x: A): any; (x: I<Number>): any; }, Symbol(foo6,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,57,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,59,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,60,28))
>x : A, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,59,14))
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

function foo6(x: I<Number>); // ok
>foo6 : { (x: A): any; (x: I<Number>): any; }, Symbol(foo6,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,57,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,59,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,60,28))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,60,14))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo6(x: any) { }
>foo6 : { (x: A): any; (x: I<Number>): any; }, Symbol(foo6,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,57,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,59,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,60,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,61,14))

function foo7(x: A);
>foo7 : { (x: A): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo7,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,61,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,63,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,64,27))
>x : A, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,63,14))
>A : A, Symbol(A,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,0,0))

function foo7(x: typeof a); // ok
>foo7 : { (x: A): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo7,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,61,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,63,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,64,27))
>x : { foo<T extends string[]>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,64,14))
>a : { foo<T extends string[]>(x: T): string; }, Symbol(a,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,3))

function foo7(x: any) { }
>foo7 : { (x: A): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo7,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,61,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,63,20),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,64,27))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,65,14))

function foo8(x: B<Array<number>>);
>foo8 : { (x: B<number[]>): any; (x: I<Number>): any; }, Symbol(foo8,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,65,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,67,35),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,68,28))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,67,14))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo8(x: I<Number>); // ok
>foo8 : { (x: B<number[]>): any; (x: I<Number>): any; }, Symbol(foo8,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,65,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,67,35),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,68,28))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,68,14))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo8(x: any) { }
>foo8 : { (x: B<number[]>): any; (x: I<Number>): any; }, Symbol(foo8,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,65,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,67,35),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,68,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,69,14))

function foo9(x: B<Array<number>>);
>foo9 : { (x: B<number[]>): any; (x: C<String>): any; }, Symbol(foo9,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,69,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,71,35),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,72,28))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,71,14))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo9(x: C<String>); // ok
>foo9 : { (x: B<number[]>): any; (x: C<String>): any; }, Symbol(foo9,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,69,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,71,35),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,72,28))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,72,14))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo9(x: any) { }
>foo9 : { (x: B<number[]>): any; (x: C<String>): any; }, Symbol(foo9,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,69,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,71,35),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,72,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,73,14))

function foo10(x: B<Array<number>>);
>foo10 : { (x: B<number[]>): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo10,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,73,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,75,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,76,28))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,75,15))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo10(x: typeof a); // ok
>foo10 : { (x: B<number[]>): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo10,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,73,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,75,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,76,28))
>x : { foo<T extends string[]>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,76,15))
>a : { foo<T extends string[]>(x: T): string; }, Symbol(a,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,3))

function foo10(x: any) { }
>foo10 : { (x: B<number[]>): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo10,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,73,25),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,75,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,76,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,77,15))

function foo11(x: B<Array<number>>);
>foo11 : { (x: B<number[]>): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo11,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,77,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,79,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,80,28))
>x : B<number[]>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,79,15))
>B : B<T>, Symbol(B,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,6,1))
>Array : T[], Symbol(Array,Decl(lib.d.ts,1000,23),Decl(lib.d.ts,1171,11))

function foo11(x: typeof b); // ok
>foo11 : { (x: B<number[]>): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo11,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,77,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,79,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,80,28))
>x : { foo<T extends RegExp>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,80,15))
>b : { foo<T extends RegExp>(x: T): string; }, Symbol(b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,3))

function foo11(x: any) { }
>foo11 : { (x: B<number[]>): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo11,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,77,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,79,36),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,80,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,81,15))

function foo12(x: I<Number>);
>foo12 : { (x: I<Number>): any; (x: C<String>): any; }, Symbol(foo12,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,81,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,83,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,84,29))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,83,15))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo12(x: C<String>); // ok
>foo12 : { (x: I<Number>): any; (x: C<String>): any; }, Symbol(foo12,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,81,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,83,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,84,29))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,84,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo12(x: any) { }
>foo12 : { (x: I<Number>): any; (x: C<String>): any; }, Symbol(foo12,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,81,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,83,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,84,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,85,15))

function foo12b(x: I2);
>foo12b : { (x: I2): any; (x: C<String>): any; }, Symbol(foo12b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,85,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,87,23),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,88,30))
>x : I2, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,87,16))
>I2 : I2, Symbol(I2,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,18,1))

function foo12b(x: C<String>); // ok
>foo12b : { (x: I2): any; (x: C<String>): any; }, Symbol(foo12b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,85,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,87,23),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,88,30))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,88,16))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo12b(x: any) { }
>foo12b : { (x: I2): any; (x: C<String>): any; }, Symbol(foo12b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,85,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,87,23),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,88,30))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,89,16))

function foo13(x: I<Number>);
>foo13 : { (x: I<Number>): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo13,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,89,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,91,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,92,28))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,91,15))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo13(x: typeof a); // ok
>foo13 : { (x: I<Number>): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo13,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,89,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,91,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,92,28))
>x : { foo<T extends string[]>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,92,15))
>a : { foo<T extends string[]>(x: T): string; }, Symbol(a,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,24,3))

function foo13(x: any) { }
>foo13 : { (x: I<Number>): any; (x: { foo<T extends string[]>(x: T): string; }): any; }, Symbol(foo13,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,89,27),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,91,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,92,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,93,15))

function foo14(x: I<Number>);
>foo14 : { (x: I<Number>): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo14,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,93,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,95,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,96,28))
>x : I<Number>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,95,15))
>I : I<T>, Symbol(I,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,14,1))
>Number : Number, Symbol(Number,Decl(lib.d.ts,456,40),Decl(lib.d.ts,518,11))

function foo14(x: typeof b); // ok
>foo14 : { (x: I<Number>): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo14,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,93,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,95,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,96,28))
>x : { foo<T extends RegExp>(x: T): string; }, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,96,15))
>b : { foo<T extends RegExp>(x: T): string; }, Symbol(b,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,25,3))

function foo14(x: any) { }
>foo14 : { (x: I<Number>): any; (x: { foo<T extends RegExp>(x: T): string; }): any; }, Symbol(foo14,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,93,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,95,29),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,96,28))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,97,15))

function foo15(x: I2);
>foo15 : { (x: I2): any; (x: C<String>): any; }, Symbol(foo15,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,97,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,99,22),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,100,29))
>x : I2, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,99,15))
>I2 : I2, Symbol(I2,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,18,1))

function foo15(x: C<String>); // ok
>foo15 : { (x: I2): any; (x: C<String>): any; }, Symbol(foo15,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,97,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,99,22),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,100,29))
>x : C<String>, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,100,15))
>C : C<T>, Symbol(C,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,10,1))
>String : String, Symbol(String,Decl(lib.d.ts,275,1),Decl(lib.d.ts,443,11))

function foo15(x: any) { }
>foo15 : { (x: I2): any; (x: C<String>): any; }, Symbol(foo15,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,97,26),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,99,22),Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,100,29))
>x : any, Symbol(x,Decl(objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts,101,15))

