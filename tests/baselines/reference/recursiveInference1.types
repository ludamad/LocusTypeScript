=== tests/cases/compiler/recursiveInference1.ts ===
function fib(x:number) { return x <= 1 ? x : fib(x - 1) + fib(x - 2); }
>fib : (x: number) => any, Symbol(fib, Decl(recursiveInference1.ts, 0, 0))
>x : number, Symbol(x, Decl(recursiveInference1.ts, 0, 13))
>x <= 1 ? x : fib(x - 1) + fib(x - 2) : any
>x <= 1 : boolean
>x : number, Symbol(x, Decl(recursiveInference1.ts, 0, 13))
>1 : number
>x : number, Symbol(x, Decl(recursiveInference1.ts, 0, 13))
>fib(x - 1) + fib(x - 2) : any
>fib(x - 1) : any
>fib : (x: number) => any, Symbol(fib, Decl(recursiveInference1.ts, 0, 0))
>x - 1 : number
>x : number, Symbol(x, Decl(recursiveInference1.ts, 0, 13))
>1 : number
>fib(x - 2) : any
>fib : (x: number) => any, Symbol(fib, Decl(recursiveInference1.ts, 0, 0))
>x - 2 : number
>x : number, Symbol(x, Decl(recursiveInference1.ts, 0, 13))
>2 : number

var result = fib(5);
>result : any, Symbol(result, Decl(recursiveInference1.ts, 1, 3))
>fib(5) : any
>fib : (x: number) => any, Symbol(fib, Decl(recursiveInference1.ts, 0, 0))
>5 : number

