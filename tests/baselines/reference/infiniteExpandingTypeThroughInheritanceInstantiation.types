=== tests/cases/compiler/infiniteExpandingTypeThroughInheritanceInstantiation.ts ===
interface A<T>
>A : A<T>, Symbol(A,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,0,0))
>T : T, Symbol(T,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,0,12))
{
   x: A<B<T>>
>x : A<B<T>>, Symbol(x,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,1,1))
>A : A<T>, Symbol(A,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,0,0))
>B : B<T>, Symbol(B,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,3,1))
>T : T, Symbol(T,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,0,12))
}

interface B<T> extends A<T> // error
>B : B<T>, Symbol(B,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,3,1))
>T : T, Symbol(T,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,5,12))
>A : A<T>, Symbol(A,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,0,0))
>T : T, Symbol(T,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,5,12))
{
   x: B<A<T>>
>x : B<A<T>>, Symbol(x,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,6,1))
>B : B<T>, Symbol(B,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,3,1))
>A : A<T>, Symbol(A,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,0,0))
>T : T, Symbol(T,Decl(infiniteExpandingTypeThroughInheritanceInstantiation.ts,5,12))
}

