=== tests/cases/compiler/letDeclarations-access.ts ===

let x = 0
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

// No errors

x = 1;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x += 2;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x -= 3;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x *= 4;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x /= 5;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x %= 6;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x <<= 7;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x >>= 8;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x >>>= 9;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x &= 10;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x |= 11;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x ^= 12;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x++;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x--;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

++x;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

--x;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

var a = x + 1;
>a : Symbol(a, Decl(letDeclarations-access.ts, 23, 3))
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

function f(v: number) { }
>f : Symbol(f, Decl(letDeclarations-access.ts, 23, 14))
>v : Symbol(v, Decl(letDeclarations-access.ts, 25, 11))

f(x);
>f : Symbol(f, Decl(letDeclarations-access.ts, 23, 14))
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

if (x) { }
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

(x);
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

-x;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

+x;
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))

x.toString();
>x.toString : Symbol(Number.toString, Decl(lib.d.ts, 458, 18))
>x : Symbol(x, Decl(letDeclarations-access.ts, 1, 3))
>toString : Symbol(Number.toString, Decl(lib.d.ts, 458, 18))

