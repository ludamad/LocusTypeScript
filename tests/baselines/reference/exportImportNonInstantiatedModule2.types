=== tests/cases/compiler/consumer.ts ===
import e = require('./exporter');
>e : typeof e, Symbol(e, Decl(consumer.ts, 0, 0))

export function w(): e.w { // Should be OK
>w : () => e.w, Symbol(w, Decl(consumer.ts, 0, 33))
>e : any, Symbol(e, Decl(consumer.ts, 0, 0))
>w : e.w, Symbol(e.w, Decl(exporter.ts, 0, 0))

    return {name: 'value' };
>{name: 'value' } : { name: string; }
>name : string, Symbol(name, Decl(consumer.ts, 3, 12))
>'value' : string
}
=== tests/cases/compiler/w1.ts ===

export = Widget1
>Widget1 : Widget1, Symbol(Widget1, Decl(w1.ts, 1, 16))

interface Widget1 { name: string; }
>Widget1 : Widget1, Symbol(Widget1, Decl(w1.ts, 1, 16))
>name : string, Symbol(name, Decl(w1.ts, 2, 19))

=== tests/cases/compiler/exporter.ts ===
export import w = require('./w1');
>w : any, Symbol(w, Decl(exporter.ts, 0, 0))

