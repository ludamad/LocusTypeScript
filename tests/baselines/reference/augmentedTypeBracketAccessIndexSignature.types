=== tests/cases/conformance/types/members/augmentedTypeBracketAccessIndexSignature.ts ===
interface Foo { a }
>Foo : Foo, Symbol(Foo,Decl(augmentedTypeBracketAccessIndexSignature.ts,0,0))
>a : any, Symbol(a,Decl(augmentedTypeBracketAccessIndexSignature.ts,0,15))

interface Bar { b }
>Bar : Bar, Symbol(Bar,Decl(augmentedTypeBracketAccessIndexSignature.ts,0,19))
>b : any, Symbol(b,Decl(augmentedTypeBracketAccessIndexSignature.ts,1,15))

interface Object {
>Object : Object, Symbol(Object,Decl(lib.d.ts,92,1),Decl(lib.d.ts,223,11),Decl(augmentedTypeBracketAccessIndexSignature.ts,1,19))

    [n: number]: Foo;
>n : number, Symbol(n,Decl(augmentedTypeBracketAccessIndexSignature.ts,4,5))
>Foo : Foo, Symbol(Foo,Decl(augmentedTypeBracketAccessIndexSignature.ts,0,0))
}

interface Function {
>Function : Function, Symbol(Function,Decl(lib.d.ts,223,38),Decl(lib.d.ts,269,11),Decl(augmentedTypeBracketAccessIndexSignature.ts,5,1))

    [n: number]: Bar;
>n : number, Symbol(n,Decl(augmentedTypeBracketAccessIndexSignature.ts,8,5))
>Bar : Bar, Symbol(Bar,Decl(augmentedTypeBracketAccessIndexSignature.ts,0,19))
}

var a = {}[0]; // Should be Foo
>a : any, Symbol(a,Decl(augmentedTypeBracketAccessIndexSignature.ts,11,3))
>{}[0] : any
>{} : {}
>0 : number

var b = (() => { })[0]; // Should be Bar
>b : any, Symbol(b,Decl(augmentedTypeBracketAccessIndexSignature.ts,12,3))
>(() => { })[0] : any
>(() => { }) : () => void
>() => { } : () => void
>0 : number

