=== tests/cases/conformance/es6/Symbols/symbolProperty21.ts ===
interface I<T, U> {
>I : Symbol(I, Decl(symbolProperty21.ts, 0, 0))
>T : Symbol(T, Decl(symbolProperty21.ts, 0, 12))
>U : Symbol(U, Decl(symbolProperty21.ts, 0, 14))

    [Symbol.unscopables]: T;
>Symbol.unscopables : Symbol(SymbolConstructor.unscopables, Decl(lib.d.ts, 1254, 24))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1186, 52), Decl(lib.d.ts, 1262, 11))
>unscopables : Symbol(SymbolConstructor.unscopables, Decl(lib.d.ts, 1254, 24))
>T : Symbol(T, Decl(symbolProperty21.ts, 0, 12))

    [Symbol.isConcatSpreadable]: U;
>Symbol.isConcatSpreadable : Symbol(SymbolConstructor.isConcatSpreadable, Decl(lib.d.ts, 1230, 24))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1186, 52), Decl(lib.d.ts, 1262, 11))
>isConcatSpreadable : Symbol(SymbolConstructor.isConcatSpreadable, Decl(lib.d.ts, 1230, 24))
>U : Symbol(U, Decl(symbolProperty21.ts, 0, 14))
}

declare function foo<T, U>(p: I<T, U>): { t: T; u: U };
>foo : Symbol(foo, Decl(symbolProperty21.ts, 3, 1))
>T : Symbol(T, Decl(symbolProperty21.ts, 5, 21))
>U : Symbol(U, Decl(symbolProperty21.ts, 5, 23))
>p : Symbol(p, Decl(symbolProperty21.ts, 5, 27))
>I : Symbol(I, Decl(symbolProperty21.ts, 0, 0))
>T : Symbol(T, Decl(symbolProperty21.ts, 5, 21))
>U : Symbol(U, Decl(symbolProperty21.ts, 5, 23))
>t : Symbol(t, Decl(symbolProperty21.ts, 5, 41))
>T : Symbol(T, Decl(symbolProperty21.ts, 5, 21))
>u : Symbol(u, Decl(symbolProperty21.ts, 5, 47))
>U : Symbol(U, Decl(symbolProperty21.ts, 5, 23))

foo({
>foo : Symbol(foo, Decl(symbolProperty21.ts, 3, 1))

    [Symbol.isConcatSpreadable]: "",
>Symbol.isConcatSpreadable : Symbol(SymbolConstructor.isConcatSpreadable, Decl(lib.d.ts, 1230, 24))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1186, 52), Decl(lib.d.ts, 1262, 11))
>isConcatSpreadable : Symbol(SymbolConstructor.isConcatSpreadable, Decl(lib.d.ts, 1230, 24))

    [Symbol.toPrimitive]: 0,
>Symbol.toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.d.ts, 1242, 21))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1186, 52), Decl(lib.d.ts, 1262, 11))
>toPrimitive : Symbol(SymbolConstructor.toPrimitive, Decl(lib.d.ts, 1242, 21))

    [Symbol.unscopables]: true
>Symbol.unscopables : Symbol(SymbolConstructor.unscopables, Decl(lib.d.ts, 1254, 24))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1186, 52), Decl(lib.d.ts, 1262, 11))
>unscopables : Symbol(SymbolConstructor.unscopables, Decl(lib.d.ts, 1254, 24))

});
