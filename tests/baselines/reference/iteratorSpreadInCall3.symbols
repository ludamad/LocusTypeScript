=== tests/cases/conformance/es6/spread/iteratorSpreadInCall3.ts ===
foo(...new SymbolIterator);
>foo : Symbol(foo, Decl(iteratorSpreadInCall3.ts, 0, 27))
>SymbolIterator : Symbol(SymbolIterator, Decl(iteratorSpreadInCall3.ts, 2, 32))

function foo(...s: symbol[]) { }
>foo : Symbol(foo, Decl(iteratorSpreadInCall3.ts, 0, 27))
>s : Symbol(s, Decl(iteratorSpreadInCall3.ts, 2, 13))

class SymbolIterator {
>SymbolIterator : Symbol(SymbolIterator, Decl(iteratorSpreadInCall3.ts, 2, 32))

    next() {
>next : Symbol(next, Decl(iteratorSpreadInCall3.ts, 3, 22))

        return {
            value: Symbol(),
>value : Symbol(value, Decl(iteratorSpreadInCall3.ts, 5, 16))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1197, 53), Decl(lib.d.ts, 1303, 11))

            done: false
>done : Symbol(done, Decl(iteratorSpreadInCall3.ts, 6, 28))

        };
    }

    [Symbol.iterator]() {
>Symbol.iterator : Symbol(SymbolConstructor.iterator, Decl(lib.d.ts, 1247, 31))
>Symbol : Symbol(Symbol, Decl(lib.d.ts, 1197, 53), Decl(lib.d.ts, 1303, 11))
>iterator : Symbol(SymbolConstructor.iterator, Decl(lib.d.ts, 1247, 31))

        return this;
>this : Symbol(SymbolIterator, Decl(iteratorSpreadInCall3.ts, 2, 32))
    }
}
