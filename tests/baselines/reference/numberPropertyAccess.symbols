=== tests/cases/conformance/types/primitives/number/numberPropertyAccess.ts ===
var x = 1;
>x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))

var a = x.toExponential();
>a : Symbol(a, Decl(numberPropertyAccess.ts, 1, 3))
>x.toExponential : Symbol(Number.toExponential, Decl(lib.d.ts, 469, 45))
>x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
>toExponential : Symbol(Number.toExponential, Decl(lib.d.ts, 469, 45))

var b = x.hasOwnProperty('toFixed');
>b : Symbol(b, Decl(numberPropertyAccess.ts, 2, 3))
>x.hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.d.ts, 105, 22))
>x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
>hasOwnProperty : Symbol(Object.hasOwnProperty, Decl(lib.d.ts, 105, 22))

var c = x['toExponential']();
>c : Symbol(c, Decl(numberPropertyAccess.ts, 4, 3))
>x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
>'toExponential' : Symbol(Number.toExponential, Decl(lib.d.ts, 469, 45))

var d = x['hasOwnProperty']('toFixed');
>d : Symbol(d, Decl(numberPropertyAccess.ts, 5, 3))
>x : Symbol(x, Decl(numberPropertyAccess.ts, 0, 3))
>'hasOwnProperty' : Symbol(Object.hasOwnProperty, Decl(lib.d.ts, 105, 22))

