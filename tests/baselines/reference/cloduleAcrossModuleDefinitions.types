=== tests/cases/compiler/cloduleAcrossModuleDefinitions.ts ===
module A {
>A : typeof A, Symbol(A, Decl(cloduleAcrossModuleDefinitions.ts, 0, 0), Decl(cloduleAcrossModuleDefinitions.ts, 5, 1))

    export class B {
>B : B, Symbol(B, Decl(cloduleAcrossModuleDefinitions.ts, 0, 10), Decl(cloduleAcrossModuleDefinitions.ts, 7, 10))

        foo() { }
>foo : () => void, Symbol(foo, Decl(cloduleAcrossModuleDefinitions.ts, 1, 20))

        static bar() { }
>bar : () => void, Symbol(B.bar, Decl(cloduleAcrossModuleDefinitions.ts, 2, 17))
    }
}

module A {
>A : typeof A, Symbol(A, Decl(cloduleAcrossModuleDefinitions.ts, 0, 0), Decl(cloduleAcrossModuleDefinitions.ts, 5, 1))

    export module B {
>B : typeof B, Symbol(B, Decl(cloduleAcrossModuleDefinitions.ts, 0, 10), Decl(cloduleAcrossModuleDefinitions.ts, 7, 10))

        export var x = 1;
>x : number, Symbol(x, Decl(cloduleAcrossModuleDefinitions.ts, 9, 18))
>1 : number
    }
}

var b: A.B; // ok
>b : A.B, Symbol(b, Decl(cloduleAcrossModuleDefinitions.ts, 13, 3))
>A : any, Symbol(A, Decl(cloduleAcrossModuleDefinitions.ts, 0, 0), Decl(cloduleAcrossModuleDefinitions.ts, 5, 1))
>B : A.B, Symbol(A.B, Decl(cloduleAcrossModuleDefinitions.ts, 0, 10), Decl(cloduleAcrossModuleDefinitions.ts, 7, 10))

