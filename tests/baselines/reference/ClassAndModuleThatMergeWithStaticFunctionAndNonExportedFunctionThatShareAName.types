=== tests/cases/conformance/internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.ts ===
class Point {
>Point : Point

    constructor(public x: number, public y: number) { }
>x : number
>y : number

    static Origin(): Point { return { x: 0, y: 0 }; }
>Origin : () => Point
>Point : Point
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number
>0 : number
>y : number
>0 : number
}

module Point {
>Point : typeof Point

    function Origin() { return ""; }// not an error, since not exported
>Origin : () => string
>"" : string
}


module A {
>A : typeof A

    export class Point {
>Point : Point

        constructor(public x: number, public y: number) { }
>x : number
>y : number

        static Origin(): Point { return { x: 0, y: 0 }; }
>Origin : () => Point
>Point : Point
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number
>0 : number
>y : number
>0 : number
    }

    export module Point {
>Point : typeof Point

        function Origin() { return ""; }// not an error since not exported
>Origin : () => string
>"" : string
    }
}
