=== tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithRHSIsSubtypeOfFunction.ts ===
interface I extends Function { }
>I : I, Symbol(I,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,0,0))
>Function : Function, Symbol(Function,Decl(lib.d.ts,223,38),Decl(lib.d.ts,269,11))

var x: any;
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))

var f1: Function;
>f1 : Function, Symbol(f1,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,3,3))
>Function : Function, Symbol(Function,Decl(lib.d.ts,223,38),Decl(lib.d.ts,269,11))

var f2: I;
>f2 : I, Symbol(f2,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,4,3))
>I : I, Symbol(I,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,0,0))

var f3: { (): void };
>f3 : () => void, Symbol(f3,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,5,3))

var f4: { new (): number };
>f4 : new () => number, Symbol(f4,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,6,3))

var r1 = x instanceof f1;
>r1 : boolean, Symbol(r1,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,8,3))
>x instanceof f1 : boolean
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))
>f1 : Function, Symbol(f1,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,3,3))

var r2 = x instanceof f2;
>r2 : boolean, Symbol(r2,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,9,3))
>x instanceof f2 : boolean
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))
>f2 : I, Symbol(f2,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,4,3))

var r3 = x instanceof f3;
>r3 : boolean, Symbol(r3,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,10,3))
>x instanceof f3 : boolean
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))
>f3 : () => void, Symbol(f3,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,5,3))

var r4 = x instanceof f4;
>r4 : boolean, Symbol(r4,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,11,3))
>x instanceof f4 : boolean
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))
>f4 : new () => number, Symbol(f4,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,6,3))

var r5 = x instanceof null;
>r5 : boolean, Symbol(r5,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,12,3))
>x instanceof null : boolean
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))
>null : null

var r6 = x instanceof undefined;
>r6 : boolean, Symbol(r6,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,13,3))
>x instanceof undefined : boolean
>x : any, Symbol(x,Decl(instanceofOperatorWithRHSIsSubtypeOfFunction.ts,2,3))
>undefined : undefined, Symbol(undefined)

