tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(6,28): error TS2304: Cannot find name 'bar'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(10,1): error TS2511: Cannot create an instance of the abstract class 'B'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(17,5): error TS2511: Cannot create an instance of the abstract class 'B'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(21,1): error TS2511: Cannot create an instance of the abstract class 'B'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(26,7): error TS2515: Non-abstract class 'C' does not implement inherited abstract member 'B.bar'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(45,14): error TS2516: All declarations of an abstract method must be consecutive.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(45,20): error TS1144: '{' or ';' expected.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(45,20): error TS2300: Duplicate identifier 'boolean'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(46,5): error TS2512: Overload signatures must all be `abstract` or not `abstract.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(46,21): error TS1144: '{' or ';' expected.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(46,21): error TS2300: Duplicate identifier 'boolean'.
tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts(49,7): error TS2514: Classes containing abstract functions must be marked abstract.


==== tests/cases/conformance/classes/classDeclarations/classAbstractKeyword/classAbstractInstantiations2.ts (12 errors) ====
    class A {
        // ...
    }
    
    abstract class B {
        foo(): number { return bar(); }
                               ~~~
!!! error TS2304: Cannot find name 'bar'.
        abstract bar() : number;
    }
    
    new B; // error
    ~~~~~
!!! error TS2511: Cannot create an instance of the abstract class 'B'.
    
    var BB: typeof B = B;
    var AA: typeof A = BB; // error, AA is not of abstract type.
    new AA;
    
    function constructB(Factory : typeof B) {
        new Factory; // error -- Factory is of type typeof C
        ~~~~~~~~~~~
!!! error TS2511: Cannot create an instance of the abstract class 'B'.
    }
    
    var BB = B;
    new BB; // error -- BB is of type typeof C
    ~~~~~~
!!! error TS2511: Cannot create an instance of the abstract class 'B'.
    
    var x : any = C;
    new x; // okay -- undefined behavior at runtime
    
    class C extends B { } // error -- not declared abstract
          ~
!!! error TS2515: Non-abstract class 'C' does not implement inherited abstract member 'B.bar'.
    
    abstract class D extends B { } // okay
    
    class E extends B { // okay -- implements abstract method
        bar() { return 1; }
    }
    
    abstract class F extends B {
        abstract foo() : number;
        bar() { return 2; }
    }
    
    abstract class G {
        abstract qux(x : number) : string;
        abstract qux() : number;
        y : number;
        abstract quz(x : number, y : string) : boolean; // error -- declarations must be adjacent
    
        abstract nom() boolean;
                 ~~~
!!! error TS2516: All declarations of an abstract method must be consecutive.
                       ~~~~~~~
!!! error TS1144: '{' or ';' expected.
                       ~~~~~~~
!!! error TS2300: Duplicate identifier 'boolean'.
        nom(x : number) boolean; // error -- use of modifier abstract must match on all overloads.
        ~~~
!!! error TS2512: Overload signatures must all be `abstract` or not `abstract.
                        ~~~~~~~
!!! error TS1144: '{' or ';' expected.
                        ~~~~~~~
!!! error TS2300: Duplicate identifier 'boolean'.
    }
    
    class H { // error -- not declared abstract
          ~
!!! error TS2514: Classes containing abstract functions must be marked abstract.
        abstract baz() : number;
    }