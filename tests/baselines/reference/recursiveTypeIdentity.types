=== tests/cases/compiler/recursiveTypeIdentity.ts ===
interface A {
>A : A, Symbol(A, Decl(recursiveTypeIdentity.ts, 0, 0))

    <T extends A>(x: T): void;
>T : T, Symbol(T, Decl(recursiveTypeIdentity.ts, 1, 5))
>A : A, Symbol(A, Decl(recursiveTypeIdentity.ts, 0, 0))
>x : T, Symbol(x, Decl(recursiveTypeIdentity.ts, 1, 18))
>T : T, Symbol(T, Decl(recursiveTypeIdentity.ts, 1, 5))
}

interface B {
>B : B, Symbol(B, Decl(recursiveTypeIdentity.ts, 2, 1))

    <T extends B>(x: T): void;
>T : T, Symbol(T, Decl(recursiveTypeIdentity.ts, 5, 5))
>B : B, Symbol(B, Decl(recursiveTypeIdentity.ts, 2, 1))
>x : T, Symbol(x, Decl(recursiveTypeIdentity.ts, 5, 18))
>T : T, Symbol(T, Decl(recursiveTypeIdentity.ts, 5, 5))
}

interface C {
>C : C, Symbol(C, Decl(recursiveTypeIdentity.ts, 6, 1))

    (x: A): void;
>x : A, Symbol(x, Decl(recursiveTypeIdentity.ts, 9, 5))
>A : A, Symbol(A, Decl(recursiveTypeIdentity.ts, 0, 0))

    (x: B): void;
>x : B, Symbol(x, Decl(recursiveTypeIdentity.ts, 10, 5))
>B : B, Symbol(B, Decl(recursiveTypeIdentity.ts, 2, 1))
}
