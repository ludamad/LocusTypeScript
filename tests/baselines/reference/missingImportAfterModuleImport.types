=== tests/cases/compiler/missingImportAfterModuleImport_1.ts ===
///<reference path='missingImportAfterModuleImport_0.ts'/>
import SubModule = require('SubModule');
>SubModule : typeof SubModule, Symbol(SubModule,Decl(missingImportAfterModuleImport_1.ts,0,0))

class MainModule {
>MainModule : MainModule, Symbol(MainModule,Decl(missingImportAfterModuleImport_1.ts,1,40))

    // public static SubModule: SubModule;
    public SubModule: SubModule;
>SubModule : SubModule, Symbol(SubModule,Decl(missingImportAfterModuleImport_1.ts,2,18))
>SubModule : SubModule, Symbol(SubModule,Decl(missingImportAfterModuleImport_1.ts,0,0))

    constructor() { }
}
export = MainModule;
>MainModule : MainModule, Symbol(MainModule,Decl(missingImportAfterModuleImport_1.ts,1,40))


=== tests/cases/compiler/missingImportAfterModuleImport_0.ts ===

declare module "SubModule" {
    class SubModule {
>SubModule : SubModule, Symbol(SubModule,Decl(missingImportAfterModuleImport_0.ts,1,28))

        public static StaticVar: number;
>StaticVar : number, Symbol(SubModule.StaticVar,Decl(missingImportAfterModuleImport_0.ts,2,21))

        public InstanceVar: number;
>InstanceVar : number, Symbol(InstanceVar,Decl(missingImportAfterModuleImport_0.ts,3,40))

        constructor();
    }
    export = SubModule;
>SubModule : SubModule, Symbol(SubModule,Decl(missingImportAfterModuleImport_0.ts,1,28))
}

