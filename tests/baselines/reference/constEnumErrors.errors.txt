tests/cases/compiler/constEnumErrors.ts(1,12): error TS2300: Duplicate identifier 'E'.
tests/cases/compiler/constEnumErrors.ts(5,8): error TS2300: Duplicate identifier 'E'.
tests/cases/compiler/constEnumErrors.ts(12,9): error TS4083: In 'const' enum declarations member initializer must be constant expression.
tests/cases/compiler/constEnumErrors.ts(14,9): error TS4083: In 'const' enum declarations member initializer must be constant expression.
tests/cases/compiler/constEnumErrors.ts(15,10): error TS4083: In 'const' enum declarations member initializer must be constant expression.
tests/cases/compiler/constEnumErrors.ts(22,13): error TS4085: Index expression arguments in 'const' enums must be of type 'string'.
tests/cases/compiler/constEnumErrors.ts(24,13): error TS4085: Index expression arguments in 'const' enums must be of type 'string'.
tests/cases/compiler/constEnumErrors.ts(26,9): error TS4084: 'const' enums can only be used in property access expressions.
tests/cases/compiler/constEnumErrors.ts(27,10): error TS4084: 'const' enums can only be used in property access expressions.
tests/cases/compiler/constEnumErrors.ts(32,5): error TS4084: 'const' enums can only be used in property access expressions.


==== tests/cases/compiler/constEnumErrors.ts (10 errors) ====
    const enum E {
               ~
!!! error TS2300: Duplicate identifier 'E'.
        A
    }
    
    module E {
           ~
!!! error TS2300: Duplicate identifier 'E'.
        var x = 1;
    }
    
    const enum E1 {
        // illegal case
        // forward reference to the element of the same enum
        X = Y, 
            ~
!!! error TS4083: In 'const' enum declarations member initializer must be constant expression.
        // forward reference to the element of the same enum
        Y = E1.Z,
            ~~~~
!!! error TS4083: In 'const' enum declarations member initializer must be constant expression.
        Y1 = E1["Z"]
             ~~~~~~~
!!! error TS4083: In 'const' enum declarations member initializer must be constant expression.
    }
    
    const enum E2 {
        A
    }
    
    var y0 = E2[1]
                ~
!!! error TS4085: Index expression arguments in 'const' enums must be of type 'string'.
    var name = "A";
    var y1 = E2[name];
                ~~~~
!!! error TS4085: Index expression arguments in 'const' enums must be of type 'string'.
    
    var x = E2;
            ~~
!!! error TS4084: 'const' enums can only be used in property access expressions.
    var y = [E2];
             ~~
!!! error TS4084: 'const' enums can only be used in property access expressions.
    
    function foo(t: any): void {
    }
    
    foo(E2);
        ~~
!!! error TS4084: 'const' enums can only be used in property access expressions.