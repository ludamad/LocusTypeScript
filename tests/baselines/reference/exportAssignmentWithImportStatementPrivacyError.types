=== tests/cases/compiler/exportAssignmentWithImportStatementPrivacyError.ts ===
module m2 {
>m2 : any, Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))

    export interface connectModule {
>connectModule : connectModule, Symbol(connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 11))

        (res, req, next): void;
>res : any, Symbol(res, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 2, 9))
>req : any, Symbol(req, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 2, 13))
>next : any, Symbol(next, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 2, 18))
    }
    export interface connectExport {
>connectExport : connectExport, Symbol(connectExport, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 3, 5))

        use: (mod: connectModule) => connectExport;
>use : (mod: connectModule) => connectExport, Symbol(use, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 4, 36))
>mod : connectModule, Symbol(mod, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 5, 14))
>connectModule : connectModule, Symbol(connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 11))
>connectExport : connectExport, Symbol(connectExport, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 3, 5))

        listen: (port: number) => void;
>listen : (port: number) => void, Symbol(listen, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 5, 51))
>port : number, Symbol(port, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 6, 17))
    }

}

module M {
>M : typeof M, Symbol(M, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 9, 1))

    export var server: {
>server : { (): m2.connectExport; test1: m2.connectModule; test2(): m2.connectModule; }, Symbol(server, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 12, 14))

        (): m2.connectExport;
>m2 : any, Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))
>connectExport : m2.connectExport, Symbol(m2.connectExport, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 3, 5))

        test1: m2.connectModule;
>test1 : m2.connectModule, Symbol(test1, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 13, 29))
>m2 : any, Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))
>connectModule : m2.connectModule, Symbol(m2.connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 11))

        test2(): m2.connectModule;
>test2 : () => m2.connectModule, Symbol(test2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 14, 32))
>m2 : any, Symbol(m2, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 0))
>connectModule : m2.connectModule, Symbol(m2.connectModule, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 0, 11))

    };
}
import M22 = M;
>M22 : typeof M, Symbol(M22, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 17, 1))
>M : typeof M, Symbol(M, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 9, 1))

export = M;
>M : typeof M, Symbol(M, Decl(exportAssignmentWithImportStatementPrivacyError.ts, 9, 1))

