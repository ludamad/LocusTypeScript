=== tests/cases/compiler/namedFunctionExpressionCall.ts ===
var recurser = function foo() {
>recurser : () => void, Symbol(recurser,Decl(namedFunctionExpressionCall.ts,0,3))
>function foo() {    // using the local name    foo();    // using the globally visible name    recurser();} : () => void
>foo : () => void, Symbol(foo,Decl(namedFunctionExpressionCall.ts,0,14))

    // using the local name
    foo();
>foo() : void
>foo : () => void, Symbol(foo,Decl(namedFunctionExpressionCall.ts,0,14))

    // using the globally visible name
    recurser();
>recurser() : void
>recurser : () => void, Symbol(recurser,Decl(namedFunctionExpressionCall.ts,0,3))

};


(function bar() {
>(function bar() {    bar();}) : () => void
>function bar() {    bar();} : () => void
>bar : () => void, Symbol(bar,Decl(namedFunctionExpressionCall.ts,9,1))

    bar();
>bar() : void
>bar : () => void, Symbol(bar,Decl(namedFunctionExpressionCall.ts,9,1))

});
