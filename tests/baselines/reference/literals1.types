=== tests/cases/compiler/literals1.ts ===
var a = 42;
>a : number, Symbol(a, Decl(literals1.ts, 0, 3))
>42 : number

var b = 0xFA34;
>b : number, Symbol(b, Decl(literals1.ts, 1, 3))
>0xFA34 : number

var c = 0.1715;
>c : number, Symbol(c, Decl(literals1.ts, 2, 3))
>0.1715 : number

var d = 3.14E5;
>d : number, Symbol(d, Decl(literals1.ts, 3, 3))
>3.14E5 : number

var e = 8.14e-5;
>e : number, Symbol(e, Decl(literals1.ts, 4, 3))
>8.14e-5 : number

var f = true;
>f : boolean, Symbol(f, Decl(literals1.ts, 6, 3))
>true : boolean

var g = false;
>g : boolean, Symbol(g, Decl(literals1.ts, 7, 3))
>false : boolean

var h = "";
>h : string, Symbol(h, Decl(literals1.ts, 9, 3))
>"" : string

var i = "hi";
>i : string, Symbol(i, Decl(literals1.ts, 10, 3))
>"hi" : string

var j = '';
>j : string, Symbol(j, Decl(literals1.ts, 11, 3))
>'' : string

var k = 'q\tq';
>k : string, Symbol(k, Decl(literals1.ts, 12, 3))
>'q\tq' : string

var m = /q/;
>m : RegExp, Symbol(m, Decl(literals1.ts, 14, 3))
>/q/ : RegExp

var n = /\d+/g;
>n : RegExp, Symbol(n, Decl(literals1.ts, 15, 3))
>/\d+/g : RegExp

var o = /[3-5]+/i;
>o : RegExp, Symbol(o, Decl(literals1.ts, 16, 3))
>/[3-5]+/i : RegExp

