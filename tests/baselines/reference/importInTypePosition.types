=== tests/cases/compiler/importInTypePosition.ts ===
module A {
>A : typeof A, Symbol(A,Decl(importInTypePosition.ts,0,0))

    export class Point {
>Point : Point, Symbol(Point,Decl(importInTypePosition.ts,0,10))

        constructor(public x: number, public y: number) { }
>x : number, Symbol(x,Decl(importInTypePosition.ts,2,20))
>y : number, Symbol(y,Decl(importInTypePosition.ts,2,37))
    }
    export var Origin = new Point(0, 0);
>Origin : Point, Symbol(Origin,Decl(importInTypePosition.ts,4,14))
>new Point(0, 0) : Point
>Point : typeof Point, Symbol(Point,Decl(importInTypePosition.ts,0,10))
>0 : number
>0 : number
}

// no code gen expected
module B {
>B : any, Symbol(B,Decl(importInTypePosition.ts,5,1))

    import a = A; //Error generates 'var <Alias> = <EntityName>;'
>a : typeof a, Symbol(a,Decl(importInTypePosition.ts,8,10))
>A : typeof a, Symbol(a,Decl(importInTypePosition.ts,0,0))
}
// no code gen expected
module C {
>C : typeof C, Symbol(C,Decl(importInTypePosition.ts,11,1))

    import a = A; //Error generates 'var <Alias> = <EntityName>;'
>a : typeof a, Symbol(a,Decl(importInTypePosition.ts,13,10))
>A : typeof a, Symbol(a,Decl(importInTypePosition.ts,0,0))

    var m: typeof a;
>m : typeof a, Symbol(m,Decl(importInTypePosition.ts,16,7))
>a : typeof a, Symbol(a,Decl(importInTypePosition.ts,13,10))

    var p: a.Point;
>p : a.Point, Symbol(p,Decl(importInTypePosition.ts,17,7),Decl(importInTypePosition.ts,18,7))
>a : any, Symbol(a,Decl(importInTypePosition.ts,13,10))
>Point : a.Point, Symbol(a.Point,Decl(importInTypePosition.ts,0,10))

    var p = { x: 0, y: 0 };
>p : a.Point, Symbol(p,Decl(importInTypePosition.ts,17,7),Decl(importInTypePosition.ts,18,7))
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number, Symbol(x,Decl(importInTypePosition.ts,18,13))
>0 : number
>y : number, Symbol(y,Decl(importInTypePosition.ts,18,19))
>0 : number
}

