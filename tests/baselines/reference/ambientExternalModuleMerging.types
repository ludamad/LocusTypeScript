=== tests/cases/conformance/ambient/ambientExternalModuleMerging_use.ts ===
import M = require("M");
>M : typeof M, Symbol(M, Decl(ambientExternalModuleMerging_use.ts, 0, 0))

// Should be strings
var x = M.x;
>x : string, Symbol(x, Decl(ambientExternalModuleMerging_use.ts, 2, 3))
>M.x : string, Symbol(M.x, Decl(ambientExternalModuleMerging_declare.ts, 1, 14))
>M : typeof M, Symbol(M, Decl(ambientExternalModuleMerging_use.ts, 0, 0))
>x : string, Symbol(M.x, Decl(ambientExternalModuleMerging_declare.ts, 1, 14))

var y = M.y;
>y : string, Symbol(y, Decl(ambientExternalModuleMerging_use.ts, 3, 3))
>M.y : string, Symbol(M.y, Decl(ambientExternalModuleMerging_declare.ts, 6, 14))
>M : typeof M, Symbol(M, Decl(ambientExternalModuleMerging_use.ts, 0, 0))
>y : string, Symbol(M.y, Decl(ambientExternalModuleMerging_declare.ts, 6, 14))

=== tests/cases/conformance/ambient/ambientExternalModuleMerging_declare.ts ===
declare module "M" {
    export var x: string;
>x : string, Symbol(x, Decl(ambientExternalModuleMerging_declare.ts, 1, 14))
}

// Merge
declare module "M" {
    export var y: string;
>y : string, Symbol(y, Decl(ambientExternalModuleMerging_declare.ts, 6, 14))
}
