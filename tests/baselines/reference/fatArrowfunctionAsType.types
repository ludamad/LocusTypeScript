=== tests/cases/compiler/fatArrowfunctionAsType.ts ===
declare var b: <T>(x: T) => void ;
>b : <T>(x: T) => void, Symbol(b, Decl(fatArrowfunctionAsType.ts, 0, 11))
>T : T, Symbol(T, Decl(fatArrowfunctionAsType.ts, 0, 16))
>x : T, Symbol(x, Decl(fatArrowfunctionAsType.ts, 0, 19))
>T : T, Symbol(T, Decl(fatArrowfunctionAsType.ts, 0, 16))

var c: <T>(x: T) => void = function <T>(x: T) { return 42; }
>c : <T>(x: T) => void, Symbol(c, Decl(fatArrowfunctionAsType.ts, 2, 3))
>T : T, Symbol(T, Decl(fatArrowfunctionAsType.ts, 2, 8))
>x : T, Symbol(x, Decl(fatArrowfunctionAsType.ts, 2, 11))
>T : T, Symbol(T, Decl(fatArrowfunctionAsType.ts, 2, 8))
>function <T>(x: T) { return 42; } : <T>(x: T) => number
>T : T, Symbol(T, Decl(fatArrowfunctionAsType.ts, 2, 37))
>x : T, Symbol(x, Decl(fatArrowfunctionAsType.ts, 2, 40))
>T : T, Symbol(T, Decl(fatArrowfunctionAsType.ts, 2, 37))
>42 : number

b = c;
>b = c : <T>(x: T) => void
>b : <T>(x: T) => void, Symbol(b, Decl(fatArrowfunctionAsType.ts, 0, 11))
>c : <T>(x: T) => void, Symbol(c, Decl(fatArrowfunctionAsType.ts, 2, 3))

