=== tests/cases/compiler/declFileTypeofFunction.ts ===

function f(n: typeof f): string;
>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(f, Decl(declFileTypeofFunction.ts, 0, 0), Decl(declFileTypeofFunction.ts, 1, 32), Decl(declFileTypeofFunction.ts, 2, 32))
>n : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(n, Decl(declFileTypeofFunction.ts, 1, 11))
>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(f, Decl(declFileTypeofFunction.ts, 0, 0), Decl(declFileTypeofFunction.ts, 1, 32), Decl(declFileTypeofFunction.ts, 2, 32))

function f(n: typeof g): string;
>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(f, Decl(declFileTypeofFunction.ts, 0, 0), Decl(declFileTypeofFunction.ts, 1, 32), Decl(declFileTypeofFunction.ts, 2, 32))
>n : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(n, Decl(declFileTypeofFunction.ts, 2, 11))
>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(g, Decl(declFileTypeofFunction.ts, 3, 34), Decl(declFileTypeofFunction.ts, 4, 32), Decl(declFileTypeofFunction.ts, 5, 32))

function f() { return undefined; }
>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(f, Decl(declFileTypeofFunction.ts, 0, 0), Decl(declFileTypeofFunction.ts, 1, 32), Decl(declFileTypeofFunction.ts, 2, 32))
>undefined : undefined, Symbol(undefined)

function g(n: typeof g): number;
>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(g, Decl(declFileTypeofFunction.ts, 3, 34), Decl(declFileTypeofFunction.ts, 4, 32), Decl(declFileTypeofFunction.ts, 5, 32))
>n : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(n, Decl(declFileTypeofFunction.ts, 4, 11))
>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(g, Decl(declFileTypeofFunction.ts, 3, 34), Decl(declFileTypeofFunction.ts, 4, 32), Decl(declFileTypeofFunction.ts, 5, 32))

function g(n: typeof f): number;
>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(g, Decl(declFileTypeofFunction.ts, 3, 34), Decl(declFileTypeofFunction.ts, 4, 32), Decl(declFileTypeofFunction.ts, 5, 32))
>n : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(n, Decl(declFileTypeofFunction.ts, 5, 11))
>f : { (n: typeof f): string; (n: { (n: typeof g): number; (n: typeof f): number; }): string; }, Symbol(f, Decl(declFileTypeofFunction.ts, 0, 0), Decl(declFileTypeofFunction.ts, 1, 32), Decl(declFileTypeofFunction.ts, 2, 32))

function g() { return undefined; }
>g : { (n: typeof g): number; (n: { (n: typeof f): string; (n: typeof g): string; }): number; }, Symbol(g, Decl(declFileTypeofFunction.ts, 3, 34), Decl(declFileTypeofFunction.ts, 4, 32), Decl(declFileTypeofFunction.ts, 5, 32))
>undefined : undefined, Symbol(undefined)

var b: () => typeof b;
>b : () => any, Symbol(b, Decl(declFileTypeofFunction.ts, 8, 3))
>b : () => any, Symbol(b, Decl(declFileTypeofFunction.ts, 8, 3))

function b1() {
>b1 : () => typeof b1, Symbol(b1, Decl(declFileTypeofFunction.ts, 8, 22))

    return b1;
>b1 : () => typeof b1, Symbol(b1, Decl(declFileTypeofFunction.ts, 8, 22))
}

function foo(): typeof foo {
>foo : () => typeof foo, Symbol(foo, Decl(declFileTypeofFunction.ts, 12, 1))
>foo : () => typeof foo, Symbol(foo, Decl(declFileTypeofFunction.ts, 12, 1))

    return null;
>null : null
}
var foo1: typeof foo;
>foo1 : () => typeof foo, Symbol(foo1, Decl(declFileTypeofFunction.ts, 17, 3))
>foo : () => typeof foo, Symbol(foo, Decl(declFileTypeofFunction.ts, 12, 1))

var foo2 = foo;
>foo2 : () => typeof foo, Symbol(foo2, Decl(declFileTypeofFunction.ts, 18, 3))
>foo : () => typeof foo, Symbol(foo, Decl(declFileTypeofFunction.ts, 12, 1))

var foo3 = function () {
>foo3 : () => any, Symbol(foo3, Decl(declFileTypeofFunction.ts, 20, 3))
>function () {    return foo3;} : () => any

    return foo3;
>foo3 : () => any, Symbol(foo3, Decl(declFileTypeofFunction.ts, 20, 3))
}
var x = () => {
>x : () => any, Symbol(x, Decl(declFileTypeofFunction.ts, 23, 3))
>() => {    return x;} : () => any

    return x;
>x : () => any, Symbol(x, Decl(declFileTypeofFunction.ts, 23, 3))
}

function foo5(x: number) {
>foo5 : (x: number) => (x: number) => number, Symbol(foo5, Decl(declFileTypeofFunction.ts, 25, 1))
>x : number, Symbol(x, Decl(declFileTypeofFunction.ts, 27, 14))

    function bar(x: number) {
>bar : (x: number) => number, Symbol(bar, Decl(declFileTypeofFunction.ts, 27, 26))
>x : number, Symbol(x, Decl(declFileTypeofFunction.ts, 28, 17))

        return x;
>x : number, Symbol(x, Decl(declFileTypeofFunction.ts, 28, 17))
    }
    return bar;
>bar : (x: number) => number, Symbol(bar, Decl(declFileTypeofFunction.ts, 27, 26))
}
