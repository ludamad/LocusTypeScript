=== tests/cases/compiler/trailingCommasES5.ts ===

var o1 = { a: 1, b: 2 };
>o1 : { a: number; b: number; }, Symbol(o1,Decl(trailingCommasES5.ts,1,3))
>{ a: 1, b: 2 } : { a: number; b: number; }
>a : number, Symbol(a,Decl(trailingCommasES5.ts,1,10))
>1 : number
>b : number, Symbol(b,Decl(trailingCommasES5.ts,1,16))
>2 : number

var o2 = { a: 1, b: 2, };
>o2 : { a: number; b: number; }, Symbol(o2,Decl(trailingCommasES5.ts,2,3))
>{ a: 1, b: 2, } : { a: number; b: number; }
>a : number, Symbol(a,Decl(trailingCommasES5.ts,2,10))
>1 : number
>b : number, Symbol(b,Decl(trailingCommasES5.ts,2,16))
>2 : number

var o3 = { a: 1, };
>o3 : { a: number; }, Symbol(o3,Decl(trailingCommasES5.ts,3,3))
>{ a: 1, } : { a: number; }
>a : number, Symbol(a,Decl(trailingCommasES5.ts,3,10))
>1 : number

var o4 = {};
>o4 : {}, Symbol(o4,Decl(trailingCommasES5.ts,4,3))
>{} : {}

var a1 = [1, 2];
>a1 : number[], Symbol(a1,Decl(trailingCommasES5.ts,6,3))
>[1, 2] : number[]
>1 : number
>2 : number

var a2 = [1, 2, ];
>a2 : number[], Symbol(a2,Decl(trailingCommasES5.ts,7,3))
>[1, 2, ] : number[]
>1 : number
>2 : number

var a3 = [1, ];
>a3 : number[], Symbol(a3,Decl(trailingCommasES5.ts,8,3))
>[1, ] : number[]
>1 : number

var a4 = [];
>a4 : any[], Symbol(a4,Decl(trailingCommasES5.ts,9,3))
>[] : undefined[]

var a5 = [1, , ];
>a5 : number[], Symbol(a5,Decl(trailingCommasES5.ts,10,3))
>[1, , ] : number[]
>1 : number
> : undefined

var a6 = [, , ];
>a6 : any[], Symbol(a6,Decl(trailingCommasES5.ts,11,3))
>[, , ] : undefined[]
> : undefined
> : undefined

