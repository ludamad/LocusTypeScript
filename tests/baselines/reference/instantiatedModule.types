=== tests/cases/conformance/internalModules/moduleDeclarations/instantiatedModule.ts ===
// adding the var makes this an instantiated module

module M {
>M : typeof M, Symbol(M,Decl(instantiatedModule.ts,0,0))

    export interface Point { x: number; y: number }
>Point : Point, Symbol(Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))
>x : number, Symbol(x,Decl(instantiatedModule.ts,3,28))
>y : number, Symbol(y,Decl(instantiatedModule.ts,3,39))

    export var Point = 1;
>Point : number, Symbol(Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))
>1 : number
}

// primary expression
var m: typeof M;
>m : typeof M, Symbol(m,Decl(instantiatedModule.ts,8,3),Decl(instantiatedModule.ts,9,3))
>M : typeof M, Symbol(M,Decl(instantiatedModule.ts,0,0))

var m = M;
>m : typeof M, Symbol(m,Decl(instantiatedModule.ts,8,3),Decl(instantiatedModule.ts,9,3))
>M : typeof M, Symbol(M,Decl(instantiatedModule.ts,0,0))

var a1: number;
>a1 : number, Symbol(a1,Decl(instantiatedModule.ts,11,3),Decl(instantiatedModule.ts,12,3),Decl(instantiatedModule.ts,13,3))

var a1 = M.Point;
>a1 : number, Symbol(a1,Decl(instantiatedModule.ts,11,3),Decl(instantiatedModule.ts,12,3),Decl(instantiatedModule.ts,13,3))
>M.Point : number, Symbol(M.Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))
>M : typeof M, Symbol(M,Decl(instantiatedModule.ts,0,0))
>Point : number, Symbol(M.Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))

var a1 = m.Point;
>a1 : number, Symbol(a1,Decl(instantiatedModule.ts,11,3),Decl(instantiatedModule.ts,12,3),Decl(instantiatedModule.ts,13,3))
>m.Point : number, Symbol(M.Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))
>m : typeof M, Symbol(m,Decl(instantiatedModule.ts,8,3),Decl(instantiatedModule.ts,9,3))
>Point : number, Symbol(M.Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))

var p1: { x: number; y: number; }
>p1 : { x: number; y: number; }, Symbol(p1,Decl(instantiatedModule.ts,15,3),Decl(instantiatedModule.ts,16,3))
>x : number, Symbol(x,Decl(instantiatedModule.ts,15,9))
>y : number, Symbol(y,Decl(instantiatedModule.ts,15,20))

var p1: M.Point;
>p1 : { x: number; y: number; }, Symbol(p1,Decl(instantiatedModule.ts,15,3),Decl(instantiatedModule.ts,16,3))
>M : any, Symbol(M,Decl(instantiatedModule.ts,0,0))
>Point : M.Point, Symbol(M.Point,Decl(instantiatedModule.ts,2,10),Decl(instantiatedModule.ts,4,14))

// making the point a class instead of an interface 
// makes this an instantiated mmodule
module M2 {
>M2 : typeof M2, Symbol(M2,Decl(instantiatedModule.ts,16,16))

    export class Point {
>Point : Point, Symbol(Point,Decl(instantiatedModule.ts,20,11))

        x: number;
>x : number, Symbol(x,Decl(instantiatedModule.ts,21,24))

        y: number;
>y : number, Symbol(y,Decl(instantiatedModule.ts,22,18))

        static Origin(): Point {
>Origin : () => Point, Symbol(Point.Origin,Decl(instantiatedModule.ts,23,18))
>Point : Point, Symbol(Point,Decl(instantiatedModule.ts,20,11))

            return { x: 0, y: 0 };
>{ x: 0, y: 0 } : { x: number; y: number; }
>x : number, Symbol(x,Decl(instantiatedModule.ts,25,20))
>0 : number
>y : number, Symbol(y,Decl(instantiatedModule.ts,25,26))
>0 : number
        }
    }
}

var m2: typeof M2;
>m2 : typeof M2, Symbol(m2,Decl(instantiatedModule.ts,30,3),Decl(instantiatedModule.ts,31,3))
>M2 : typeof M2, Symbol(M2,Decl(instantiatedModule.ts,16,16))

var m2 = M2;
>m2 : typeof M2, Symbol(m2,Decl(instantiatedModule.ts,30,3),Decl(instantiatedModule.ts,31,3))
>M2 : typeof M2, Symbol(M2,Decl(instantiatedModule.ts,16,16))

// static side of the class
var a2: typeof M2.Point;
>a2 : typeof M2.Point, Symbol(a2,Decl(instantiatedModule.ts,34,3),Decl(instantiatedModule.ts,35,3),Decl(instantiatedModule.ts,36,3))
>M2.Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))
>M2 : typeof M2, Symbol(M2,Decl(instantiatedModule.ts,16,16))
>Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))

var a2 = m2.Point;
>a2 : typeof M2.Point, Symbol(a2,Decl(instantiatedModule.ts,34,3),Decl(instantiatedModule.ts,35,3),Decl(instantiatedModule.ts,36,3))
>m2.Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))
>m2 : typeof M2, Symbol(m2,Decl(instantiatedModule.ts,30,3),Decl(instantiatedModule.ts,31,3))
>Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))

var a2 = M2.Point;
>a2 : typeof M2.Point, Symbol(a2,Decl(instantiatedModule.ts,34,3),Decl(instantiatedModule.ts,35,3),Decl(instantiatedModule.ts,36,3))
>M2.Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))
>M2 : typeof M2, Symbol(M2,Decl(instantiatedModule.ts,16,16))
>Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))

var o: M2.Point = a2.Origin();
>o : M2.Point, Symbol(o,Decl(instantiatedModule.ts,37,3))
>M2 : any, Symbol(M2,Decl(instantiatedModule.ts,16,16))
>Point : M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))
>a2.Origin() : M2.Point
>a2.Origin : () => M2.Point, Symbol(M2.Point.Origin,Decl(instantiatedModule.ts,23,18))
>a2 : typeof M2.Point, Symbol(a2,Decl(instantiatedModule.ts,34,3),Decl(instantiatedModule.ts,35,3),Decl(instantiatedModule.ts,36,3))
>Origin : () => M2.Point, Symbol(M2.Point.Origin,Decl(instantiatedModule.ts,23,18))

var p2: { x: number; y: number }
>p2 : { x: number; y: number; }, Symbol(p2,Decl(instantiatedModule.ts,39,3),Decl(instantiatedModule.ts,40,3),Decl(instantiatedModule.ts,41,3),Decl(instantiatedModule.ts,42,3))
>x : number, Symbol(x,Decl(instantiatedModule.ts,39,9))
>y : number, Symbol(y,Decl(instantiatedModule.ts,39,20))

var p2: M2.Point;
>p2 : { x: number; y: number; }, Symbol(p2,Decl(instantiatedModule.ts,39,3),Decl(instantiatedModule.ts,40,3),Decl(instantiatedModule.ts,41,3),Decl(instantiatedModule.ts,42,3))
>M2 : any, Symbol(M2,Decl(instantiatedModule.ts,16,16))
>Point : M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))

var p2 = new m2.Point();
>p2 : { x: number; y: number; }, Symbol(p2,Decl(instantiatedModule.ts,39,3),Decl(instantiatedModule.ts,40,3),Decl(instantiatedModule.ts,41,3),Decl(instantiatedModule.ts,42,3))
>new m2.Point() : M2.Point
>m2.Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))
>m2 : typeof M2, Symbol(m2,Decl(instantiatedModule.ts,30,3),Decl(instantiatedModule.ts,31,3))
>Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))

var p2 = new M2.Point();
>p2 : { x: number; y: number; }, Symbol(p2,Decl(instantiatedModule.ts,39,3),Decl(instantiatedModule.ts,40,3),Decl(instantiatedModule.ts,41,3),Decl(instantiatedModule.ts,42,3))
>new M2.Point() : M2.Point
>M2.Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))
>M2 : typeof M2, Symbol(M2,Decl(instantiatedModule.ts,16,16))
>Point : typeof M2.Point, Symbol(M2.Point,Decl(instantiatedModule.ts,20,11))

module M3 {
>M3 : typeof M3, Symbol(M3,Decl(instantiatedModule.ts,42,24))

    export enum Color { Blue, Red }
>Color : Color, Symbol(Color,Decl(instantiatedModule.ts,44,11))
>Blue : Color, Symbol(Color.Blue,Decl(instantiatedModule.ts,45,23))
>Red : Color, Symbol(Color.Red,Decl(instantiatedModule.ts,45,29))
}

var m3: typeof M3;
>m3 : typeof M3, Symbol(m3,Decl(instantiatedModule.ts,48,3),Decl(instantiatedModule.ts,49,3))
>M3 : typeof M3, Symbol(M3,Decl(instantiatedModule.ts,42,24))

var m3 = M3;
>m3 : typeof M3, Symbol(m3,Decl(instantiatedModule.ts,48,3),Decl(instantiatedModule.ts,49,3))
>M3 : typeof M3, Symbol(M3,Decl(instantiatedModule.ts,42,24))

var a3: typeof M3.Color;
>a3 : typeof M3.Color, Symbol(a3,Decl(instantiatedModule.ts,51,3),Decl(instantiatedModule.ts,52,3),Decl(instantiatedModule.ts,53,3))
>M3.Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>M3 : typeof M3, Symbol(M3,Decl(instantiatedModule.ts,42,24))
>Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))

var a3 = m3.Color;
>a3 : typeof M3.Color, Symbol(a3,Decl(instantiatedModule.ts,51,3),Decl(instantiatedModule.ts,52,3),Decl(instantiatedModule.ts,53,3))
>m3.Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>m3 : typeof M3, Symbol(m3,Decl(instantiatedModule.ts,48,3),Decl(instantiatedModule.ts,49,3))
>Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))

var a3 = M3.Color;
>a3 : typeof M3.Color, Symbol(a3,Decl(instantiatedModule.ts,51,3),Decl(instantiatedModule.ts,52,3),Decl(instantiatedModule.ts,53,3))
>M3.Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>M3 : typeof M3, Symbol(M3,Decl(instantiatedModule.ts,42,24))
>Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))

var blue: M3.Color = a3.Blue;
>blue : M3.Color, Symbol(blue,Decl(instantiatedModule.ts,54,3))
>M3 : any, Symbol(M3,Decl(instantiatedModule.ts,42,24))
>Color : M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>a3.Blue : M3.Color, Symbol(M3.Color.Blue,Decl(instantiatedModule.ts,45,23))
>a3 : typeof M3.Color, Symbol(a3,Decl(instantiatedModule.ts,51,3),Decl(instantiatedModule.ts,52,3),Decl(instantiatedModule.ts,53,3))
>Blue : M3.Color, Symbol(M3.Color.Blue,Decl(instantiatedModule.ts,45,23))

var p3: M3.Color;
>p3 : M3.Color, Symbol(p3,Decl(instantiatedModule.ts,56,3),Decl(instantiatedModule.ts,57,3),Decl(instantiatedModule.ts,58,3))
>M3 : any, Symbol(M3,Decl(instantiatedModule.ts,42,24))
>Color : M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))

var p3 = M3.Color.Red;
>p3 : M3.Color, Symbol(p3,Decl(instantiatedModule.ts,56,3),Decl(instantiatedModule.ts,57,3),Decl(instantiatedModule.ts,58,3))
>M3.Color.Red : M3.Color, Symbol(M3.Color.Red,Decl(instantiatedModule.ts,45,29))
>M3.Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>M3 : typeof M3, Symbol(M3,Decl(instantiatedModule.ts,42,24))
>Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>Red : M3.Color, Symbol(M3.Color.Red,Decl(instantiatedModule.ts,45,29))

var p3 = m3.Color.Blue;
>p3 : M3.Color, Symbol(p3,Decl(instantiatedModule.ts,56,3),Decl(instantiatedModule.ts,57,3),Decl(instantiatedModule.ts,58,3))
>m3.Color.Blue : M3.Color, Symbol(M3.Color.Blue,Decl(instantiatedModule.ts,45,23))
>m3.Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>m3 : typeof M3, Symbol(m3,Decl(instantiatedModule.ts,48,3),Decl(instantiatedModule.ts,49,3))
>Color : typeof M3.Color, Symbol(M3.Color,Decl(instantiatedModule.ts,44,11))
>Blue : M3.Color, Symbol(M3.Color.Blue,Decl(instantiatedModule.ts,45,23))

