=== tests/cases/compiler/ambiguousCallsWhereReturnTypesAgree.ts ===
class TestClass {
>TestClass : TestClass, Symbol(TestClass,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,0))

    public bar(x: string): void;
>bar : { (x: string): void; (x: string[]): void; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,17),Decl(ambiguousCallsWhereReturnTypesAgree.ts,1,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,2,34))
>x : string, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,1,15))

    public bar(x: string[]): void;
>bar : { (x: string): void; (x: string[]): void; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,17),Decl(ambiguousCallsWhereReturnTypesAgree.ts,1,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,2,34))
>x : string[], Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,2,15))

    public bar(x: any): void {
>bar : { (x: string): void; (x: string[]): void; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,17),Decl(ambiguousCallsWhereReturnTypesAgree.ts,1,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,2,34))
>x : any, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,3,15))
        
    }
 
    public foo(x: string): void;
>foo : { (x: string): void; (x: string[]): void; }, Symbol(foo,Decl(ambiguousCallsWhereReturnTypesAgree.ts,5,5),Decl(ambiguousCallsWhereReturnTypesAgree.ts,7,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,8,34))
>x : string, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,7,15))

    public foo(x: string[]): void;
>foo : { (x: string): void; (x: string[]): void; }, Symbol(foo,Decl(ambiguousCallsWhereReturnTypesAgree.ts,5,5),Decl(ambiguousCallsWhereReturnTypesAgree.ts,7,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,8,34))
>x : string[], Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,8,15))

    public foo(x: any): void {
>foo : { (x: string): void; (x: string[]): void; }, Symbol(foo,Decl(ambiguousCallsWhereReturnTypesAgree.ts,5,5),Decl(ambiguousCallsWhereReturnTypesAgree.ts,7,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,8,34))
>x : any, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,9,15))

        this.bar(x); // should not error
>this.bar(x) : void
>this.bar : { (x: string): void; (x: string[]): void; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,17),Decl(ambiguousCallsWhereReturnTypesAgree.ts,1,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,2,34))
>this : TestClass, Symbol(TestClass,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,0))
>bar : { (x: string): void; (x: string[]): void; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,0,17),Decl(ambiguousCallsWhereReturnTypesAgree.ts,1,32),Decl(ambiguousCallsWhereReturnTypesAgree.ts,2,34))
>x : any, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,9,15))
    }
}

class TestClass2 {
>TestClass2 : TestClass2, Symbol(TestClass2,Decl(ambiguousCallsWhereReturnTypesAgree.ts,12,1))

    public bar(x: string): number;
>bar : { (x: string): number; (x: string[]): number; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,14,18),Decl(ambiguousCallsWhereReturnTypesAgree.ts,15,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,16,36))
>x : string, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,15,15))

    public bar(x: string[]): number;
>bar : { (x: string): number; (x: string[]): number; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,14,18),Decl(ambiguousCallsWhereReturnTypesAgree.ts,15,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,16,36))
>x : string[], Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,16,15))

    public bar(x: any): number {
>bar : { (x: string): number; (x: string[]): number; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,14,18),Decl(ambiguousCallsWhereReturnTypesAgree.ts,15,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,16,36))
>x : any, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,17,15))

        return 0;
>0 : number
    }
 
    public foo(x: string): number;
>foo : { (x: string): number; (x: string[]): number; }, Symbol(foo,Decl(ambiguousCallsWhereReturnTypesAgree.ts,19,5),Decl(ambiguousCallsWhereReturnTypesAgree.ts,21,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,22,36))
>x : string, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,21,15))

    public foo(x: string[]): number;
>foo : { (x: string): number; (x: string[]): number; }, Symbol(foo,Decl(ambiguousCallsWhereReturnTypesAgree.ts,19,5),Decl(ambiguousCallsWhereReturnTypesAgree.ts,21,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,22,36))
>x : string[], Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,22,15))

    public foo(x: any): number {
>foo : { (x: string): number; (x: string[]): number; }, Symbol(foo,Decl(ambiguousCallsWhereReturnTypesAgree.ts,19,5),Decl(ambiguousCallsWhereReturnTypesAgree.ts,21,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,22,36))
>x : any, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,23,15))

        return this.bar(x); // should not error
>this.bar(x) : number
>this.bar : { (x: string): number; (x: string[]): number; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,14,18),Decl(ambiguousCallsWhereReturnTypesAgree.ts,15,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,16,36))
>this : TestClass2, Symbol(TestClass2,Decl(ambiguousCallsWhereReturnTypesAgree.ts,12,1))
>bar : { (x: string): number; (x: string[]): number; }, Symbol(bar,Decl(ambiguousCallsWhereReturnTypesAgree.ts,14,18),Decl(ambiguousCallsWhereReturnTypesAgree.ts,15,34),Decl(ambiguousCallsWhereReturnTypesAgree.ts,16,36))
>x : any, Symbol(x,Decl(ambiguousCallsWhereReturnTypesAgree.ts,23,15))
    }
}

