=== tests/cases/compiler/declarationEmit_nameConflicts3.ts ===
module M {
>M : M

    export interface D { }
>D : D

    export module D {
>D : D

        export function f() { }
>f : typeof f
    }
    export module C {
>C : C

        export function f() { }
>f : typeof f
    }
    export module E {
>E : E

        export function f() { }
>f : typeof f
    }
}

module M.P {
>M : M
>P : P

    export class C {
>C : C

        static f() { }
>f : () => void
    }
    export class E extends C { }
>E : E
>C : C

    export enum D {
>D : D

        f
>f : D
    }
    export var v: M.D; // ok
>v : M.D
>M : M
>D : M.D

    export var w = M.D.f; // error, should be typeof M.D.f
>w : typeof M.D.f
>M.D.f : typeof M.D.f
>M.D : typeof M.D
>M : typeof M
>D : typeof M.D
>f : typeof M.D.f

    export var x = M.C.f; // error, should be typeof M.C.f
>x : typeof M.C.f
>M.C.f : typeof M.C.f
>M.C : typeof M.C
>M : typeof M
>C : typeof M.C
>f : typeof M.C.f

    export var x = M.E.f; // error, should be typeof M.E.f
>x : typeof M.C.f
>M.E.f : typeof M.E.f
>M.E : typeof M.E
>M : typeof M
>E : typeof M.E
>f : typeof M.E.f
}
