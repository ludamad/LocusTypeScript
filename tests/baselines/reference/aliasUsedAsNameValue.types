=== tests/cases/compiler/aliasUsedAsNameValue_2.ts ===
///<reference path='aliasUsedAsNameValue_0.ts' />
///<reference path='aliasUsedAsNameValue_1.ts' />
import mod = require("aliasUsedAsNameValue_0");
>mod : typeof mod, Symbol(mod, Decl(aliasUsedAsNameValue_2.ts, 0, 0))

import b = require("aliasUsedAsNameValue_1");
>b : typeof b, Symbol(b, Decl(aliasUsedAsNameValue_2.ts, 2, 47))
 
export var a = function () {
>a : () => void, Symbol(a, Decl(aliasUsedAsNameValue_2.ts, 5, 10))
>function () {    //var x = mod.id; // TODO needed hack that mod is loaded    b.b(mod);} : () => void

    //var x = mod.id; // TODO needed hack that mod is loaded
    b.b(mod);
>b.b(mod) : any
>b.b : (a: any) => any, Symbol(b.b, Decl(aliasUsedAsNameValue_1.ts, 0, 0))
>b : typeof b, Symbol(b, Decl(aliasUsedAsNameValue_2.ts, 2, 47))
>b : (a: any) => any, Symbol(b.b, Decl(aliasUsedAsNameValue_1.ts, 0, 0))
>mod : typeof mod, Symbol(mod, Decl(aliasUsedAsNameValue_2.ts, 0, 0))
}

=== tests/cases/compiler/aliasUsedAsNameValue_0.ts ===
export var id: number;
>id : number, Symbol(id, Decl(aliasUsedAsNameValue_0.ts, 0, 10))

=== tests/cases/compiler/aliasUsedAsNameValue_1.ts ===
export function b(a: any): any { return null; }
>b : (a: any) => any, Symbol(b, Decl(aliasUsedAsNameValue_1.ts, 0, 0))
>a : any, Symbol(a, Decl(aliasUsedAsNameValue_1.ts, 0, 18))
>null : null

