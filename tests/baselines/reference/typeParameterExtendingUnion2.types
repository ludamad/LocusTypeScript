=== tests/cases/compiler/typeParameterExtendingUnion2.ts ===
class Animal { run() { } }
>Animal : Animal, Symbol(Animal, Decl(typeParameterExtendingUnion2.ts, 0, 0))
>run : () => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 0, 14))

class Cat extends Animal { meow }
>Cat : Cat, Symbol(Cat, Decl(typeParameterExtendingUnion2.ts, 0, 26))
>Animal : Animal, Symbol(Animal, Decl(typeParameterExtendingUnion2.ts, 0, 0))
>meow : any, Symbol(meow, Decl(typeParameterExtendingUnion2.ts, 1, 26))

class Dog extends Animal { woof }
>Dog : Dog, Symbol(Dog, Decl(typeParameterExtendingUnion2.ts, 1, 33))
>Animal : Animal, Symbol(Animal, Decl(typeParameterExtendingUnion2.ts, 0, 0))
>woof : any, Symbol(woof, Decl(typeParameterExtendingUnion2.ts, 2, 26))

function run(a: Cat | Dog) {
>run : (a: Cat | Dog) => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 2, 33))
>a : Cat | Dog, Symbol(a, Decl(typeParameterExtendingUnion2.ts, 4, 13))
>Cat : Cat, Symbol(Cat, Decl(typeParameterExtendingUnion2.ts, 0, 26))
>Dog : Dog, Symbol(Dog, Decl(typeParameterExtendingUnion2.ts, 1, 33))

    a.run();
>a.run() : void
>a.run : () => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 0, 14), Decl(typeParameterExtendingUnion2.ts, 0, 14))
>a : Cat | Dog, Symbol(a, Decl(typeParameterExtendingUnion2.ts, 4, 13))
>run : () => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 0, 14), Decl(typeParameterExtendingUnion2.ts, 0, 14))
}

function f<T extends Cat | Dog>(a: T) {
>f : <T extends Cat | Dog>(a: T) => void, Symbol(f, Decl(typeParameterExtendingUnion2.ts, 6, 1))
>T : T, Symbol(T, Decl(typeParameterExtendingUnion2.ts, 8, 11))
>Cat : Cat, Symbol(Cat, Decl(typeParameterExtendingUnion2.ts, 0, 26))
>Dog : Dog, Symbol(Dog, Decl(typeParameterExtendingUnion2.ts, 1, 33))
>a : T, Symbol(a, Decl(typeParameterExtendingUnion2.ts, 8, 32))
>T : T, Symbol(T, Decl(typeParameterExtendingUnion2.ts, 8, 11))

    a.run();
>a.run() : void
>a.run : () => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 0, 14), Decl(typeParameterExtendingUnion2.ts, 0, 14))
>a : T, Symbol(a, Decl(typeParameterExtendingUnion2.ts, 8, 32))
>run : () => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 0, 14), Decl(typeParameterExtendingUnion2.ts, 0, 14))

    run(a);
>run(a) : void
>run : (a: Cat | Dog) => void, Symbol(run, Decl(typeParameterExtendingUnion2.ts, 2, 33))
>a : T, Symbol(a, Decl(typeParameterExtendingUnion2.ts, 8, 32))
}
