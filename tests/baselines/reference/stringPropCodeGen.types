=== tests/cases/compiler/stringPropCodeGen.ts ===
var a = {
>a : { "foo": () => void; "bar": number; }, Symbol(a, Decl(stringPropCodeGen.ts, 0, 3))
>{  "foo" : function() { },  "bar" : 5} : { "foo": () => void; "bar": number; }

  "foo" : function() { },
>function() { } : () => void

  "bar" : 5
>5 : number

};



a.foo();
>a.foo() : void
>a.foo : () => void, Symbol("foo", Decl(stringPropCodeGen.ts, 0, 9))
>a : { "foo": () => void; "bar": number; }, Symbol(a, Decl(stringPropCodeGen.ts, 0, 3))
>foo : () => void, Symbol("foo", Decl(stringPropCodeGen.ts, 0, 9))

a.bar.toString();
>a.bar.toString() : string
>a.bar.toString : (radix?: number) => string, Symbol(Number.toString, Decl(lib.d.ts, 458, 18))
>a.bar : number, Symbol("bar", Decl(stringPropCodeGen.ts, 2, 25))
>a : { "foo": () => void; "bar": number; }, Symbol(a, Decl(stringPropCodeGen.ts, 0, 3))
>bar : number, Symbol("bar", Decl(stringPropCodeGen.ts, 2, 25))
>toString : (radix?: number) => string, Symbol(Number.toString, Decl(lib.d.ts, 458, 18))

