=== tests/cases/compiler/sourceMapValidationFunctions.ts ===
var greetings = 0;
>greetings : number, Symbol(greetings, Decl(sourceMapValidationFunctions.ts, 0, 3))
>0 : number

function greet(greeting: string): number {
>greet : (greeting: string) => number, Symbol(greet, Decl(sourceMapValidationFunctions.ts, 0, 18))
>greeting : string, Symbol(greeting, Decl(sourceMapValidationFunctions.ts, 1, 15))

    greetings++;
>greetings++ : number
>greetings : number, Symbol(greetings, Decl(sourceMapValidationFunctions.ts, 0, 3))

    return greetings;
>greetings : number, Symbol(greetings, Decl(sourceMapValidationFunctions.ts, 0, 3))
}
function greet2(greeting: string, n = 10, x?: string, ...restParams: string[]): number {
>greet2 : (greeting: string, n?: number, x?: string, ...restParams: string[]) => number, Symbol(greet2, Decl(sourceMapValidationFunctions.ts, 4, 1))
>greeting : string, Symbol(greeting, Decl(sourceMapValidationFunctions.ts, 5, 16))
>n : number, Symbol(n, Decl(sourceMapValidationFunctions.ts, 5, 33))
>10 : number
>x : string, Symbol(x, Decl(sourceMapValidationFunctions.ts, 5, 41))
>restParams : string[], Symbol(restParams, Decl(sourceMapValidationFunctions.ts, 5, 53))

    greetings++;
>greetings++ : number
>greetings : number, Symbol(greetings, Decl(sourceMapValidationFunctions.ts, 0, 3))

    return greetings;
>greetings : number, Symbol(greetings, Decl(sourceMapValidationFunctions.ts, 0, 3))
}
function foo(greeting: string, n = 10, x?: string, ...restParams: string[])
>foo : (greeting: string, n?: number, x?: string, ...restParams: string[]) => void, Symbol(foo, Decl(sourceMapValidationFunctions.ts, 8, 1))
>greeting : string, Symbol(greeting, Decl(sourceMapValidationFunctions.ts, 9, 13))
>n : number, Symbol(n, Decl(sourceMapValidationFunctions.ts, 9, 30))
>10 : number
>x : string, Symbol(x, Decl(sourceMapValidationFunctions.ts, 9, 38))
>restParams : string[], Symbol(restParams, Decl(sourceMapValidationFunctions.ts, 9, 50))
{
    return;
}
