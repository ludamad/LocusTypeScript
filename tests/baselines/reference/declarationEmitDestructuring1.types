=== tests/cases/compiler/declarationEmitDestructuring1.ts ===
function foo([a, b, c]: [string, string, string]): void { }
>foo : ([a, b, c]: [string, string, string]) => void, Symbol(foo,Decl(declarationEmitDestructuring1.ts,0,0))
>a : string, Symbol(a,Decl(declarationEmitDestructuring1.ts,0,14))
>b : string, Symbol(b,Decl(declarationEmitDestructuring1.ts,0,16))
>c : string, Symbol(c,Decl(declarationEmitDestructuring1.ts,0,19))

function far([a, [b], [[c]]]: [number, boolean[], string[][]]): void { }
>far : ([a, [b], [[c]]]: [number, boolean[], string[][]]) => void, Symbol(far,Decl(declarationEmitDestructuring1.ts,0,59))
>a : number, Symbol(a,Decl(declarationEmitDestructuring1.ts,1,14))
>b : boolean, Symbol(b,Decl(declarationEmitDestructuring1.ts,1,18))
>c : string, Symbol(c,Decl(declarationEmitDestructuring1.ts,1,24))

function bar({a1, b1, c1}: { a1: number, b1: boolean, c1: string }): void { }
>bar : ({a1, b1, c1}: { a1: number; b1: boolean; c1: string; }) => void, Symbol(bar,Decl(declarationEmitDestructuring1.ts,1,72))
>a1 : number, Symbol(a1,Decl(declarationEmitDestructuring1.ts,2,14))
>b1 : boolean, Symbol(b1,Decl(declarationEmitDestructuring1.ts,2,17))
>c1 : string, Symbol(c1,Decl(declarationEmitDestructuring1.ts,2,21))
>a1 : number, Symbol(a1,Decl(declarationEmitDestructuring1.ts,2,28))
>b1 : boolean, Symbol(b1,Decl(declarationEmitDestructuring1.ts,2,40))
>c1 : string, Symbol(c1,Decl(declarationEmitDestructuring1.ts,2,53))

function baz({a2, b2: {b1, c1}}: { a2: number, b2: { b1: boolean, c1: string } }): void { } 
>baz : ({a2, b2: {b1, c1}}: { a2: number; b2: { b1: boolean; c1: string; }; }) => void, Symbol(baz,Decl(declarationEmitDestructuring1.ts,2,77))
>a2 : number, Symbol(a2,Decl(declarationEmitDestructuring1.ts,3,14))
>b2 : any
>b1 : boolean, Symbol(b1,Decl(declarationEmitDestructuring1.ts,3,23))
>c1 : string, Symbol(c1,Decl(declarationEmitDestructuring1.ts,3,26))
>a2 : number, Symbol(a2,Decl(declarationEmitDestructuring1.ts,3,34))
>b2 : { b1: boolean; c1: string; }, Symbol(b2,Decl(declarationEmitDestructuring1.ts,3,46))
>b1 : boolean, Symbol(b1,Decl(declarationEmitDestructuring1.ts,3,52))
>c1 : string, Symbol(c1,Decl(declarationEmitDestructuring1.ts,3,65))

