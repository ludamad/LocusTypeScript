=== tests/cases/conformance/expressions/binaryOperators/logicalOrOperator/logicalOrExpressionIsContextuallyTyped.ts ===
// The || operator permits the operands to be of any type.
// If the || expression is contextually typed, the operands are contextually typed by the
// same type and the result is of the best common type of the contextual type and the two
// operand types.

var r: { a: string } = { a: '', b: 123 } || { a: '', b: true };
>r : { a: string; }, Symbol(r,Decl(logicalOrExpressionIsContextuallyTyped.ts,5,3))
>a : string, Symbol(a,Decl(logicalOrExpressionIsContextuallyTyped.ts,5,8))
>{ a: '', b: 123 } || { a: '', b: true } : { a: string; b: number; } | { a: string; b: boolean; }
>{ a: '', b: 123 } : { a: string; b: number; }
>a : string, Symbol(a,Decl(logicalOrExpressionIsContextuallyTyped.ts,5,24))
>'' : string
>b : number, Symbol(b,Decl(logicalOrExpressionIsContextuallyTyped.ts,5,31))
>123 : number
>{ a: '', b: true } : { a: string; b: boolean; }
>a : string, Symbol(a,Decl(logicalOrExpressionIsContextuallyTyped.ts,5,45))
>'' : string
>b : boolean, Symbol(b,Decl(logicalOrExpressionIsContextuallyTyped.ts,5,52))
>true : boolean

