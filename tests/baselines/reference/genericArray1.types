=== tests/cases/compiler/genericArray1.ts ===
/*
var n: number[];

interface Array<T> {
map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
}

interface String{
	length: number;
}
*/

var lengths = ["a", "b", "c"].map(x => x.length);
>lengths : number[], Symbol(lengths,Decl(genericArray1.ts,12,3))
>["a", "b", "c"].map(x => x.length) : number[]
>["a", "b", "c"].map : <U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[], Symbol(Array.map,Decl(lib.d.ts,1115,92))
>["a", "b", "c"] : string[]
>"a" : string
>"b" : string
>"c" : string
>map : <U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[], Symbol(Array.map,Decl(lib.d.ts,1115,92))
>x => x.length : (x: string) => number
>x : string, Symbol(x,Decl(genericArray1.ts,12,34))
>x.length : number, Symbol(String.length,Decl(lib.d.ts,414,19))
>x : string, Symbol(x,Decl(genericArray1.ts,12,34))
>length : number, Symbol(String.length,Decl(lib.d.ts,414,19))

