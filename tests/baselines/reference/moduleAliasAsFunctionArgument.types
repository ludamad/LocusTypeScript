=== tests/cases/compiler/moduleAliasAsFunctionArgument_1.ts ===
///<reference path='moduleAliasAsFunctionArgument_0.ts'/>
import a = require('moduleAliasAsFunctionArgument_0');
>a : typeof a, Symbol(a, Decl(moduleAliasAsFunctionArgument_1.ts, 0, 0))

function fn(arg: { x: number }) {
>fn : (arg: { x: number; }) => void, Symbol(fn, Decl(moduleAliasAsFunctionArgument_1.ts, 1, 54))
>arg : { x: number; }, Symbol(arg, Decl(moduleAliasAsFunctionArgument_1.ts, 3, 12))
>x : number, Symbol(x, Decl(moduleAliasAsFunctionArgument_1.ts, 3, 18))
}

a.x; // OK
>a.x : number, Symbol(a.x, Decl(moduleAliasAsFunctionArgument_0.ts, 0, 10))
>a : typeof a, Symbol(a, Decl(moduleAliasAsFunctionArgument_1.ts, 0, 0))
>x : number, Symbol(a.x, Decl(moduleAliasAsFunctionArgument_0.ts, 0, 10))

fn(a); // Error: property 'x' is missing from 'a'
>fn(a) : void
>fn : (arg: { x: number; }) => void, Symbol(fn, Decl(moduleAliasAsFunctionArgument_1.ts, 1, 54))
>a : typeof a, Symbol(a, Decl(moduleAliasAsFunctionArgument_1.ts, 0, 0))

=== tests/cases/compiler/moduleAliasAsFunctionArgument_0.ts ===
export var x: number;
>x : number, Symbol(x, Decl(moduleAliasAsFunctionArgument_0.ts, 0, 10))

