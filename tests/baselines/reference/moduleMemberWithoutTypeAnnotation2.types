=== tests/cases/compiler/moduleMemberWithoutTypeAnnotation2.ts ===
module TypeScript {
>TypeScript : typeof TypeScript, Symbol(TypeScript,Decl(moduleMemberWithoutTypeAnnotation2.ts,0,0))

    export module CompilerDiagnostics {
>CompilerDiagnostics : typeof CompilerDiagnostics, Symbol(CompilerDiagnostics,Decl(moduleMemberWithoutTypeAnnotation2.ts,0,19))

        export interface IDiagnosticWriter {
>IDiagnosticWriter : IDiagnosticWriter, Symbol(IDiagnosticWriter,Decl(moduleMemberWithoutTypeAnnotation2.ts,1,39))

            Alert(output: string): void;
>Alert : (output: string) => void, Symbol(Alert,Decl(moduleMemberWithoutTypeAnnotation2.ts,3,44))
>output : string, Symbol(output,Decl(moduleMemberWithoutTypeAnnotation2.ts,4,18))
        }

        export var diagnosticWriter = null;
>diagnosticWriter : any, Symbol(diagnosticWriter,Decl(moduleMemberWithoutTypeAnnotation2.ts,7,18))
>null : null

        export function Alert(output: string) {
>Alert : (output: string) => void, Symbol(Alert,Decl(moduleMemberWithoutTypeAnnotation2.ts,7,43))
>output : string, Symbol(output,Decl(moduleMemberWithoutTypeAnnotation2.ts,9,30))

            if (diagnosticWriter) {
>diagnosticWriter : any, Symbol(diagnosticWriter,Decl(moduleMemberWithoutTypeAnnotation2.ts,7,18))

                diagnosticWriter.Alert(output);
>diagnosticWriter.Alert(output) : any
>diagnosticWriter.Alert : any
>diagnosticWriter : any, Symbol(diagnosticWriter,Decl(moduleMemberWithoutTypeAnnotation2.ts,7,18))
>Alert : any
>output : string, Symbol(output,Decl(moduleMemberWithoutTypeAnnotation2.ts,9,30))
            }
        }
    }
}

