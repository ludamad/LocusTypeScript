=== tests/cases/conformance/es6/Symbols/symbolProperty41.ts ===
class C {
>C : C, Symbol(C,Decl(symbolProperty41.ts,0,0))

    [Symbol.iterator](x: string): { x: string };
>Symbol.iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>Symbol : SymbolConstructor, Symbol(Symbol,Decl(lib.d.ts,1186,52),Decl(lib.d.ts,1262,11))
>iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>x : string, Symbol(x,Decl(symbolProperty41.ts,1,22))
>x : string, Symbol(x,Decl(symbolProperty41.ts,1,35))

    [Symbol.iterator](x: "hello"): { x: string; hello: string };
>Symbol.iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>Symbol : SymbolConstructor, Symbol(Symbol,Decl(lib.d.ts,1186,52),Decl(lib.d.ts,1262,11))
>iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>x : "hello", Symbol(x,Decl(symbolProperty41.ts,2,22))
>x : string, Symbol(x,Decl(symbolProperty41.ts,2,36))
>hello : string, Symbol(hello,Decl(symbolProperty41.ts,2,47))

    [Symbol.iterator](x: any) {
>Symbol.iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>Symbol : SymbolConstructor, Symbol(Symbol,Decl(lib.d.ts,1186,52),Decl(lib.d.ts,1262,11))
>iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>x : any, Symbol(x,Decl(symbolProperty41.ts,3,22))

        return undefined;
>undefined : undefined, Symbol(undefined)
    }
}

var c = new C;
>c : C, Symbol(c,Decl(symbolProperty41.ts,8,3))
>new C : C
>C : typeof C, Symbol(C,Decl(symbolProperty41.ts,0,0))

c[Symbol.iterator]("");
>c[Symbol.iterator]("") : { x: string; }
>c[Symbol.iterator] : { (x: string): { x: string; }; (x: "hello"): { x: string; hello: string; }; }
>c : C, Symbol(c,Decl(symbolProperty41.ts,8,3))
>Symbol.iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>Symbol : SymbolConstructor, Symbol(Symbol,Decl(lib.d.ts,1186,52),Decl(lib.d.ts,1262,11))
>iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>"" : string

c[Symbol.iterator]("hello");
>c[Symbol.iterator]("hello") : { x: string; hello: string; }
>c[Symbol.iterator] : { (x: string): { x: string; }; (x: "hello"): { x: string; hello: string; }; }
>c : C, Symbol(c,Decl(symbolProperty41.ts,8,3))
>Symbol.iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>Symbol : SymbolConstructor, Symbol(Symbol,Decl(lib.d.ts,1186,52),Decl(lib.d.ts,1262,11))
>iterator : symbol, Symbol(SymbolConstructor.iterator,Decl(lib.d.ts,1236,31))
>"hello" : string

