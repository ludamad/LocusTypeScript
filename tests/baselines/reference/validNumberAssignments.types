=== tests/cases/conformance/types/primitives/number/validNumberAssignments.ts ===
var x = 1;
>x : number, Symbol(x,Decl(validNumberAssignments.ts,0,3))
>1 : number

var a: any = x;
>a : any, Symbol(a,Decl(validNumberAssignments.ts,2,3))
>x : number, Symbol(x,Decl(validNumberAssignments.ts,0,3))

var b: Object = x;
>b : Object, Symbol(b,Decl(validNumberAssignments.ts,3,3))
>Object : Object, Symbol(Object,Decl(lib.d.ts,92,1),Decl(lib.d.ts,223,11))
>x : number, Symbol(x,Decl(validNumberAssignments.ts,0,3))

var c: number = x;
>c : number, Symbol(c,Decl(validNumberAssignments.ts,4,3))
>x : number, Symbol(x,Decl(validNumberAssignments.ts,0,3))

enum E { A };
>E : E, Symbol(E,Decl(validNumberAssignments.ts,4,18))
>A : E, Symbol(E.A,Decl(validNumberAssignments.ts,5,8))

var d: E = x;
>d : E, Symbol(d,Decl(validNumberAssignments.ts,6,3))
>E : E, Symbol(E,Decl(validNumberAssignments.ts,4,18))
>x : number, Symbol(x,Decl(validNumberAssignments.ts,0,3))

var e = E.A;
>e : E, Symbol(e,Decl(validNumberAssignments.ts,7,3))
>E.A : E, Symbol(E.A,Decl(validNumberAssignments.ts,5,8))
>E : typeof E, Symbol(E,Decl(validNumberAssignments.ts,4,18))
>A : E, Symbol(E.A,Decl(validNumberAssignments.ts,5,8))

e = x;
>e = x : number
>e : E, Symbol(e,Decl(validNumberAssignments.ts,7,3))
>x : number, Symbol(x,Decl(validNumberAssignments.ts,0,3))

