=== tests/cases/conformance/decorators/class/method/decoratorOnClassMethod2.ts ===
declare function dec<T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>, Symbol(dec,Decl(decoratorOnClassMethod2.ts,0,0))
>T : T, Symbol(T,Decl(decoratorOnClassMethod2.ts,0,21))
>target : any, Symbol(target,Decl(decoratorOnClassMethod2.ts,0,24))
>propertyKey : string, Symbol(propertyKey,Decl(decoratorOnClassMethod2.ts,0,36))
>descriptor : TypedPropertyDescriptor<T>, Symbol(descriptor,Decl(decoratorOnClassMethod2.ts,0,57))
>TypedPropertyDescriptor : TypedPropertyDescriptor<T>, Symbol(TypedPropertyDescriptor,Decl(lib.d.ts,1171,36))
>T : T, Symbol(T,Decl(decoratorOnClassMethod2.ts,0,21))
>TypedPropertyDescriptor : TypedPropertyDescriptor<T>, Symbol(TypedPropertyDescriptor,Decl(lib.d.ts,1171,36))
>T : T, Symbol(T,Decl(decoratorOnClassMethod2.ts,0,21))

class C {
>C : C, Symbol(C,Decl(decoratorOnClassMethod2.ts,0,126))

    @dec public method() {}
>dec : <T>(target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T>, Symbol(dec,Decl(decoratorOnClassMethod2.ts,0,0))
>method : () => void, Symbol(method,Decl(decoratorOnClassMethod2.ts,2,9))
}
