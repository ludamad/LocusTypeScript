=== tests/cases/compiler/innerTypeArgumentInference.ts ===
interface Generator<T> { (): T; }
>Generator : Generator<T>, Symbol(Generator,Decl(innerTypeArgumentInference.ts,0,0))
>T : T, Symbol(T,Decl(innerTypeArgumentInference.ts,0,20))
>T : T, Symbol(T,Decl(innerTypeArgumentInference.ts,0,20))

function Generate<U>(func: Generator<U>): U {
>Generate : <U>(func: Generator<U>) => U, Symbol(Generate,Decl(innerTypeArgumentInference.ts,0,33))
>U : U, Symbol(U,Decl(innerTypeArgumentInference.ts,1,18))
>func : Generator<U>, Symbol(func,Decl(innerTypeArgumentInference.ts,1,21))
>Generator : Generator<T>, Symbol(Generator,Decl(innerTypeArgumentInference.ts,0,0))
>U : U, Symbol(U,Decl(innerTypeArgumentInference.ts,1,18))
>U : U, Symbol(U,Decl(innerTypeArgumentInference.ts,1,18))

    return Generate(func);
>Generate(func) : U
>Generate : <U>(func: Generator<U>) => U, Symbol(Generate,Decl(innerTypeArgumentInference.ts,0,33))
>func : Generator<U>, Symbol(func,Decl(innerTypeArgumentInference.ts,1,21))
}
