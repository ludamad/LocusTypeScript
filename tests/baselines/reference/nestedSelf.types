=== tests/cases/compiler/nestedSelf.ts ===
module M {
>M : typeof M, Symbol(M,Decl(nestedSelf.ts,0,0))

 export class C {
>C : C, Symbol(C,Decl(nestedSelf.ts,0,10))

   public n = 42;
>n : number, Symbol(n,Decl(nestedSelf.ts,1,17))
>42 : number

   public foo() { [1,2,3].map((x) => { return this.n * x; })}
>foo : () => void, Symbol(foo,Decl(nestedSelf.ts,2,17))
>[1,2,3].map((x) => { return this.n * x; }) : number[]
>[1,2,3].map : <U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[], Symbol(Array.map,Decl(lib.d.ts,1115,92))
>[1,2,3] : number[]
>1 : number
>2 : number
>3 : number
>map : <U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[], Symbol(Array.map,Decl(lib.d.ts,1115,92))
>(x) => { return this.n * x; } : (x: number) => number
>x : number, Symbol(x,Decl(nestedSelf.ts,3,31))
>this.n * x : number
>this.n : number, Symbol(n,Decl(nestedSelf.ts,1,17))
>this : C, Symbol(C,Decl(nestedSelf.ts,0,10))
>n : number, Symbol(n,Decl(nestedSelf.ts,1,17))
>x : number, Symbol(x,Decl(nestedSelf.ts,3,31))
 }
}


