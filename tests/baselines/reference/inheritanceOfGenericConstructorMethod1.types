=== tests/cases/compiler/inheritanceOfGenericConstructorMethod1.ts ===
class A<T> { }
>A : A<T>, Symbol(A,Decl(inheritanceOfGenericConstructorMethod1.ts,0,0))
>T : T, Symbol(T,Decl(inheritanceOfGenericConstructorMethod1.ts,0,8))

class B<T> extends A<T> {}
>B : B<T>, Symbol(B,Decl(inheritanceOfGenericConstructorMethod1.ts,0,14))
>T : T, Symbol(T,Decl(inheritanceOfGenericConstructorMethod1.ts,1,8))
>A : A<T>, Symbol(A,Decl(inheritanceOfGenericConstructorMethod1.ts,0,0))
>T : T, Symbol(T,Decl(inheritanceOfGenericConstructorMethod1.ts,1,8))

var a = new A<Date>();
>a : A<Date>, Symbol(a,Decl(inheritanceOfGenericConstructorMethod1.ts,2,3))
>new A<Date>() : A<Date>
>A : typeof A, Symbol(A,Decl(inheritanceOfGenericConstructorMethod1.ts,0,0))
>Date : Date, Symbol(Date,Decl(lib.d.ts,633,23),Decl(lib.d.ts,815,11))

var b1 = new B(); // no error
>b1 : B<{}>, Symbol(b1,Decl(inheritanceOfGenericConstructorMethod1.ts,3,3))
>new B() : B<{}>
>B : typeof B, Symbol(B,Decl(inheritanceOfGenericConstructorMethod1.ts,0,14))

var b2: B<Date> = new B<Date>(); // no error
>b2 : B<Date>, Symbol(b2,Decl(inheritanceOfGenericConstructorMethod1.ts,4,3))
>B : B<T>, Symbol(B,Decl(inheritanceOfGenericConstructorMethod1.ts,0,14))
>Date : Date, Symbol(Date,Decl(lib.d.ts,633,23),Decl(lib.d.ts,815,11))
>new B<Date>() : B<Date>
>B : typeof B, Symbol(B,Decl(inheritanceOfGenericConstructorMethod1.ts,0,14))
>Date : Date, Symbol(Date,Decl(lib.d.ts,633,23),Decl(lib.d.ts,815,11))

var b3 = new B<Date>(); // error, could not select overload for 'new' expression
>b3 : B<Date>, Symbol(b3,Decl(inheritanceOfGenericConstructorMethod1.ts,5,3))
>new B<Date>() : B<Date>
>B : typeof B, Symbol(B,Decl(inheritanceOfGenericConstructorMethod1.ts,0,14))
>Date : Date, Symbol(Date,Decl(lib.d.ts,633,23),Decl(lib.d.ts,815,11))

